     This file attempts to explain some of the differences
between Unix Logo and TOPS-20 Logo.  Basically, TOPS-20 Logo is a
port of Children's Museum/LSRHS Unix Logo, using the PCC compiler
from the University of Utah.  

     The external differences are:

 . The SYS: copy of Logo is SYS:PLOGO.EXE, a shell which runs
   PS:<LOGO>LOGO.EXE, to avoid confusion with the LOGOUT command.

 . Logo does not work with the DEC EDIT editor, but it does work
   with EMACS.  You should have the command
	DEFINE EDITOR: SYS:EMACS.EXE
   in your LOGIN.CMD to make sure Logo uses EMACS in the Logo edit
   function.

 . The standard Logo editor is EMACS.  You MUST remember to save
   your edits via CTRL/X CTRL/S in EMACS.  This is especially
   important if you are merely entering the editor without giving
   it any functions to edit.  If Logo is not given an editor
   temporary file when the editor returns it will presently get
   into a wedged mode.

 . In order to get turtle graphics to work you must tell Logo
   via the emulated Unix terminal environment facility what
   terminal type you are using.  For example, if you are using a
   DEC GIGI terminal, you will need to do
	DEFINE TERM: GIGI
   at the EXEC at some point.

 . The "unix" command acts like a program name and RSCAN%
   argument to a TOPS-20 SYS: program.  For example, the command
	unix [mm bboard]
   will run the TOPS-20 MM mailsystem giving it MM's "BBOARD"
   command as an option.  The "unix" command does not try to
   emulate Unix shell commands.  Consequently Logo programs using
   the "unix" command will probably NOT be portable.

     The internal differences are:

 . Logo is organized into four directories:
   . PS:<LOGO> - LOGO.EXE and main DOC files
   . PS:<LOGO.SOURCES> - Logo sources and MIC build procedures
   . PS:<LOGO.HELP> - files for Logo's "help" and "describe"
     commands
   . PS:<LOGO.LIBRARY> - library of Logo procedures and LOGOHEAD
     program

 . The following DEC-20 assembly routines in TOPS20.MAC are used
   and hence need rewriting in any port from this version:
   . CAPINI() - enable capabilities (in particular, SC%CTC)
   . CATFILE(srcfile,dstfile) - appends contents of srcfile to
     dstfile; replaces call to Unix "cat" program
   . EXP(arg),ATAN(arg),POW(arg1,arg2),ATAN2(arg1,arg2) - jacket
     routines into appropriate Fortran library routines, to
     substitute for missing math routines in TOPS-20 PCC library

 . CTRL/C handling doesn't quite work right yet.  This is being
   worked on.
