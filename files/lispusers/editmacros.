(FILECREATED "23-SEP-83 13:40:58" {PHYLUM}<LISPUSERS>EDITMACROS.;11    9660

      changes to:  (FNS \EDIT.BQUOTIFY \EDIT.PREPARESWITCH \EDIT.BQUOTIFY.1)
		   (VARS EDITMACROSCOMS)
		   (USERMACROS BQUOTE)

      previous date: " 3-JUL-83 07:19:03" {PHYLUM}<LISPUSERS>EDITMACROS.;9)


(* Copyright (c) 1983 by Xerox Corporation)

(PRETTYCOMPRINT EDITMACROSCOMS)

(RPAQQ EDITMACROSCOMS ((* These useful EDIT macros, which everybody needs, ought to go into the 
			  statndard)
		       (FNS \EDIT.CONDCLAUSES.TO.IF \EDIT.IF.TO.CONDCLAUSES \EDIT.PREPARECOPY 
			    \EDIT.PREPARESWITCH \EDIT.BQUOTIFY \EDIT.BQUOTIFY.1)
		       (USERMACROS IFY CONDIFY COPY SWITCH BQUOTE)
		       (P (PROG (X)
				"Remove those anachronistic FIX8 and FIX9 macros!" A
				(COND ((OR (SETQ X (ASSOC (QUOTE FIX8)
							  EDITMACROS))
					   (SETQ X (ASSOC (QUOTE FIX9)
							  EDITMACROS)))
				       (SETQ EDITMACROS (DREMOVE X EDITMACROS))
				       (GO A)))))))



(* These useful EDIT macros, which everybody needs, ought to go into the statndard)

(DEFINEQ

(\EDIT.CONDCLAUSES.TO.IF
  (LAMBDA (X)                                                (* JonL "12-FEB-83 18:27")
    (PROG (L TEM)
          (to (SUB1 (LENGTH X))
	     do (if (NULL (CDAR X))
		    then                                     (* COND clause is a singleton.)
			 (SETQ L (CONS (LIST (QUOTE OR)
					     (CAAR X)
					     (AND (CDR X)
						  (\EDIT.CONDCLAUSES.TO.IF (CDR X))))
				       (CONS (QUOTE else)
					     L)))
			 (RETURN))
		(SETQ L (NCONC (REVERSE (CDAR X))
			       (LIST (QUOTE then)
				     (CAAR X)
				     (QUOTE elseif))
			       L))
		(pop X)
	     finally                                         (* Processing for last clause is unique.)
		     (SETQ L (if (NULL (CDAR X))
				 then (CONS (CAAR X)
					    (CONS (QUOTE else)
						  L))
			       else (NCONC (REVERSE (CDAR X))
					   (if (AND (CONSTANTEXPRESSIONP (CAAR X))
						    (EVAL (CAAR X)))
					       then (LIST (QUOTE else))
					     else (LIST (QUOTE then)
							(CAAR X)
							(QUOTE elseif)))
					   L))))
          (SETQ L (DREVERSE L))
          (SELECTQ (CAR L)
		   (else (if (CDDR L)
			     then (RPLACA L (QUOTE PROGN))
			   else (SETQ L (CADR L))))
		   (elseif (RPLACA L (QUOTE if)))
		   NIL)                                      (* Random degenerate cases)
          (RETURN L))))

(\EDIT.IF.TO.CONDCLAUSES
  (LAMBDA (X)                                                (* JonL "12-FEB-83 18:41")
    (OR (EQ (U-CASE (CAR X))
	    (QUOTE IF))
	(ERROR))
    (pop X)
    (PROG ((CLAUSE (LIST (pop X)))
	   (CONDITIONFLG (QUOTE THEN))
	   ITEM UITEM L TEM)
          (while (LISTP X)
	     do (SETQ ITEM (pop X))
		(SETQ UITEM (AND (LITATOM ITEM)
				 (U-CASE ITEM)))
		(if (SELECTQ CONDITIONFLG
			     (NIL (SELECTQ UITEM
					   ((ELSE
					      ELSEIF)
					     T)
					   (PROGN            (* Here's your basic collection of an item in a COND 
							     clause)
						  (push CLAUSE ITEM)
						  NIL)))
			     (THEN (SELECTQ UITEM
					    (THEN (SETQ CONDITIONFLG))
					    (THENRET (SETQ CONDITIONFLG (QUOTE ELSEIF))
						     (push L CLAUSE)
						     (SETQ CLAUSE))
					    (ERROR))
				   NIL)
			     (ELSEIF (SELECTQ UITEM
					      ((ELSE
						 ELSEIF)
						T)
					      (ERROR)))
			     (SHOULDNT))
		    then (push L (DREVERSE CLAUSE))
			 (if (EQ UITEM (QUOTE ELSE))
			     then (push L (CONS T X))
				  (RETURN)
			   else (SETQ CLAUSE (LIST (pop X)))
				(SETQ CONDITIONFLG (QUOTE THEN))))
	     finally (SELECTQ CONDITIONFLG
			      (NIL (push L (DREVERSE CLAUSE)))
			      (THEN (ERROR))
			      (ELSEIF NIL)
			      (SHOULDNT)))
          (RETURN (CONS (QUOTE COND)
			(DREVERSE L))))))

(\EDIT.PREPARECOPY
  (LAMBDA (LL)                                               (* edited: "30-JUL-82 19:00")
    (PROG ((FROM.LOCATOR (for old LL on LL until (EQ (CAR LL)
						     (QUOTE TO))
			    collect (CAR LL)
			    finally (pop LL)                 (* Flush the "TO")))
	   (I.OP (pop LL))
	   (TO.LOCATOR LL))
          (if (OR (NULL I.OP)
		  (AND (NULL FROM.LOCATOR)
		       (NULL TO.LOCATOR)))
	      then (RETURN (QUOTE ((E (QUOTE ?))))))         (* (BIND MARK (LC . FROM.LOCATOR) 
							     (S #1) _ (LC . TO.LOCATOR) (* Check for nested 
							     insertions) INSERTER __))
          (RETURN (APPEND (QUOTE (BIND MARK))
			  (AND FROM.LOCATOR (LIST (CONS (QUOTE LC)
							FROM.LOCATOR)))
			  (QUOTE ((MARK #1)
				   (S #3)
				   _))
			  (AND TO.LOCATOR (LIST (CONS (QUOTE LC)
						      TO.LOCATOR)))
			  (QUOTE ((MARK #2)))
			  (LIST (LIST (QUOTE IF)
				      (if (EQ I.OP (QUOTE N))
					  then (QUOTE (AND (LISTP (CAR #1))
							   (MEMB (CAR #1)
								 #2)))
					else (QUOTE (AND (LISTP (CAR #1))
							 (MEMB (CAR #1)
							       (CDR #2)))))
				      (QUOTE ((E (QUOTE (NESTED LOCATIONS)))))
				      (LIST (LIST (QUOTE I)
						  I.OP
						  (QUOTE (COPY #3))))))
			  (QUOTE (__))))                     (* Damn, how complicated all this is without backquote!)
      )))

(\EDIT.PREPARESWITCH
  (LAMBDA (LL)                                               (* JonL "22-SEP-83 21:25")
                                                             (* SWITCH has syntax like MOVE, but the separator word 
							     is permitted to be WITH or TO)
                                                             (* JonL "22-SEP-83 20:39")
    (PROG ((FROM.LOCATOR (for old LL on LL until (MEMB (CAR LL)
						       (QUOTE (WITH TO)))
			    collect (CAR LL)
			    finally (pop LL)                 (* Flush the WITH)))
	   (TO.LOCATOR LL))
          (if (AND (NULL FROM.LOCATOR)
		   (NULL TO.LOCATOR))
	      then (RETURN (QUOTE ((E (QUOTE ?))))))
          (RETURN (APPEND (QUOTE (BIND MARK))
			  (AND FROM.LOCATOR (LIST (CONS (QUOTE LC)
							FROM.LOCATOR)))
			  (QUOTE ((MARK #1)
				   _))
			  (AND TO.LOCATOR (LIST (CONS (QUOTE LC)
						      TO.LOCATOR)))
			  (QUOTE ((IF (OR (AND (LISTP (CAR #1))
					       (FMEMB (CAR #1)
						      (CDR L)))
					  (AND (LISTP (CAR L))
					       (FMEMB (CAR L)
						      (CDR #1))))
				      ((E (QUOTE (NESTED LOCATIONS))))
				      (UP (MARK #2)
					  (\ #1)
					  UP
					  (I 1 (PROG1 (CAAR #2)
						      (SETQ #1 (CAAR L))))
					  (\ #2)
					  UP
					  (I 1 #1)))))
			  (QUOTE (__))))                     (* Damn, how complicated all this is without backquote!)
      )))

(\EDIT.BQUOTIFY
  (LAMBDA (FORM)                                             (* JonL "23-SEP-83 13:40")
                                                             (* return either list of BQUOTE expression or NIL)
    (if (LISTP FORM)
	then (SELECTQ (CAR FORM)
		      (QUOTE (LIST (CADR FORM)))
		      (LIST (LIST (for X in (CDR FORM) join (\EDIT.BQUOTIFY.1 X (QUOTE ,)))))
		      (CONS (LIST (NCONC (\EDIT.BQUOTIFY.1 (CADR FORM)
							   (QUOTE ,))
					 (CAR (OR (\EDIT.BQUOTIFY (CADDR FORM))
						  (LIST (LIST (QUOTE ,.)
							      (CADDR FORM))))))))
		      (APPEND (LIST (NCONC (for L on (CDR FORM) until (NULL (CDR L))
					      join (\EDIT.BQUOTIFY.1 (CAR L)
								     (QUOTE ,@)))
					   (\EDIT.BQUOTIFY.1 (CAR (LAST (CDR FORM)))
							     (QUOTE ,.)))))
		      (NCONC ((LAMBDA (Z)
				 (AND Z (LIST Z)))
			       (for L X on (CDR FORM)
				  join (if (SETQ X (\EDIT.BQUOTIFY (CAR L)))
					   then (if (NULL (CDR L))
						    then X
						  else (RETURN))
					 else (LIST (QUOTE ,.)
						    (CAR L)))
				       (\EDIT.BQUOTIFY.1 (CAR L)
							 (QUOTE ,@)))))
		      (LIST@ (\EDIT.BQUOTIFY (EXPANDMACRO FORM T)))
		      NIL)
      elseif (CONSTANTEXPRESSIONP FORM)
	then (LIST FORM))))

(\EDIT.BQUOTIFY.1
  (LAMBDA (Z UNQUOTER)                                       (* JonL "22-SEP-83 21:58")
    (OR (\EDIT.BQUOTIFY Z)
	(LIST UNQUOTER Z))))
)

(ADDTOVAR USERMACROS (CONDIFY NIL (ORR ((IF (FMEMB (## 1)
						   (QUOTE (IF if)))))
				       ((ORF (IF --)
					     (if --))))
			      UP
			      (I 1 (\EDIT.IF.TO.CONDCLAUSES (## 1)))
			      1)
		     (COPY L (COMS (CONS (QUOTE COMSQ)
					 (\EDIT.PREPARECOPY (QUOTE L)))))
		     (SWITCH L (COMS (CONS (QUOTE COMSQ)
					   (\EDIT.PREPARESWITCH (QUOTE L)))))
		     (IFY NIL (F (COND (& --)
				       --)
				 T)
			  UP
			  (I 1 (\EDIT.CONDCLAUSES.TO.IF (CDR (## 1))))
			  1))

(ADDTOVAR EDITMACROS (BQUOTE NIL UP (ORR ((I 1 (OR (CONS (QUOTE BQUOTE)
							 (OR (\EDIT.BQUOTIFY (## 1))
							     (ERROR!)))
						   (ERROR!))))
					 ((E (QUOTE BQUOTE?))))
			     1))

(ADDTOVAR EDITCOMSA BQUOTE)

(ADDTOVAR EDITCOMSL COPY SWITCH)
(PROG (X)
      "Remove those anachronistic FIX8 and FIX9 macros!" A (COND ((OR (SETQ X (ASSOC (QUOTE FIX8)
										     EDITMACROS))
								      (SETQ X (ASSOC (QUOTE FIX9)
										     EDITMACROS)))
								  (SETQ EDITMACROS (DREMOVE X 
										       EDITMACROS))
								  (GO A))))
(PUTPROPS EDITMACROS COPYRIGHT ("Xerox Corporation" 1983))
(DECLARE: DONTCOPY
  (FILEMAP (NIL (1080 8477 (\EDIT.CONDCLAUSES.TO.IF 1092 . 2521) (\EDIT.IF.TO.CONDCLAUSES 2525 . 4013) (\EDIT.PREPARECOPY 4017 . 5451)
 (\EDIT.PREPARESWITCH 5455 . 6921) (\EDIT.BQUOTIFY 6925 . 8301) (\EDIT.BQUOTIFY.1 8305 . 8474)))))
STOP

