(FILECREATED "17-Jul-84 02:30:05" <LISPUSERS>PASSWORDS.10.2 12243  

      changes to:  (VARS PASSWORDSCOMS)

      previous date: "15-Jul-84 16:41:45" <LISPUSERS>PASSWORDS.10.1)


(* Copyright (c) 1984 by Xerox Corporation)

(PRETTYCOMPRINT PASSWORDSCOMS)

(RPAQQ PASSWORDSCOMS [(FNS LOGIN SETPASSWORD \INTERNAL/GETPASSWORD \LOGIN.READ \ADJUST.USERNAME 
			   \ENCRYPT.PWD \DECRYPT.PWD)
		      [DECLARE: DONTEVAL@LOAD COPYWHEN (NEQ (COMPILEMODE)
							    (QUOTE D))
				(* INTERLISP-D handles this special)
				(ADDVARS (BEFORESYSOUTFORMS (CLRHASH LOGINPASSWORDS))
					 (BEFOREMAKESYSFORMS (CLRHASH LOGINPASSWORDS]
		      (P (MOVD? (QUOTE NILL)
				(QUOTE CLBUFS))
			 (MOVD? (QUOTE NILL)
				(QUOTE CREATE.MONITORLOCK)))
		      [INITVARS (LOGINPASSWORDS (LIST (HARRAY 8)))
				(\GETPASSWORD.LOCK (CREATE.MONITORLOCK "GetPassword"))
				(DEFAULTREGISTRY)
				(\AFTERLOGINFNS)
				(PASSWORDPROMPTREGION (QUOTE (262 466 500 100]
		      (DECLARE: EVAL@COMPILE DONTCOPY (GLOBALVARS LOGINPASSWORDS USERNAME 
								  \GETPASSWORD.LOCK DEFAULTREGISTRY 
								  \AFTERLOGINFNS PASSWORDPROMPTREGION)
				(PROP DMACRO EMPASSWORDLOC)
				(EXPORT (MACROS \DECRYPT.PWD.CHAR))
				(LOCALVARS . T))
		      (COMS (* Here is the real PROMPTFORWORD stuff)
			    (FNS)
			    (INITVARS (\PROMPTFORWORD.CURSOR NIL))
			    (DECLARE: EVAL@COMPILE DONTCOPY (CONSTANTS (\PROMPTFORWORD.BUFFERSIZE
									 256))
				      (GLOBALVARS \PROMPTFORWORDTTBL \PROMPTFORWORD.BUFFER 
						  \PROMPTFORWORD.LOCK \PROMPTFORWORD.TIMER 
						  \PROMPTFORWORD.CURSOR)
				      (SPECVARS TERMINCHARS.LST))
			    (DECLARE: DONTEVAL@LOAD DOCOPY (INITVARS (\PROMPTFORWORDTTBL NIL)
								     (\PROMPTFORWORD.BUFFER NIL)
								     (\PROMPTFORWORD.LOCK
								       (CREATE.MONITORLOCK 
										  "PromptForWord"))
								     (\PROMPTFORWORD.TIMER
								       (SETUPTIMER 0])
(DEFINEQ

(LOGIN
  [LAMBDA (HOST FLG DIRECTORY MSG)                          (* JonL "19-JUL-83 04:13")
                                                            (* Hacked by bvm " 2-MAR-83 12:42")

          (* Forces a login at HOST optionally connecting to DIRECTORY, and returns the name logged in.
	  MSG is optional message string to print before asking)


    (CAR (\INTERNAL/GETPASSWORD HOST (NEQ FLG (QUOTE QUIET))
				DIRECTORY MSG])

(SETPASSWORD
  [LAMBDA (HOST USER PASSWORD DIRECTORY)                    (* lmm "15-Jul-84 01:52")
    (PROG [(INFO (GETHASH HOST LOGINPASSWORDS))
	   (ENCRYPTED (\ENCRYPT.PWD (CONCAT PASSWORD]
          [COND
	    [DIRECTORY (RPLACD (OR INFO (SETQ INFO (PUTHASH HOST (CONS)
							    LOGINPASSWORDS)))
			       (CONS (CONS (MKATOM DIRECTORY)
					   ENCRYPTED)
				     (CDR INFO]
	    (T (FRPLACA (OR INFO (PUTHASH HOST (CONS)
					  LOGINPASSWORDS))
			(CONS (MKATOM USER)
			      ENCRYPTED]
          (RETURN HOST])

(\INTERNAL/GETPASSWORD
  [LAMBDA (HOST ALWAYSASK DIRECTORY MSG DEFAULTNAME)        (* lmm "15-Jul-84 16:38")

          (* returns (name . password) with which to login (or connect if DIRECTORY given) at HOST, performing an alto-style 
	  login if necessary, or if ALWAYSASK is true. MSG is optional message string to print before asking)


    (PROG ((INFO (GETHASH HOST LOGINPASSWORDS))
	   INFOCHANGED PWD NAME/PASS NEWNAME/PASS DISKNAME RESULT)
          (COND
	    ([AND (NOT ALWAYSASK)
		  (SETQ NAME/PASS (COND
		      (DIRECTORY (ASSOC DIRECTORY (CDR INFO)))
		      (T (CAR INFO]                         (* We already have login info)
	      (RETURN NAME/PASS)))
          [SETQ RESULT (CAR (NLSETQ (PROG (PWD NEWNAME/PASS DISKNAME)
				          (COND
					    (DIRECTORY (OR INFO (SETQ INFO (PUTHASH HOST (CONS)
										    LOGINPASSWORDS)))
						       [SETQ NEWNAME/PASS (COND
							   ((NULL ALWAYSASK)
                                                            (* First time, guess that no password is needed)
							     (CONS DIRECTORY ""))
							   (T (\LOGIN.READ HOST DIRECTORY MSG T]
						       [COND
							 (NEWNAME/PASS (COND
									 [(AND NAME/PASS (EQ (CAR NAME/PASS)
											     (CAR NEWNAME/PASS)))
									   (RPLACD NAME/PASS (\ENCRYPT.PWD (CDR NEWNAME/PASS]
									 (T (RPLACD INFO (CONS (CONS (CAR NEWNAME/PASS)
												     (\ENCRYPT.PWD (CDR 
														   NEWNAME/PASS)))
											       (CDR INFO]
						       (RETURN NEWNAME/PASS))
					    (T (SETQ DISKNAME (USERNAME NIL T T))
					       (SETQ DEFAULTNAME (OR DEFAULTNAME (OR (CAAR INFO)
										     DISKNAME)))
					       [PROGN (SETQ NAME/PASS (\LOGIN.READ HOST DEFAULTNAME MSG))
						      (SETQ INFOCHANGED T)
						      (COND
							((NEQ (CAR NAME/PASS)
							      DISKNAME)
							  (COND
							    ((NULL HOST)
                                                            (* There was no password before, or user forced login)
							      (AND (GETD (QUOTE SETUSERNAME))
								   (SETUSERNAME (CAR NAME/PASS)))
							      NIL]
					       (COND
						 ((NULL HOST)
						   (CLRHASH LOGINPASSWORDS)
						   (SETQ INFO)))
					       (\ENCRYPT.PWD (CDR NAME/PASS))
					       (FRPLACA (OR INFO (PUTHASH HOST (CONS)
									  LOGINPASSWORDS))
							NAME/PASS)))
				          (RETURN NAME/PASS]
          [COND
	    ((AND INFOCHANGED RESULT)
	      (for FN in \AFTERLOGINFNS
		 do                                         (* Report change to any user packages that cache user 
							    info)
		    (APPLY* FN HOST (CAR RESULT]
          (RETURN RESULT])

(\LOGIN.READ
  [LAMBDA (HOST DEFAULTNAME MSG CONNECTFLG)                 (* lmm "15-Jul-84 16:32")
    (COND
      (MSG (printout T MSG T)))
    (RESETBUFS (RESETFORM [SETTERMTABLE (OR (TERMTABLEP LOGINTTBL)
					    (SETQ LOGINTTBL (PROG [(TT (COPYTERMTABLE (QUOTE ORIG]
							          (ECHOMODE NIL TT)
							          (CONTROL T TT)
							          (RETURN TT]
			  (PROG ((NAME DEFAULTNAME)
				 CHAR CNT)
			    TOP (COND
				  ((IGREATERP (POSITION T)
					      0)
				    (TERPRI T)))
			        (COND
				  (HOST (printout T (QUOTE {)
						  HOST "} ")))
			        (COND
				  ((EQ CONNECTFLG (QUOTE ALWAYS))
				    (PRIN1 NAME T)
				    (GO DONE)))
			        (printout T (COND
					    (CONNECTFLG "Connect to ")
					    (T "Login: "))
					  NAME)             (* start out displaying existing name as default)
			    LP  

          (* * Should the following SELECTC use syntax classes instead of absolute chars? i.e. how much should I mimic the 
	  alto exec?)


			        (SELECTC (SETQ CHAR (READC T))
					 ((LIST (CHARACTER (CHARCODE SPACE))
						(CHARACTER (CHARCODE EOL)))
                                                            (* These terminate)
					   (GO DONE))
					 [(CHARACTER (CHARCODE ^A))
                                                            (* ^A or BS)
					   [COND
					     ((NOT CNT)
					       (SETQ CNT (NCHARS (SETQ NAME (CONCAT NAME]
					   (COND
					     ((ZEROP CNT)
					       (PRIN1 (CHARACTER 7)
						      T))
					     (T (PRIN1 "\" T)
						(PRIN1 (GLC NAME))
						(SETQ CNT (SUB1 CNT]
					 ((LIST (CHARACTER (CHARCODE ^Q))
						(CHARACTER (CHARCODE ^W)))
					   (PRIN1 "_" T)    (* erase name)
					   (SETQ CNT 0)
					   (SETQ NAME ""))
					 ((QUOTE ?)         (* Give help)
					   (PRIN1 (COND
						    (CONNECTFLG "
Type <space> followed by the password for the directory
")
						    (T 

"
You are being asked for a user name and password for login.
Type <space> to accept the given user name,
<BS> to back up over it,
or type a new name, followed by <space>.

"))
						  T)
					   (GO TOP))
					 ((CHARACTER (CHARCODE ^R))
					   (GO TOP))
					 (PROGN (COND
						  ((NOT CNT)
                                                            (* First char typed is not space, etc, so assume user is
							    typing new name)
						    (PRIN1 "_ " T)
						    (SETQ NAME (CONCAT CHAR))
						    (SETQ CNT 1))
						  (T (SETQ NAME (CONCAT NAME CHAR))
						     (add CNT 1)))
						(PRIN1 CHAR T)))
			        (GO LP)
			    DONE[COND
				  (CNT                      (* A new/modified name was typed)
				       (COND
					 ((ZEROP CNT)
					   (PRIN1 " ??" T)
					   (GO TOP))
					 (T (SETQ NAME (MKATOM NAME]
			        (PRIN1 " (password) " T)
			        (RETURN (CONS NAME (PROG1 (RSTRING T)
                                                            (* Get password as string, echoing off)
							  (TERPRI T)
							  (CLEARBUF T])

(\ADJUST.USERNAME
  [LAMBDA (NAME OSTYPE)                                     (* bvm: "10-NOV-83 21:00")
    (PROG (POS)
          (SELECTQ OSTYPE
		   [(NIL IFS)
		     (COND
		       ((AND DEFAULTREGISTRY (NOT (STRPOS "." NAME)))
			 (SETQ NAME (PACK* NAME "." DEFAULTREGISTRY]
		   [LOCAL (COND
			    ((SETQ POS (STRPOS "." NAME))   (* For folks who login at the alto exec using a 
							    registry, get rid of it)
			      (SETQ NAME (SUBSTRING NAME 1 (SUB1 POS]
		   (UNIX (SETQ NAME (L-CASE NAME)))
		   [NS (COND
			 ((AND CH.DEFAULT.DOMAIN (NOT (STRPOS (QUOTE :)
							      NAME)))
			   (SETQ NAME (PACK* NAME (QUOTE :)
					     CH.DEFAULT.DOMAIN]
		   NIL)
          (RETURN NAME])

(\ENCRYPT.PWD
  [LAMBDA (STR)                                             (* lmm "15-Jul-84 16:39")

          (* * Destructively disguises the characters of STR so that passwords are not stored in clear text anywhere.
	  Decode with \DECRYPT.PWD, or macro \DECRYPT.PWD.CHAR)


    (for I from 1 do (RPLSTRING STR I (CHARACTER (LOGXOR (OR (NTHCHARCODE STR I)
							     (RETURN STR))
							 73])

(\DECRYPT.PWD
  [LAMBDA (STR)                                             (* bvm: " 3-NOV-83 22:09")
                                                            (* undoes \ENCRYPT.PWD. Easy, it being its own inverse)
    (\ENCRYPT.PWD (CONCAT STR])
)
(DECLARE: DONTEVAL@LOAD COPYWHEN (NEQ (COMPILEMODE)
				      (QUOTE D)) 



(* INTERLISP-D handles this special)



(ADDTOVAR BEFORESYSOUTFORMS (CLRHASH LOGINPASSWORDS))

(ADDTOVAR BEFOREMAKESYSFORMS (CLRHASH LOGINPASSWORDS))
)
(MOVD? (QUOTE NILL)
       (QUOTE CLBUFS))
(MOVD? (QUOTE NILL)
       (QUOTE CREATE.MONITORLOCK))

(RPAQ? LOGINPASSWORDS (LIST (HARRAY 8)))

(RPAQ? \GETPASSWORD.LOCK (CREATE.MONITORLOCK "GetPassword"))

(RPAQ? DEFAULTREGISTRY )

(RPAQ? \AFTERLOGINFNS )

(RPAQ? PASSWORDPROMPTREGION (QUOTE (262 466 500 100)))
(DECLARE: EVAL@COMPILE DONTCOPY 
(DECLARE: DOEVAL@COMPILE DONTCOPY

(ADDTOVAR GLOBALVARS LOGINPASSWORDS USERNAME \GETPASSWORD.LOCK DEFAULTREGISTRY \AFTERLOGINFNS 
	  PASSWORDPROMPTREGION)
)


(PUTPROPS EMPASSWORDLOC DMACRO [LAMBDA NIL (* lmm "24-MAR-83 06:46")
				       (fetch (IFPAGE UserPswdAddr)
					      of \InterfacePage])

(* FOLLOWING DEFINITIONS EXPORTED)


(DECLARE: EVAL@COMPILE 

(PUTPROPS \DECRYPT.PWD.CHAR MACRO ((CHAR)
				   (LOGXOR CHAR 73)))
)


(* END EXPORTED DEFINITIONS)


(DECLARE: DOEVAL@COMPILE DONTCOPY

(LOCALVARS . T)
)
)



(* Here is the real PROMPTFORWORD stuff)


(RPAQ? \PROMPTFORWORD.CURSOR NIL)
(DECLARE: EVAL@COMPILE DONTCOPY 
(DECLARE: EVAL@COMPILE 

(RPAQQ \PROMPTFORWORD.BUFFERSIZE 256)

(CONSTANTS (\PROMPTFORWORD.BUFFERSIZE 256))
)

(DECLARE: DOEVAL@COMPILE DONTCOPY

(ADDTOVAR GLOBALVARS \PROMPTFORWORDTTBL \PROMPTFORWORD.BUFFER \PROMPTFORWORD.LOCK 
	  \PROMPTFORWORD.TIMER \PROMPTFORWORD.CURSOR)
)

(DECLARE: DOEVAL@COMPILE DONTCOPY

(SPECVARS TERMINCHARS.LST)
)
)
(DECLARE: DONTEVAL@LOAD DOCOPY 

(RPAQ? \PROMPTFORWORDTTBL NIL)

(RPAQ? \PROMPTFORWORD.BUFFER NIL)

(RPAQ? \PROMPTFORWORD.LOCK (CREATE.MONITORLOCK "PromptForWord"))

(RPAQ? \PROMPTFORWORD.TIMER (SETUPTIMER 0))
)
(PUTPROPS PASSWORDS.10 COPYRIGHT ("Xerox Corporation" 1984))
(DECLARE: DONTCOPY
  (FILEMAP (NIL (1925 10235 (LOGIN 1937 . 2405) (SETPASSWORD 2409 . 2957) (\INTERNAL/GETPASSWORD 2961 . 
5686) (\LOGIN.READ 5690 . 8786) (\ADJUST.USERNAME 8790 . 9523) (\ENCRYPT.PWD 9527 . 9961) (
\DECRYPT.PWD 9965 . 10232)))))
STOP
