COMMENT <SAIL>LONG.SAI.2,  4-Oct-82 12:31:35, Edit by GERGELY;
COMMENT
   This file sets up the runtimes needed TO use LONG reals.  It simply
   uses appropriate routines FROM the FORTRAN library.  DPOW AND
   DLOGS are used by the SAIL compiler FOR the ^ construct.  They
   REQUIRE a bit OF care because they take arguments IN the opposite
   order FROM their FORTRAN equivalents.
    The other functions are turned into macros THAT CALL the existing
   SAIL runtimes IF passed REAL arguments, AND the FORTRAN double
   precision routines IF passed LONG REAL arguments.
    Note THAT at least 20A is needed TO get F10 linkage.  The rest
   OF the bits are useful FOR KL CPU's;


REQUIRE "sys:forlib.rel" LIBRARY;
REQUIRE "36A" COMPILER!SWITCHES;
REQUIRE "<><>" DELIMITERS;

EXTERNAL FORTRAN INTEGER PROCEDURE idint!(LONG REAL x);
EXTERNAL FORTRAN REAL PROCEDURE sngl!(LONG REAL x);
EXTERNAL FORTRAN LONG REAL PROCEDURE dflot!(INTEGER x);
EXTERNAL FORTRAN LONG REAL PROCEDURE dble!(REAL x);
EXTERNAL FORTRAN LONG REAL PROCEDURE dexp2!(LONG REAL base;INTEGER pow);
EXTERNAL FORTRAN LONG REAL PROCEDURE dexp3!(LONG REAL base;LONG REAL pow);
INTERNAL INTEGER PROCEDURE idint(LONG REAL x);
	BEGIN RETURN(idint!(x)) END;
INTERNAL LONG REAL PROCEDURE dfloat(INTEGER i);
	BEGIN LONG REAL z; z := dflot!(i); RETURN(z) END;
INTERNAL REAL PROCEDURE sngl(LONG REAL x);
	BEGIN RETURN(sngl!(x)) END;
INTERNAL LONG REAL PROCEDURE dble(REAL x);
	BEGIN LONG REAL z; z := dble!(x); RETURN(z) END;
INTERNAL LONG REAL PROCEDURE dpow(INTEGER x;LONG REAL y);
	BEGIN LONG REAL z; z := dexp2!(y,x); RETURN(z) END;
INTERNAL LONG REAL PROCEDURE dlogs(LONG REAL x,y);
        BEGIN LONG REAL z; z := dexp3!(y,x); RETURN(z) END;
PROCEDURE foo; BEGIN dpow(2,2); dlogs(2,2);
    dble(2.0); sngl(2);
    dfloat(2); idint(2); END;

DEFINE is!long!real(x)=<EXPR!TYPE(x) = CHECK!TYPE (LONG REAL)>;
DEFINE make!long(main,sail!ver,fortran!ver)=<
  EXTERNAL REAL PROCEDURE sail!ver(REAL x);
  EXTERNAL FORTRAN LONG REAL PROCEDURE fortran!ver(LONG REAL x);
  DEFINE main(x)=
     <IFC is!long!real(x) THENC fortran!ver(x) ELSEC sail!ver(x) ENDC>;
  >;
make!long(SIN,sin$,dsin!);
make!long(COS,cos$,dcos!);
make!long(ATAN,atan$,datan!);
make!long(SQRT,sqrt$,dsqrt!);
make!long(LOG,log$,dlog!);
make!long(EXP,exp$,dexp!);

DEFINE no!long(x,y)=<COMMENT this one isn't implemented - I haven't
			figured out how to generate an error message;>;

no!long(SIND,sind$);
no!long(COSD,cosd$);
no!long(ASIN,asin$);
no!long(ACOS,acos$);
no!long(SINH,sinh$);
no!long(COSH,cosh$);
no!long(TANH,tanh$);

EXTERNAL FORTRAN LONG REAL PROCEDURE datn2!(LONG REAL x,y);
EXTERNAL REAL PROCEDURE atan2$(REAL x,y);
DEFINE ATAN2(x,y)=<IFC is!long!real(x) OR is!long!real(y)
		    THENC datn2!(x,y)
		    ELSEC atan2$(x,y)
		   ENDC>;


REQUIRE UNSTACK!DELIMITERS;
