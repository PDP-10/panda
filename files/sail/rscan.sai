COMMENT <SAIL>RSCAN.SAI.3,  5-May-82 13:07:33, Edit by GERGELY;
ENTRY putscan,getscan;
begin
require "{}{}" delimiters;
define plotlf	= {( '5 & '12 )} ;
define lf	= {( '12 & null )};
define cr	= {('15 & null)};
define crlf	= {('15 &'12)};
define formfd	= {('14 & null)};
define proc	= {procedure};
define int 	= {integer};
define ref	= {reference};
define rec	= {recursive};
define !	= {comment};
define hellfreezes={false};
define thru	= {step 1 until};
define nullr	= {null!record};
define newr	= {new!record};
define r!p	= {record!pointer};
define r!c	= {record!class};
define numeric(x)= {(x >= "0" and x<= "9" )};
define alphabetic(x)= {(x >= "A" and x <= "Z")};
define alphameric(x)= {(alphabetic(x) or numeric(x))};
define conc(x,y) = {x} & {y};
define ddt(msg)	= {usererr(0,1,msg,"D")};
define cvgos(x)	= {"'" & cvos(x lsh -18) & ",," &cvos(x land 77777) };
define memloc(x) = {memory[location(x)]};


EXTERNAL int !skip!;

internal proc putscan(string put);
begin "putscan"
OWN string local;
local:=put&'000;
!skip!:=0;
start!code "rscan"
	move	1,local;
	jsys	'500;	! this is RSCAN jsys;
	  movem	1,!skip!;
end "rscan";
if !skip! neq 0 then erstr(!skip!,'400000);
end "putscan";

internal string proc getscan;
begin "getscan"
string foo;
integer sav;
foo:="";
while length(foo)<512 do foo:=foo&" ";
!skip!:=0;
start!code "rscan"
label binlp,dun;
	setz	1,;
	jsys	'500;	! this is RSCAN JSYS;
	 movem	1,!skip!;
	move	3,1;	! move number of bytes to reg 3;
	jumple	3,dun;	 !  get out if nothing to scan;
	hrrzi	1,-1;	! from controlling terminal;
	move	4,foo;	! to the string foo;
	movem	3,sav;	! save the number of bytes;
binlp:	bin;		! read the rescan buffer;
	idpb	2,4;
	sojg	3,binlp;
dun:
	end "rscan";
if !skip! neq 0 then erstr(!skip!,'400000);
return(foo[1 for sav]);
end "getscan";

end;
