!* -*- TECO -*-!
!~FILENAME~:! !FJW's EMACS macros for general use!
FJWMAC

!& Startup BABYL:!  !S Startup for BABYL!

m(m.m & Common Startup)	    !* Do the common stuff!
fsXUName :f6 [6		    !* Get user's home directory name!

e?DSK:<6>6.BABYL;1 "n	    !* Check for BABYL file.!
   m(m.m Create Babyl File)DSK:<6>6.BABYL;1'	!* Use built-in vers.!

:i*<6>PROCESSED-MAIL.BABYL;1m.vBabyl O Filenamew	    !* Set default!

<m(m.m BABYL)DSK:<6>6.BABYL;1  !* and run it!
164000.fsexit>			    !* then kill self.!


!USER BABYL:!  !C  Setup for BABYL Dump!

m(m.m & Common BABYL Setup)
:i*Babylm.vEditor Namew
:i*BABYL.EXEm.vDumped EMACS Namew


!& Startup ZBABYL:!  !S Startup for ZBABYL!

m(m.m & Common Startup)	    !* Do the common stuff!
fsXUName :f6 [6		    !* Get user's home directory name!

e?DSK:<6>6.BABYL;1 "n	    !* Check for BABYL file.!
   m(m.m Create Babyl File)DSK:<6>6.BABYL;1'	!* Use built-in vers.!

:i*<6>PROCESSED-MAIL.BABYL;1m.vBabyl O Filenamew	    !* Set default!

<m(m.m BABYL)DSK:<6>6.BABYL;1  !* and run it!
164000.fsexit>			    !* then kill self.!


!USER ZBABYL:!  !C  Setup for ZBABYL Dump!

m(m.m & Common BABYL Setup)
m(m.m Load Library) ZBABYL
:i*ZBabylm.vEditor Namew
:i*ZBABYL.EXEm.vDumped EMACS Namew


!& Common BABYL Setup:!  !S Common setup for BABYL Dump!

0m.vNext Screen Context Linesw	    !* No overlap between screenfuls!
1m.vBabyl Autolabel Messagesw	    !* Turn on Auto labeling!
1m.vBabyl Require Subjectsw	    !* Require Subjects !
1m.vBabyl F Controlw			!* Prompt for To and edit!

@:i*| 1,m(m.m& Label Babyl Message)forwarded |m.vBabyl F Done Hookw
@:i*| m(m.m& Babyl O Done Hook) |m.vBabyl O Done Hookw
@:i*| m(m.m& Babyl R Done Hook) |m.vBabyl R Done Hookw
@:i*| F m(m.m& Babyl Command Hook) |m.vBabyl Command Hookw

@:i*|
"n
    :ftNew Mail:


    99999m(m.mSurvey Unseen Messages)
    m(m.m& Babyl Set Mode Line) fr'
|m.vBabyl G1 Done Hookw

@:i*|
m(m.mProcess)
m(m.m& Ask Yes/No)Review Reminders?"n

:ftReminders:


m(m.mSurvey Reminders)
m(m.m& Babyl Set Mode Line) fr'
"n
    ft
New Mail:


    99999m(m.mSurvey Unseen Messages)
    m(m.m& Babyl Set Mode Line) fr'

qBabyl G1 Done HookuBabyl G Done Hookw
|m.vBabyl G Done Hookw

m(m.m Load Library) BABYL
m.m^R Redisplay Windowm.vMM # Babyl ^Lw


!& Babyl Command Hook:! !S Modeline displays before message.!

 -1"e					!* Before message redisplay.!
	fr'				!* Display mode line before message.!

!# Babyl _:!  !C# Label msg with RemindNow!

f@m(m.m Remind Me Of This Message)w


!# Babyl %:! !C# Move to nth previous message with some label.!

-@m(m.mNext Labeled Message)w	!* Be sure to return NO value that!
					!* the Babyl arg gets flushed.!

!& Ask Yes/No:! !S Read in a yes or no answer.
Clears echo area and prompts with STRARG (Y or N)?
!

[0				    !* Push 0!
:i0			    !* 0: Prompt!

!Retry!				    !* Retry tag!
:i*C0 (Y or N): fsEchoDisplayw	!* Display prompt!
fi:fc[1				    !* 1: Response character!
@ft
				    !* Display CRLF!
q1f YN"l @fg oRetry'	    !* If not a Y or N, reprompt.!
q1-Y"e -1'0

!^R Redisplay Window:! !^R without moving it.
Without argument simply redisplays the window.
With an argument, tries to choose new window putting point on numargth line.
Negative args count from the bottom.
C-U as argument redisplays the line containing point.!

ff"efswindow(f+)fswindoww'

FSRGETTY"E
M(FS^RINIT)'
FS^RARGP&6"E
-1,(FS^RVPOS)FSTYOHASHWH'
@:F
0

!USER FORMS:! !C Setup for FORMS Dump!

m(m.mLoad Library)FORMS	    !* As it says!
:i*Formsm.vEditor Namew
:i*FORMS.EXEm.vDumped EMACS Namew


!& Startup Forms:!  !S Startup for FORMS!

[2
m(m.m & Common Startup)
m(m.m & Get Form Name)u2	    !* Get form name!
m(m.m Load Library) 2	    !* Load that Library!
<m(m.m Write 2)		    !* and run it!
164000.fsexit>


!USER FMAN:!  !C Setup for FMAN Dump!

m(m.m & Common BABYL Setup)
0m(m.mAuto Fill Mode)		    !* So as not to ruin format!
:i*FMANm.vEditor Namew
:i*FMAN.EXEm.vDumped EMACS Namew


!& Startup FMAN:!  !S Startup for FMAN!

[0
m(m.m & Common Startup)
m(m.m & Get Form Name)u0	    !* Get form name!
fsXUName :f6 [6		    !* 6: USERNAME!

e?DSK:<6>0.BABYL;1 "n	    !* Check for BABYL file.!
@FTCreating new DSK:<6>0.BABYL;1 !* Tell user.!
        iBABYL OPTIONS:
Version:4
Append
Mail: <6>0-MAIL.TXT;1
No Original

10003 {Dummy}
*** EOOH ***
Date: 31 December 1999  11:59-PST
From: 6
Re:   Dummy Message

				    !* If none, make one.!
	e[ e\ fn e^ e]		    !* Push I/O!
	etDSK:<6>0.BABYL;1	    !* Check for BABYL file.!
	eihpef	hk'		    !* and write it out.!

:i*<6>PROCESSED-0S.BABYL;1m.vBabyl O Filenamew	    !* Set default!
<M(m.m BABYL)0.BABYL;1	    !* and run it!
164000.fsexit>			    !* Then kill self!


!USER BBOARD:!  !C Setup for BBOARD Dump!

m(m.m & Common BABYL Setup)
0m(m.mAuto Fill Mode)		    !* So as not to ruin format!
:i*BBOARDm.vEditor Namew
:i*BBBOARD.EXEm.vDumped EMACS Namew


!& Startup BBOARD:!  !S Startup for BBOARD!

m(m.m & Common Startup)
<M(m.m BABYL)EMACS:BBOARD.BABYL;1   !* and run it!
164000.fsexit>			    !* Then kill self!


!& Get Form Name:!  !S Get Form Name, what else?!

[1[2
m.m & Form Help Macrof[HelpMacro
:i1Form name (or ? for list): 
7fsEchoDisplay			    !* Ring Bell!
3,m(m.m & Read Line)1u2
q2
|
!& Form Help Macro:!  !S List of Forms libraries available.!

fsQPPtr( f[BBind f[DFile erEMACS:FORMS.TYPES @y ht
	      )fsQPUnwindw		!* Display the whole list!
:i*CfsEchoDisplayw  0 fsEchoActivew    !* Clear echo area!
@ftForm name: 


!& Get Terminal Description:! !S Get terminal type and speed (Twenex Only)!

fsTTYNbr-1"e m(m.mSet Terminal)TVI912'
fsTTYNbr-2"e m(m.mSet Terminal)DM1520'
fsTTYNbr-3"e m(m.mSet Terminal)HP2645'
fsTTYNbr-4"e m(m.mSet Terminal)DM1520'
fsTTYNbr-5"e m(m.mSet Terminal)PRINTING'
fsTTYNbr-6"e m(m.mSet Terminal)TK4025'
fsTTYNbr-7"e m(m.mSet Terminal)PRINTING'
fsTTYNbr-10"e m(m.mSet Terminal)PRINTING'

0fo..qTerminal Type"n
      qTerminal Type[2w
      m(m.mSet Terminal)2w'

m(m.mSet Terminal)GLASS	    !* Start out as GLASS!

[1[2[3				    !* Push needed q-regs!
fsXUName[j			    !* J: Username!
:i3VT100			    !* 3: Default terminal type!

0fo..qDefault Terminal Type"n
      qDefault Terminal Typeu3w'
q3u2
0f[HelpMac			    !* Temporarily disable this!

7fsEchoDisplay			    !* Ring Bell!
< m(m.m& Ask Yes/No)Use 3 for Terminal Type?"e	!* Ask user!
				    !* If no, !
	m.m& TRMTYP Help MacrofsHelpMac   !* A "?" will list choices!
	:i1Terminal Type (or ? for list):  !* 1: Prompt !
	7fsEchoDisplay		    !* Ring Bell!
	3,m(m.m& Read Line)1u3' !* 3: Type !

1:< m(m.mSet Terminal)3 >;		!* Set it.!
:i*3  Unknown terminal type name
 fg q2u3>


!& TRMTYP Help Macro:!  !S Gives the list of terminal-type choices.!

fsQPPtr( f[BBind f[DFile erEMACS:EMACS.TERMINALS @y ht
	      )fsQPUnwindw		!* Display the whole list!
:i*CfsEchoDisplayw  0 fsEchoActivew    !* Clear echo area!
@ftTerminal Type: 


!& TRMSPD Help Macro:!  !S Gives list of terminal speed choices.!

:ft
One of the following:

300       1200       2400       9600

:i*CfsEchoDisplayw  0 fsEchoActivew   !* Clear echo area!
@ftTerminal Speed: 


!IVORY Setup:! !C Setup for hacking Ivory-based macro libraries!

0m(m.mAuto Fill Mode)		    !* Turn it off!
m(m.mLoad Library)IVORY	    !* and load IVORY!


!^R Display FS Flag Contents:!  !^R in echo area!

[1[2
7fsEchoDisplay			    !* Ring Bell!
1,m(m.m& Read Line)Flag name: u1  !* 1: Flag name.!
1u2				    !* 2: Contents of flag.!
fq2"l 1:\u2'			    !* If neg, then was a string!
				    !* to begin with.!
:i*C2fsEchoDisplayw	    !* Clear echo area!
0fsEchoActivew


!^R DM Return to Superior:! !^R Clears the screen first.!

f+				    !* that was easy enough.!
f m(m.m^R Return to Superior) 

!Flush Duplicate Lines:! !C Sorts buffer and removes duplicate lines.!

[1
 bj
 l bj			    !* Sort so duplicate lines are together.!
 < .-z; x1			    !* 1: Next non-duplicate line with CRLF.!
   <				    !* Point is within non-duplicate line.!
     :s
1; -k 0:l >		    !* Remove duplicates of it.!
   l >


!Fix Buffer Garbage:! !C Reformat a losing region containing ^J's, ^H's, etc.
Replace them with their visual counterparts...
 ^H deletes character before it,
 ^J inserts carriage return + whitespace
 ^M becomes CRLF.
This is undoable.  (I.e. M-X Undo<cr> brings back old region.)!

 [0[1
 bj					!* Go to top of buffer.!
 .u1 fnq1j				!* 1: Auto-restoring point.!
 hm(m.m& Save for Undo)character fix	!* Make this command undoable.!

 !* Convert LF to CRLF + whitespace: !
 j <:s
   ; rd				!* Delete stray linefeeds.!
    fsHPosu0				!* 0: Current column.  Not SHPos since!
					!* wrapping should be handled as is!
					!* visually.!
    i
   q0, i r >				!* Put in CRLF, indentation.!

 !* Backspaces delete themselves and previous character (unless at beginning!
 !* of line): !
 j <:s; 0f  -1"g -2d'>		!* ...!


 !* Convert CRs to CRLFs: !
 j <  :s
;			!* Find stray ^M.!
      -d i
     >					!* Convert to CR LF.!

 

!^R Kill Top To Here (ECC):! !^R Into ..K.!

1[9				    !* Kill forwards !
b,. m(m.m & Kill Text )
.,. 				    !* better redisplay !

!^R Kill Here To Bottom (ECC):! !^R Into ..K.!

1[9				    !* Kill forwards !
.,z m(m.m & Kill Text )
.,. 				    !* better redisplay !

!^R Fill Indented Region (ECC):! !^R Find minimum indentation in region.
Binds Fill Prefix to the minimum indentation of the lines in region.
Does an Untabify over the region before, and a Tabify afterward, so that
            indentation is canonicalized and treated rigidly.!
!* 1, NUMARG means justify instead of fill.  Note:  the ..k-saved region is
 * not really the original one, but will have been untabified.!

 fsWidth[1[2			    !* 1: minimum indentation so far.!
 f[VZ f[VB :,.f fsBoundariesw !* Bounds narrowed around region.!
 j m(m.mUntabify)		    !* All tabs to spaces.!
 j <.-z; @f l		    !* Next line, past indentation.!
    fsSHPos,q1f u1u1 l>	    !* 1: Minimum indentation so far.!
 z: j				    !* Reset region to untabbed buffer.!
 q1,32:i*[Fill Prefix		    !* Bind prefix to space indentation.!
 "n 1,'@m(m.m^R Fill Region)w    !* Fill or justify.!
 j m(m.mTabify)		    !* Back to tabs.!
 z: j				    !* Leave region around final one.!
 h

!^R Justify Indented Region (ECC):! !^R Find minimum indentation in region.!
!* See ^R Fill Indented Region (ECC) for more details.!

 1,@:m(m.m^R Fill Indented Region)

!^R Next Real Line Beginning (ECC):! !^R Inserts CRLF if end of buffer.!

 :l .-z"E			    !* If no CRLF after this line, !
    .,(<i
         > ). '		    !* ...Put one in.!
 l w 1 			    !* Else just down ARG lines.!

!^R Jump to End of Screen Text (ECC):! !^R Last non-blank line on screen.
ARG means go down from point to end of line before blank.
No ARG:
If screen is full, and last line is non-blank, then searches back for a
    blank line, and from there back to non-blank to try to put cursor on
    last non-blank line before a blank region.!

 ff"N :s


	  "L wfkcc w1 ''	    !* No next before-blank, use last line.!

 f[ vbw f[ vzw		    !* Save virtual buffer boundaries.!
 fs lines f"E fs height-(fs echolines+1)' [.0    !* .0: Height of window.!
 :f				    !* Ensure a valid window.!
 fs window [.1			    !* .1: Buffer position of window top.!
 q.1+bj				    !* Go to top of window.!
 .,z fs boundariesw		    !* Set buf boundary at window top.!
 1:< q.0-1,0 :fm :l >		    !* Go to end of last screen line.!
 fs hposu.1			    !* .1: Hpos of last line on screen.!
 .-z"E q.1"G w 1 ''		    !* Last buf line is non-blank, on screen.!
 q.1"G				    !* Last screen line is non-blank, !
    -:s

   "E  w 1 ' l'		    !* ...so look back for a blank line to!
				    !* start searching from.!
 -:s

"L c '				    !* Go back to end last non-blank line.!
				    !* If no last nonblank, stay.!
 w 1 				    !* Exit.!

!^R Paragraph To Screen Top (ECC):! !^R First line of para is put on top line.
If an ARG is given the first line of the ARGth para back is used.
MARK is left at the end of the current para.
In Lisp or InterLisp Modes, put first line of DEFUN at top line.!

 .( (f~ModeLisp)*(f~ModeInterLisp)"E  !* A Lisp mode.!
       .:F[SSTRING		    !* Using C-M-A code...!
       -:S
(()"L"L0'L''		    !* Point at defun.!

    "#				    !* Not LISP mode.!
       f^m(m.m^R Mark Paragraph)w	    !* . at first line, MARK last.!
       2 f=
      "E l''			    !* Non-blank line at top.!

    0^m(m.m^R New Window)w	    !* Put that line at top.!
    )j				    !* Point back where was.!
 w 1 

!^R Send Mail Using Babylm:!  ! AutoLoads BABYLM!

F:m(m.aBabylm& Mail Message)


!& Common Startup:!  !S Common Startup stuff.!

0fo..qDumped EMACS fsTTYMacrof"nfsTTYMacro'w

fsTTYMacrof"n[1 m1 ]1'w

0fo..qInit Vars Processed"e		!* If not yet done it, process!
      M(M.M & Process Init Vars)	!* EMACS.VARS.!
      1m.vInit Vars Processedw'	!* Do not do it again.!

m(m.m & Get Terminal Description)	!* Get terminal type.!

fsXUName :f6 [6			!* Get user's home directory name!

:i*6m.vBabyl CC Tow		    !* Force auto-Cc of these!
:i*6m.vCC Tow		    !* Same for SEND!
etDSK:fsHSnamefsDSnamew	    !* Make sure directory defaults to user!

!* On non-meta keyboards, allow Alt 1 2 to mean an arg of 12.!

FS %TOFCI"E			    !* If terminal has Meta-key...!
      M.M ^R Autoarg[0 460.-1[1
      10< Q0,%1^ FS ^R CMAC>  Q0U..-'


!& Make Auto-Save Filename:!  !S Inserts buffer name to save name.!

0FO..QAuto Save Same Filename"E    !* Create new autosave!
				    !* filename for this buffer !
      fsDFN1:f6[4			!* Get FN1 (Buffer name)!
      fsMSName:F6[5			!* Get user name !
      :I*DSK:5AUTOSAVE.4.0M.LAuto Save Filenames'


!& Startup EMACS:!  !S Startup for EMACS!

m(m.m & Common Startup)
m(m.m Kill Variable)MM & Slow Old Minibuffer
m(m.m & SetUp SLOWLY Library)	    !* For some reason...!
m(m.m Load Library)MODLIN	    !* and load TNX version!

1:<QFind File Inhibit Write m.vInhibit Write>

FQ(0FO..QAuto Save Filenames)-1"L
      fsMSName:F6[0
      :I*DSK:0AUTOSAVE.MAIN;0 m.vAuto Save Filenames ]0'

@:i*| m(m.m& Make Auto-Save Filename) |m.vBuffer Creation Hookw

fsXUName:F6[J
ETJ.;0 ]J
fsMSNamefsDSName

0[0 0[1 0[2

fsXJName:f6[J				!* J: Job name, as a string.!
F[DFILE

f~jHERMES"E
    f=Editor Type[Hermes]"N 
        1,m(m.m & Get Library Pointer)HERMES"e
            m(m.m Load Library)HERMES''
    '

F~jMM"E
    f=Editor TypeMMAIL"N 
        1, m(m.m & Get Library Pointer)MMAIL"e
            M(M.M Load Library)MMAIL'''

F]DFILE

!* Process the JCL!

Z"E					!* Get JCL, or use whatever previous!
    FJ J @F				!*  init file left in buffer.!
    K'
					!* Flush leading spaces and CRLF!
					!* if line is empty.!

ZJ ."N					!* Process JCL command -!
					!*  extract filenames and commands!
       0,0A-
"E -D'			!* REMOVE CR AND LF AT END IF ANY *!
       0,0A-"E -D'
       J :S"N .,Z@FX1 -D'		!* IF COMMANDS TO EXECUTE,!
					!*  PUT THEM IN Q1!

       J 7 F~(FILE) "E 7D'		!* Delete stupid noise word.!
       J < :S !; -D .,(S! .)K >	!* Delete stupid confirmations.!
					!* Printing them out is reasonable,!
					!* passing them to EMACS is stupid.!

       :S  B,.FX0			!* If name of file to read, put in Q0.!

       < @F K
         11 F~(OUTPUT AS)"E 11D'	!* Delete (OUTPUT AS) if stupid EXEC!
					!*  fed it to us.!
	 "# 0,1A-["E .,(S] .)K'	!* Delete any confirmation string!
	    "# 0;'' >			!* If we delete one, check for others.!

       Z"N HFX2'			!* If name of file to output as,!
					!*  put in Q2.!
       '

    HK 0FS MODIFIEDw 0FS XMODIFIED
    0FO..Q Inhibit Help Message"E
      Q0"E Q1"E				!* If no commands or file to read,!
					!*  offer help.!

      m(m.m Print FJWMAC Greeting)	!* Stolen from ECC!
      0fsModifiedw			!* Mark buffer as not modified.!
      FR				!* Show ModeLine now!
      '''
      FQ0-1"L Q1"N M1'			!* No file specified => execute!
      '				!*  commands from JCL and return.!

    1:<					!* maybe we got an unwanted version #.!
      Q0F[ DFILE 0 FS DVERSU3		!* So open to the highest version,!
      ER EC
      FS IF VERS-Q3"N Q3 FS DVERS'	!* and if it is the version we got,!
      FS DFILE U0 F]D FILE'		!* return the file with!
      >					!*  a zero version.!

    0fo..qTags Find File"e
	QInhibit Write,M(M.M Visit File)0'      !* Visit specified file.!
    "# m(m.mFind File)0'		!* unless user usually!
					!*  likes Find File,!
					!* in which case use that instead.!

    Q2"N Q2F[ DFILE 0 FS DVERS
         FS DFILEU2 F]D FILE		!* Reset version number defaults.!
	 M(M.M Set Visited Filename)2'	!* Set filename as specified.!

    Q1"N M1'				!* If JCL held commands, execute them.!
    

!Print FJWMAC Greeting:! !C Salutations and such, saved...
... in Greeting Message. 
Probably ought to print stuff other parts of startup have put in some
variable, e.g. Accumulated Greeting Message.???

Sample greeting:
Teco.1394  EMACS.129  Uptime = 5 days, 2:27:54.  Run-time = 377.688 secs.!

 f[BBindw			    !* Temporary buffer.!

 iTECO. fsVersion\ i  	    !* TECO Version.!
 iEMACS. qEMACS Version\ i      !* EMACS Version.!
 (fsUpTime)-(1000*60*60*1)"l iWatch out!!
 7fsEchoDisplay '		    !* Warning if uptime under 1 hr.!
 iUp:  fsUpTimeu4		    !* 4: Up time in 1000ths!
 q4/(1000*60*60*24)u5		    !* 5: Up time days.!
 q5-1"g q5\ i days,  '		    !* Show days if 1 or more.!
 q5-1"e i1 day,  '		    !* ...!
 q4-(q5*1000*60*60*24)u4	    !* 4: Up time h/m/s in 1000ths!
 q4/(1000*60*60)u5 q5\		    !* 5: Insert up time hours.!
 i: (q4-(q5*1000*60*60))u4	    !* 4: Up time m/s in 1000ths!
 q4/(1000*60)u5 q5\		    !* 5: Insert up time minutes.!
 -1a-:"e r i0 c'		    !* Ensure minutes takes 2 digits.!
 i: (q4-(q5*1000*60))/1000\	    !* Insert up time seconds.!
 -1a-:"e ri0w c'		    !* Ensure seconds takes 2 digits.!
 i.  Run-time: 
 fsRunTime m(m.m& Insert Seconds)
 i secs.  LD:  fsLoadAvu5 i5
				    !* Insert RunTime and Load Average!
 hx* m.vGreeting Messagew	    !* Save and...!
 ht				    !* ...print the greeting.!
 

!& Insert Seconds (ECC):! !S Insert in seconds an ARG in milliseconds.!

 .f[VB fsZ-.f[VZ		    !* Bound buffer to nothing.!
 3,\				    !* Insert millisecs, at least 3 chars.!
 3r i.				    !* Now seconds with decimals.!
 r <0,0a- "E -d'"# b-.; r'>	    !* All spaces before dot are deleted.!
 <:s ;0>			    !* All spaces after dot become 0s.!
 zj 

!& Setup FJWMAC Library:! !S Do initial hackery for User
Change some defaults

^X^Z = ^R DM Return to Superior
^XM  = ^R Send Mail Using BABYLM
^X^Y = ^R Display FS Flag Contents
^XT  = ^R Kill Top to Here (ECC)
^XZ  = ^R Kill Here to Bottom (ECC)
^XJ  = ^R Fill Indented Region (ECC)
^XS  = ^R Jump to End of Screen (ECC)
^X^A = ^R Paragraph to Screen Top (ECC)
^XV  = ^R Next Real Line Beginning (ECC)
M-SP = ^R Set/Pop Mark

!

m(m.m Load Library) SLOWLY	    !* Load up RWK's SLOWLY Macro Library!
m(m.m Load Library) PHRASE	    !* Load the PHRASE Library!
m(m.m Load Library) TMACS	    !* Load the TMACS Library!
m(m.m Load Library) COMPLT		!* Load the COMPLT Library!

m.m^R DM Return to superior u:.x()	    !* Redefines ^X^Z !
m.m^R Send Mail Using Babylm u:.x(M)	    !* Redefines ^XM!
m.m^R Redisplay Window u.L		!* Redefines ^L !

!* The following definitions are on currently undefined characters.!

m.m^R Display FS Flag Contents u:.x()  !* ^X^Y !

m.m^R Kill Top to Here (ECC) u:.x(T)	    !* ^XT !
m.m^R Kill Here to Bottom (ECC) u:.X(Z)  !* ^XZ !
m.m^R Fill Indented Region (ECC) u:.X(J) !* ^XJ !
m.m^R Justify Indented Region (ECC) u:.X(
)	    !* ^X^J !
m.m^R Jump to End of Screen Text (ECC) u:.X(S)   !* ^XS !
m.m^R Paragraph to Screen Top (ECC) u:.X()	    !* ^X^A !
m.m^R Next Real Line Beginning (ECC) u:.X(V)	    !* ^XV !
m.m^R Set/Pop Mark u.. w		!* M-SP !

36.fs:etmode			    !* Default all except version!
:i*Textm.vDefault Major Modew	    !* New for EMACS 144!
:i*BABYLm.vMail Reader Libraryw   !* So ^XR gets BABYL!
90fs%end			    !* ELLEN's fix for adding text to end!
1m(m.m Auto Fill Mode)		    !* Turn on Auto-Fill Mode!
m(m.m Text Mode)		    !* Turn on Text Mode!
70U Fill Column		    !* Set fill column to 70!
0m.vBabyl Dont Reply Tow	    !* So CC not stripped!
1m.vBabyl Require Subjectsw	    !* CYA...!
5m.vBabyl Survey FROM/TO Controlw  !* Enable prettification and strip hosts!
1m.vTime Onlyw			    !* Just time on modeline (not date)!
1fsEchoErrors			    !* Force error msgs into echo area!
2m.vEcho Area Heightw		    !* Force echo area size to one line!

 [1 fsXJName:f6[J		    !* J: Job name, as a string.!
 1,m.mUSER ju1		    !* 1: 0 or Job JOBNAME command.!
 q1"n				    !* If a special name...!
      m1'			    !* Transfer to command for this jobname.!

0fsQPUnwindw			    !* Unwind stack!
m(m.m Dump EMACS)		    !* and dump it!
164000.fsexit			    !* then kill self.!

