(FILECREATED "22-FEB-82 16:17:05" <NEWLISP>CODEFORMAT.;1 35739  

     changes to:  CHANGENAME1 RELINK2 CALLS2

     previous date: "21-FEB-80 10:56:11" <LISP>CODEFORMAT.;17)


(PRETTYCOMPRINT CODEFORMATCOMS)

(RPAQQ CODEFORMATCOMS [[DECLARE: FIRST (P (MAPC (QUOTE (LAPRD BINRD FNTYP ARGLIST1 LINKBLOCK))
						(FUNCTION (LAMBDA (FN)
								  (OR (FMEMB FN NOSWAPFNS)
								      (SETQ NOSWAPFNS
									    (CONS FN NOSWAPFNS]
		       (FNS * CODEFORMATFNS)
		       (BLOCKS * CODEFORMATBLOCKS)
		       (DECLARE: DOEVAL@COMPILE (PROP MACRO COREVAL OPD)
				 DONTCOPY
				 (PROP MACRO OBIN OBOUT OSFBSZ OSIN ONIN ORFPTR OSFPTR CGETD 
				       PRFNOPENADR))
		       (DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS
				 (ADDVARS (NLAMA)
					  (NLAML OPD COREVAL NOLINKDEF1)
					  (LAMA])
(DECLARE: FIRST 
[MAPC (QUOTE (LAPRD BINRD FNTYP ARGLIST1 LINKBLOCK))
      (FUNCTION (LAMBDA (FN)
			(OR (FMEMB FN NOSWAPFNS)
			    (SETQ NOSWAPFNS (CONS FN NOSWAPFNS]
)

(RPAQQ CODEFORMATFNS (LAPRD BINRD BINSKIP BINFIX DOVARLINK DOLINK ARGLIST CGETD CHANGENAME1 
			    CHANGENAME2 DEFC FIRSTLIT FNTYP FNTYP1 LASTLIT+1 NARGS NFRVARS RELINK 
			    RELINK1 RELINK2 NOLINKDEF1 CALLSCCODE CALLS1 CALLS2 MAKELIST PRFNOPENADR 
			    COREVAL OPD))
(DEFINEQ

(LAPRD
  [LAMBDA (FN)                                  (* lmm "29-AUG-78 01:33"
)

          (* A note on bootstrap: LAPRD and BINRD are defined 
	  in PUTDQ, but DOLINK is not, so thatLINKED functions
	  calls cannot be employed in BASIC until DOLINK is 
	  defined. Therefore, the initial block in BASIC 
	  defines DOLINK. It also redefines LAPRD and BINRD 
	  because in the case of linked functon calls, the 
	  defnitions for these functions use undefined 
	  functions such as FMEMB. AFter this initial block, 
	  BINRD is redefined so as to use LINKED calls.
	  CGETD, FNTYP, ARGLIST, NARGS, and NCONC1 are 
	  compiled using linked calls to facilitate 
	  (STREQUAL is included in this block because EQUAL 
	  uses it) breaking. Note that they must appear in 
	  cbasic before RELINK, which uses them.
	  also, CGETD must appear before FNTYP and FNTYP 
	  before ARGLIST. Next appears LINKBLOCK containing 
	  RELINK and DOLINK, finally EQUAL as a block.)


    (DECLARE (LOCALVARS . T))
    (PROG (LA Z)
          [COND
	    ((EQ (PEEKC)
		 (QUOTE % ))
	      (COND
		((EQ (SETQ LA (READ NIL FILERDTBL))
		     (QUOTE BINARY))
		  (RETURN (BINRD FN NIL LA)))
		((SETQ Z (GETP LA (QUOTE CODEREADER)))
		                                (* Peters hook for 
						interfacing byte 
						compiler.)
		  (RETURN (APPLY* (CAR Z)
				  FN NIL LA]
          (ERROR "Bad compiled function" FN])

(BINRD
  [LAMBDA (FN FILE)                             (* lmm "11-SEP-78 03:48"
)
    (PROG ([JFN (VAG (OPNJFN (OR FILE (INPUT]
	   LA PLITORG LEN DF ENTRY CVALS VAL PTR)
          (READC FILE)
          (OSFBSZ JFN 36)
          (SETQ LA (OBIN JFN))
          (SETQ PLITORG (OBIN JFN))
          (SETQ LEN (OBIN JFN))
          (SETQ DF (ARRAY LA PLITORG))
          (SETQ ENTRY (VAG (IPLUS (LOC DF)
				  2)))          (* Read the code.)
          (OSIN ENTRY PLITORG JFN)              (* Read the relocation 
						data.)
          (OSIN (VAG (IPLUS (LOC ENTRY)
			    LEN))
		(IPLUS LA (MINUS LEN))
		JFN)
          (FRPLACD DF (VAG (IPLUS 2 LEN)))      (* Store relocation 
						origin.)
          (RELOC DF (LOC ENTRY))
          (OSFBSZ JFN 7)                        (* Now read the literals
						and take care of linked 
						calls.)
          [PROG ((SLOC (VAG (IPLUS (LOC ENTRY)
				   PLITORG)))
		 (PLIT (VAG (IPLUS (LOC ENTRY)
				   LEN)))
		 Z)
	    C   (COND
		  ((IGREATERP (LOC PLIT)
			      (LOC SLOC))
		    (SETQ Z (READ FILE FILERDTBL))
		    [COND
		      [(LISTP Z)
			(COND
			  [(EQ (CAR Z)
			       (QUOTE LINKED-FN-CALL))
			    (DOLINK SLOC 0 (CDR Z)
				    FN T)
			    (COND
			      ((NULL (FMEMB FN LINKEDFNS))
				(SETQ LINKEDFNS (CONS FN LINKEDFNS]
			  ((EQ (CAR Z)
			       (QUOTE VARIABLE-VALUE-CELL))
			    (DOVARLINK ENTRY SLOC Z))
			  [(AND (LISTP (CDR Z))
				(EQ (CADR Z)
				    (QUOTE VARIABLE-VALUE-CELL))
				(CDDR Z))
			    (DOVARLINK ENTRY SLOC (CDR Z))
			    (FRPLACD SLOC (CAR SLOC))
			                        (* Because DOVARLINK 
						leaves the value cell 
						ptr in the CAR of SLOC.)
			    (FRPLACA SLOC
				     (COND
				       ((AND (LISTP (CAR Z))
					     (EQ (CAAR Z)
						 (QUOTE UNBOXED-NUM)))
					 (VAG (CDAR Z)))
				       (T (CAR Z]
			  (T (FRPLACA SLOC (CAR Z))
			     (FRPLACD SLOC (COND
					((EQ (CDR Z)
					     0)
					  (VAG 0))
					(T (CDR Z]
		      (T (CLOSER (LOC SLOC)
				 (LOC Z]
		    [SETQ SLOC (VAG (ADD1 (LOC SLOC]
		    (GO C]
          (SETQ CVALS (READ FILE FILERDTBL))

          (* CVALS is always a list, so there cannot be a c/r 
	  hanging in anyone's input buffer at this point.)


          (OSFBSZ JFN 18)
      L1  (OR CVALS (GO OUT))
          (OR (SETQ VAL (GETP (CAR CVALS)
			      (QUOTE COREVAL)))
	      (ERROR (QUOTE "No COREVAL")
		     (CAR CVALS)))
          (SETQ VAL (VAG (LOGAND VAL 262143)))
      L2  [SETQ PTR (VAG (IPLUS (LOC DF)
				(OBIN JFN]
          (COND
	    ((EQ PTR DF)
	                                        (* I.E. WAS 0 READ)
	      (SETQ CVALS (CDR CVALS))
	      (GO L1)))
          [FRPLACA PTR (VAG (IPLUS (OPENR (LOC PTR))
				   (LOC VAL]
          (GO L2)
      OUT (OSFBSZ JFN 7)
          (DEFC FN ENTRY])

(BINSKIP
  [LAMBDA (FN FLG FILE1 FILE2 TAG)              (* lmm: 
						"31-AUG-76 01:44:58")

          (* Skip one function on FILE1 if FLG=NIL, copy from 
	  FILE1 to FILE2 if FLG=T.)


    (PROG ([JFN1 (VAG (OPNJFN (OR FILE1 (INPUT]
	   [JFN2 (AND FLG (VAG (OPNJFN (OR FILE2 (OUTPUT]
	   LA PLITORG LEN CVALS NVALS RL)
          (DECLARE (SPECVARS)
		   (LOCALVARS . T))
          (READC FILE1)
          (OSFBSZ JFN1 36)
          (SETQ LA (OBIN JFN1))
          (SETQ PLITORG (OBIN JFN1))
          (SETQ LEN (OBIN JFN1))
          [COND
	    (FLG (PRIN2 FN FILE2 FILERDTBL)
		 (SPACES 1 FILE2)
		 (PRINT TAG FILE2 FILERDTBL)
		 (OSFBSZ JFN2 36)
		 (OBOUT LA JFN2)
		 (OBOUT PLITORG JFN2)
		 (OBOUT LEN JFN2)
		 (FRPTQ (IPLUS PLITORG (IDIFFERENCE LA LEN))
			(OBOUT (OBIN JFN1)
			       JFN2))
		 (OSFBSZ JFN2 7))
	    (T (OSFPTR JFN1 (IPLUS (ORFPTR JFN1)
				   PLITORG
				   (IDIFFERENCE LA LEN]
          (OSFBSZ JFN1 7)
          [COND
	    (FLG (FRPTQ (IDIFFERENCE LEN PLITORG)
			(PRINT (READ FILE1 FILERDTBL)
			       FILE2 FILERDTBL))
		 (COND
		   ((SETQ CVALS (READ FILE1 NIL FILERDTBL))
		     (PRIN2 CVALS FILE2 FILERDTBL))
		   (T (PRIN1 (QUOTE %(%))
			     FILE2)))
		 (SETQ NVALS (FLENGTH CVALS))
		 (OSFBSZ JFN2 18))
	    (T (FRPTQ (IDIFFERENCE LEN PLITORG)
		      (SKREAD FILE1))
	       (PROG NIL
		     (SETQ NVALS 0)
		 S1  (COND
		       ((NEQ (OBIN JFN1)
			     40)
			                        (* Left paren, start of 
						CVALS list.)
			 (GO S1)))
		 S2  (COND
		       ((READ FILE1 NIL FILERDTBL)
			                        (* Go until terminating 
						right paren.)
			 (SETQ NVALS (ADD1 NVALS))
			 (GO S2]
          (OSFBSZ JFN1 18)
          (SETQ RL (COREVAL UUARG3))
      C1  (COND
	    ((EQ NVALS 0)
	      (GO OUT)))
      C2  [COND
	    [FLG (OBOUT (CLOSER (LOC RL)
				(OBIN JFN1))
			JFN2)
		 

          (* THE ODD CODE AVOIDS BOXING THE RELATIVE LOCATION 
	  OR PUTTING UNBOXED VAL ON STACK)


		 (COND
		   ((IGREATERP (OPENR (LOC RL))
			       0)
		     (GO C2]
	    (T (COND
		 ((IGREATERP (OBIN JFN1)
			     0)
		   (GO C2]
          (SETQ CVALS (CDR CVALS))
          (SETQ NVALS (SUB1 NVALS))
          (GO C1)
      OUT (OSFBSZ JFN1 7)
          (COND
	    (FLG (OSFBSZ JFN2 7)
		 (TERPRI FILE2)))
          (RETURN])

(BINFIX
  [LAMBDA (FN FILE1 FILE2)
    (PROG ([JFN1 (VAG (OPNJFN (OR FILE1 (INPUT]
	   [JFN (VAG (OPNJFN (OR FILE2 (OUTPUT]
	   (SLOC 0)
	   LA PLITORG LEN Z CVALS LITS D)
          (PRIN2 FN FILE2 FILERDTBL)
          (SPACES 1 FILE2)
          (PRINT (QUOTE BINARY)
		 FILE2 FILERDTBL)
          (OSFBSZ JFN 36)
          (OBOUT (SETQ LA (READ FILE1 FILERDTBL))
		 JFN)
          (OBOUT (SETQ PLITORG (READ FILE1 FILERDTBL))
		 JFN)
          (OBOUT (SETQ LEN (READ FILE1 FILERDTBL))
		 JFN)
          (RATOM FILE1 FILERDTBL)
      A   (OBOUT (ONIN JFN1)
		 JFN)
      A1  (SELECTQ (SETQ Z (OBIN JFN1))
		   (13 (GO A1))
		   (32 (SETQ Z (RATOM FILE1 FILERDTBL))
		       [COND
			 [(SETQ D (FASSOC Z CVALS))
			   (FRPLACD D (CONS SLOC (CDR D]
			 (T (SETQ CVALS (CONS (LIST Z SLOC)
					      CVALS]
		       (READC FILE1))
		   ((31 10))
		   (HELP))
          (SETQ SLOC (ADD1 SLOC))
          (COND
	    ((IGREATERP PLITORG SLOC)
	      (GO A)))
      C   (COND
	    ((IGREATERP LEN SLOC)
	      (SETQ LITS (CONS (READ FILE1 FILERDTBL)
			       LITS))
	      (SETQ SLOC (ADD1 SLOC))
	      (GO C)))
      B   (COND
	    ((IGREATERP LA SLOC)
	      (OBOUT (READ FILE1 FILERDTBL)
		     JFN)
	      (SETQ SLOC (ADD1 SLOC))
	      (GO B)))
          (OSFBSZ JFN 7)
          [MAPC (DREVERSE LITS)
		(FUNCTION (LAMBDA (X)
		    (PRINT X FILE2 FILERDTBL]
          (COND
	    (CVALS (PRIN2 (MAPCAR CVALS (FUNCTION CAR))
			  FILE2 FILERDTBL))
	    (T (PRIN1 (QUOTE %(%))
		      FILE2)))
          (OSFBSZ JFN 18)
          [MAPC CVALS (FUNCTION (LAMBDA (X)
		    [MAPC (CDR X)
			  (FUNCTION (LAMBDA (RL)
			      (OBOUT (IPLUS RL 2)
				     JFN]
		    (OBOUT 0 JFN]
          (OSFBSZ JFN 7)
          (TERPRI FILE2])

(DOVARLINK
  [LAMBDA (ENTRY SLOC LIT)                      (* dcl: 20 DEC 75 00:54)
    (PROG [(X (VAG (CDDR LIT]
          [CLOSER (LOC SLOC)
		  (LOC (SETQ LIT (AT2VC (CADR LIT]
      L1  (AND (EQ X (VAG 0))
	       (RETURN))
          [SETQ X (CAR (SETQ SLOC (VAG (IPLUS (LOC ENTRY)
					      (LOC X]
          (FRPLACA SLOC LIT)
          (GO L1])

(DOLINK
  [LAMBDA (BLKFN REL NM FN NOUNDOFLG)           (* lmm: 
						"31-AUG-76 01:44:18")

          (* Each linked call corresonds to two literals.
	  The second literal, whose address is given by 
	  BLKFN+REL, contains in its left half 
	  (CDR) the name of the function being called, and in 
	  the right half an appropriate coreval.
	  In the preceding literal, the right half contains 
	  the definition of the function being called.)


    (PROG (A B C)
          (SETQ C 0)
          [COND
	    ((OR (NULL FN)
		 (NULL (FGETD NM)))
	      

          (* FN=NIL corresponds to UNLINKFLG=T, meaning 
	  unlink, i.e. break all links.
	  This is done by linking them to A HOKEY DEFINITION 
	  THAT CALLS NOLINKDEF1)


	      (SETQ A (LIST (QUOTE LAMBDA)
			    (QUOTE NOLINKARGS)
			    (LIST (QUOTE NOLINKDEF1)
				  BLKFN REL NM)))
	      (SETQ B (COREVAL EXCALQ)))
	    (T
	                                        (* E (RADIX 10Q))
	      [SETQ A (CAR (VAG (ADD1 (LOC NM]
	                                        (* Gets definitin.)
	      (SETQ B
		(LOGAND (RSH [LOC (CDR (VAG (ADD1 (LOC NM]
			     11Q)
			777Q))
	                                        (* INSTR OF DEF The RSH 
						is to avoid making a 
						laage number.)
	      [SETQ B
		(COND
		  ((EQ B (LOC (OPD PUSHJ)))
		    (COREVAL CCALC))
		  (T (SETQ C
		       (LOGAND [LOC (CDR (VAG (ADD1 (LOC NM]
			       740Q))
		     (VAG (OPENR (IPLUS (LOC (COREVAL POPTAB))
					B]
	                                        (* E (RADIX 10))]
          (SETQ REL (VAG REL))
          (COND
	    ((AND (NULL (FGETD NM))
		  FN
		  (NULL NOLINKMESS))
	                                        (* Not defined.)
	      (LISPXPRIN1 (QUOTE ******)
			  T)
	      (LISPXPRIN1 NM T)
	      (LISPXPRIN1 (QUOTE " not defined when link tried from ")
			  T)
	      (LISPXPRINT FN T)))
          [COND
	    ([AND (EQ NM (FNOPENRD BLKFN (LOC REL)))
		  (EQ A (FNOPENRA BLKFN (SUB1 (LOC REL]
	                                        (* Same, don't RELINK as
						may be shared.)
	      NIL)
	    [NOUNDOFLG (FNCLOSER BLKFN (LOC REL)
				 (IPLUS (LLSH (LOC NM)
					      18)
					(LOC B)))
		       (FNCLOSER BLKFN (SUB1 (LOC REL))
				 (IPLUS (LLSH C 18)
					(LOC A]
	    (T (/FNCLOSERD BLKFN (LOC REL)
			   NM)
	       (/FNCLOSERA BLKFN (LOC REL)
			   B)
	       (/FNCLOSERA BLKFN (SUB1 (LOC REL))
			   A)
	       (/FNCLOSERD BLKFN (SUB1 (LOC REL))
			   (VAG C]
          (RETURN])

(ARGLIST
  [LAMBDA (FN)                                  (* lmm "11-SEP-78 02:13"
)
    (PROG (DEF)
          [COND
	    ((SUBRP FN)
	      (RETURN (SELECTQ (ARGTYPE FN)
			       ((0 1)
				 (SELECTQ (NARGS FN)
					  (1 (QUOTE (U)))
					  (2 (QUOTE (U V)))
					  (3 (QUOTE (U V W)))
					  (4 (QUOTE (U V W FN)))
					  (5 (QUOTE (U V W FN Y)))
					  (6 (QUOTE (U V W FN Y Z)))
					  NIL))
			       (QUOTE U]
          (SETQ DEF (COND
	      [(LITATOM FN)
		(OR (FGETD FN)
		    (GETP FN (QUOTE EXPR]
	      (T FN)))
          [RETURN
	    (COND
	      [(LISTP DEF)
		(SELECTQ (CAR DEF)
			 ([LAMBDA NLAMBDA]
			   (CADR DEF))
			 (FUNARG (ARGLIST (CADR DEF)))
			 (COND
			   ((MEMB (CAR DEF)
				  LAMBDASPLST)
			     (CADR DEF))
			   (T (GO UNDEF]
	      [(CCODEP DEF)
		(COND
		  (NIL                          (* (FBYTECODEP DEF) 
						(BYTEARGLIST DEF)))
		  (T
		    (PROG (N P A)
		          (SETQ N (LOC (FNOPENRD DEF 1)))
		          [SETQ P (IDIFFERENCE (LOC (FNOPENRA DEF 2))
					       (COND
						 ((SWPARRAYP DEF)
						   2)
						 (T (LOC DEF]
		      LP  [COND
			    ((EQ N 0)
			      (RETURN (SELECTQ (LOC (FNOPENRA DEF 1))
					       ((2 3)
						 (CAR A))
					       ((1 0)
						 A)
					       (ERROR (QUOTE 
					      "Args not available:")
						      FN]
		          (SETQ A
			    (CONS [VCTOAT (FNOPENRA
					    DEF
					    (IPLUS P (SETQ N
						     (SUB1 N]
				  A))
		          (GO LP]
	      (T (GO UNDEF]
      UNDEF
          (COND
	    ((AND (SETQ DEF (FNCHECK FN T))
		  (NEQ DEF FN))
	      (RETURN (ARGLIST DEF)))
	    (T (ERROR (QUOTE "Args not available:")
		      FN])

(CGETD
  [LAMBDA (X)
    (COND
      ((LITATOM X)
	(GETD X))
      (T X])

(CHANGENAME1
  [LAMBDA (DEF X Y FN)                                      (* rmk: "22-FEB-82 16:14")
    (COND
      ((EXPRP DEF)
	(NLSETQ (ESUBST Y X DEF)))
      ((CCODEP DEF)
	(PROG ((ADR (FIRSTLIT DEF))
	       (END (LASTLIT+1 DEF))
	       Z V TEM)
	  LP  (COND
		((IEQP ADR END)
		  (RETURN V)))
	      (SETQ Z (FNOPENRA DEF ADR))
	      (SETQ TEM (FNOPENRD DEF ADR))
	      (COND
		[(NEQ TEM (VAG 0))                          (* Block compiled function -
							    tight link.)
		  (COND
		    ((EQ TEM X)
		      (DOLINK DEF (IPLUS ADR)
			      Y FN)                         (* IPLUS is to protect ADR against the setn below)
		      (SETQ V T]
		((EQ X Z)
		  (/FNCLOSERA DEF (IPLUS ADR)
			      Y)
		  (SETQ V T))
		((LITATOM Z)
		  (AND (EQ (NTHCHARCODE Z -5)
			   (CHARCODE A))
		       (EQ (NTHCHARCODE Z -4)
			   (CHARCODE 0))
		       (CHANGENAME1 (GETD Z)
				    X Y FN)
		       (SETQ V T)))
		((NLISTP Z)                                 (* E.g. A string.)
		  NIL)
		((CHANGENAME2 Z X Y)
		  (SETQ V T)))
	      (SETN ADR (ADD1 ADR))
	      (GO LP])

(CHANGENAME2
  [LAMBDA (OLD NEW EXPR)                        (* lmm "28-AUG-78 15:49"
)
    (PROG (V)
      LP  (COND
	    ((NLISTP EXPR)
	      (RETURN V))
	    ((EQ NEW (CAR EXPR))
	      (/RPLACA EXPR OLD)
	      (SETQ V T))
	    ((CHANGENAME2 OLD NEW (CAR EXPR))
	      (SETQ V T)))
          (COND
	    ((AND NEW (EQ NEW (CDR EXPR)))
	      (/RPLACD EXPR OLD)
	      (RETURN T)))
          (SETQ EXPR (CDR EXPR))
          (GO LP])

(DEFC
  [LAMBDA (NM DF)
    (PROG ((PROP (QUOTE CODE)))
          [COND
	    ((MKSWAPP NM DF)
	      (SETQ DF (MKSWAP DF))
	      

          (* IF FN GETS SWAPPED, THEN LINKS TO NOLINKDEF1 WILL
	  ERRONEOUSLY REFERENCE THE UNSWAPPED VERSION UNLESS 
	  THE RELINK IS DONE)


	      (AND (FMEMB NM LINKEDFNS)
		   (RELINK DF]
          (COND
	    ((OR (NULL DFNFLG)
		 (EQ DFNFLG T))
	      [COND
		((GETD NM)
		  (VIRGINFN NM T)
		  (COND
		    ((NULL DFNFLG)
		      (PRINT (CONS NM (QUOTE (redefined)))
			     T T)
		      

          (* NOTE: this call to PRINT is changed to LISPXPRINT
	  later in the loadup.)


		      (SAVEDEF NM]
	      (PUTD NM DF)
	      

          (* NOTE: this call to PUTD is changed to /PUTD later
	  in the loadup.)

)
	    (T (PUTPROP NM PROP DF)
	       

          (* NOTE: this call to PUTPROP is changed to /PUTPROP
	  later in the loadup.)

))
          (RETURN DF])

(FIRSTLIT
  [LAMBDA (HANDLE)

          (* HANDLE is GETD of either compiled def or swapped 
	  def. Value is relative (with repsect to entry point)
	  address of first literal, suitable for passing to 
	  FNOPENR or FNCLOSER)


    (COND
      ((SWPARRAYP HANDLE)
	

          (* The -2 is because addresses are relative to 
	  beginning of block in swapped space.)


	(IPLUS (LOC (FNOPENRA HANDLE 2))
	       -2))
      (T (IDIFFERENCE (LOC (FNOPENRA HANDLE 2))
		      (LOC HANDLE])

(FNTYP
  [LAMBDA (FN)                                  (* lmm "11-SEP-78 01:55"
)
    (COND
      ((SUBRP FN)
	(SELECTQ (COND
		   ((LITATOM FN)
		     (ARGTYPE FN))
		   (T (LSH (CAR FN)
			   -4)))
		 (0 (QUOTE SUBR))
		 (1 (QUOTE FSUBR))
		 (2 (QUOTE SUBR*))
		 (3 (QUOTE FSUBR*))
		 NIL))
      (T [COND
	   ((LITATOM FN)
	     (SETQ FN (FGETD FN]
	 (SELECTQ (NTYP FN)
		  ((1 4)
		    (SELECTQ (LOC (FNOPENRA FN 1))
			     (0 (QUOTE CEXPR))
			     (1 (QUOTE CFEXPR))
			     (2 (QUOTE CEXPR*))
			     (3 (QUOTE CFEXPR*))
			     NIL))
		  (8 (SELECTQ (CAR FN)
			      (FUNARG (QUOTE FUNARG))
			      [LAMBDA (OR (AND (CADR FN)
					       (NLISTP (CADR FN))
					       (QUOTE EXPR*))
					  (QUOTE EXPR]
			      [NLAMBDA (COND
					 ((AND (CADR FN)
					       (NLISTP (CADR FN)))
					   (QUOTE FEXPR*))
					 (T (QUOTE FEXPR]
			      (FNTYP1 FN)))
		  NIL])

(FNTYP1
  [LAMBDA NIL NIL])

(LASTLIT+1
  [LAMBDA (HANDLE)

          (* HANDLE is GETD of either compiled def or swapped 
	  def. Value is relative (with repsect to entry point)
	  address of last literal + 1, suitable for passing to
	  FNOPENR or FNCLOSER)


    (IPLUS (LOC (FNOPENRD HANDLE -2))
	   -2])

(NARGS
  [LAMBDA (FN)                                  (* lmm "11-SEP-78 01:55"
)
    (COND
      ((SUBRP FN)
	(LOGAND (COND
		  ((LITATOM FN)
		    (LSH [LOC (CDR (VAG (ADD1 (LOC FN]
			 -5))
		  (T (CAR FN)))
		15))
      (T (SELECTQ (NTYP (SETQ FN (CGETD FN)))
		  [1 (LOC (CDR (VAG (ADD1 (LOC FN]
		  (4 (LOC (FNOPENRD FN 1)))
		  (8 (SELECTQ (CAR FN)
			      [[LAMBDA NLAMBDA]
				(COND
				  ((NULL (SETQ FN (CADR FN)))
				    0)
				  ((NLISTP FN)
				    1)
				  (T (FLENGTH FN]
			      (FUNARG (NARGS (CADR FN)))
			      NIL))
		  NIL])

(NFRVARS
  [LAMBDA (ADR)                                 (* lmm: 
						"15-SEP-76 12:58:46")
    (PROG (A)
          (RETURN (COND
		    ([AND (ZEROP (LOC (FNOPENRD ADR 2)))
			  (OR (EQ (SETQ A (FNOPENRA ADR 3))
				  (COREVAL BLKENT))
			      (EQ A (COREVAL SBLKNT]
		      (LOC (FNOPENRD ADR 4)))
		    (T (LOC (FNOPENRD ADR 2])

(RELINK
  [LAMBDA (FN UNLINKFLG)                        (* lmm: 
						"30-AUG-76 23:49:05")
                                                (* If UNLINKFLG is T, 
						unlinks all linked 
						calls.)
    (PROG (TEM)
          [COND
	    ((EQ FN (QUOTE WORLD))
	      (MAPC SYSLINKEDFNS (FUNCTION RELINK1))
	      (MAPC LINKEDFNS (FUNCTION RELINK1)))
	    ((ARGTYPE FN)
	      (RELINK1 FN))
	    [[OR (LISTP (SETQ TEM FN))
		 (LISTP (SETQ TEM (GETATOMVAL TEM]
	      (MAPC TEM (FUNCTION (LAMBDA (X)
			(COND
			  ((NOT (LISTP X))
			    (RELINK1 X))
			  [(NULL (CAR X))
			                        (* Convention for 
						specifiying normal 
						compilation via block 
						declaration.)
			    (MAPC (CDR X)
				  (FUNCTION (LAMBDA (X)
				      (AND (NOT (LISTP X))
					   (RELINK1 X]
			  (T                    (* So you can do RELINK 
						(BREAKBLOCKS))
			     (RELINK1 (CAR X]
	    (T (RETURN (QUOTE ?]
          (RETURN FN])

(RELINK1
  [LAMBDA (FN)                                  (* lmm " 1-SEP-78 23:45"
)
    (PROG [(Z (COND
		((LITATOM FN)
		  (FGETD (OR (GETP FN (QUOTE BROKEN))
			     (GETP FN (QUOTE ADVISED))
			     FN)))
		(T FN]
          (RETURN (COND
		    ((CCODEP Z)
		      (RELINK2 Z])

(RELINK2
  [LAMBDA (DEF)                                             (* rmk: "22-FEB-82 16:16")
    (PROG (ADR END Z)
          [SETQ ADR (COND
	      ((SWPARRAYP DEF)
		(VAG (IDIFFERENCE (LOC (FNOPENRA DEF 2))
				  2)))
	      (T (VAG (IDIFFERENCE (LOC (FNOPENRA DEF 2))
				   (LOC DEF]
          (SETQ END (VAG (IPLUS (LOC (FNOPENRD DEF -2))
				-2)))
      LP  [COND
	    ((EQ ADR END)
	      (RETURN T))
	    ([OR (EQ (SETQ Z (FNOPENRA DEF (LOC ADR)))
		     (COREVAL CCALC))
		 (EQ Z (COREVAL SBCALQ))
		 (AND [NULL (ILESSP (LOC Z)
				    (LOC (COREVAL HCCALQ]
		      (NULL (IGREATERP (LOC Z)
				       (LOC (COREVAL EXCALQ]
                                                            (* HERE WE ARE (YEECH) COUNTING ON ALL THE HCCAL'S 
							    PRECEEDING (COREVAL EXCALQ) IN LISP.MAC)
	      (AND [LITATOM (SETQ Z (FNOPENRD DEF (LOC ADR]
		   (DOLINK DEF (LOC ADR)
			   Z
			   (AND (NULL UNLINKFLG)
				FN)
			   T)))
	    ((LITATOM Z)
	      (AND (EQ (NTHCHARCODE Z -5)
		       (CHARCODE A))
		   (EQ (NTHCHARCODE Z -4)
		       (CHARCODE 0))
		   (RELINK1 Z)))
	    ((LISTP Z)
	      (AND (LITATOM (SETQ Z (CAR Z)))
		   (EQ (NTHCHARCODE Z -5)
		       (CHARCODE A))
		   (EQ (NTHCHARCODE Z -4)
		       (CHARCODE 0))
		   (RELINK1 Z]
          [SETQ ADR (VAG (ADD1 (LOC ADR]
          (GO LP])

(NOLINKDEF1
  [NLAMBDA (FN REL NAME)                        (* lmm: 
						"25-AUG-76 23:43:05")

          (* GET HERE FROM A LINKED CALL TO A FUNCTION THAT 
	  WAS UNDEFINED AT TIME OF LINK.
	  FN AND REL ARE LOCATORS FOR THE LINKED CALL LITERAL 
	  IN THE CALLER , NAME IS THE CALLEE.)


    (DECLARE (SPECVARS I)
	     (ADDTOVAR LAMS FAULTAPPLY))

          (* The DECLARE is because FAULTAPPLY is an FSUBR* in
	  macro code and an CEXPR in the full loadup.
	  {Why?} -
	  also, the ARG below does not compile open because in
	  fact NOLINKARGS is the lambda-spread variable of the
	  hokey definition; since ARG calls EVAL, I must be a 
	  SPECVAR)


    (PROG ((I NOLINKARGS)
	   ARGS)
      LP  (COND
	    ((ZEROP I)
	      (GO A)))
          (SETQ ARGS (CONS (ARG NOLINKARGS I)
			   ARGS))
          (SUB1VAR I)
          (GO LP)
      A   (COND
	    ((OR (NULL NAME)
		 (NOT (LITATOM NAME)))
	      (HELP)))
          [COND
	    ((FGETD NAME)
	      

          (* The linkee is now defined.
	  We should fix up the link and proceed transparently.
	  Not an error.)


	      (DOLINK FN REL NAME T T)
	      (RETURN (APPLY NAME ARGS]

          (* The linkee is still undefined.
	  Must make udf error, but remember that if he defines
	  name in the BREAK then we ought to do linkup this 
	  time.)


          (RETURN (PROG1 (FAULTAPPLY NAME ARGS)
			 (AND (FGETD NAME)
			      (DOLINK FN REL NAME T T])

(CALLSCCODE
  [LAMBDA (DEF VARSFLG)                         (* lmm: 
						"28-MAR-77 12:20:57")
    (PROG (CALLED LNCALLED BOUND FREEVARS)
          [COND
	    ((LITATOM DEF)
	      (SETQ DEF (GETD DEF]
          (OR (CCODEP DEF)
	      (ERROR DEF "not compiled code"))
          (CALLS1 DEF NIL)
          (RETURN (LIST LNCALLED CALLED BOUND FREEVARS])

(CALLS1
  [LAMBDA (DEF)                                 (* lmm "11-SEP-78 03:50"
)
    (PROG ((SWAPPEDFLG (SWPARRAYP DEF))
	   (ADR 0)
	   (LIT (FIRSTLIT DEF))
	   (END (LASTLIT+1 DEF))
	   (V1 (NARGS DEF))
	   (V2 (NFRVARS DEF))
	   OPD X N L)

          (* LIT is the address of the first literal, END 1 
	  PLUS the address of the last literal, V1 the number 
	  of arguments, and V2 the number of free variables.)


          (SETQ BOUND (NCONC BOUND (MAKELIST DEF LIT V1)))
          (SETQ FREEVARS (UNION FREEVARS (MAKELIST DEF (IPLUS LIT V1)
						   V2)))
      LP  (COND
	    ((IEQP (SETN ADR (ADD1 ADR))
		   LIT)
	      (SETQ ADR (IPLUS LIT V1 V2))
	      (GO LP1)))
          (SETQ OPD (RSH (LOC (FNOPENRD DEF ADR))
			 9))

          (* CALLS1 uses FNOPENRA, FNOPENRD, FNOPENR, and 
	  FNOPENADR (or its own version, PRFNOPENADR) 
	  extensively. (FNOPENRA DEF N) returns the right half
	  of the nth cell in the defiition indicated by 
	  HANDLE, FNOPENRD returns the left half, and FNOPENR 
	  returns the whle word as a boxed integer.
	  (FNOPENADR DEF N) returns the relative address of 
	  the word pointed to by the address portion of the 
	  nth cell of HANDLE. PRFNOPENADR is calls1's own 
	  version of FNOPENADR, which takes a flag to indicate
	  whether or not functon is swapped, rather than 
	  calling SWPARRAYP each time.)


          [COND
	    [[OR (EQ OPD (LOC (OPD CCALL)))
		 (EQ OPD (LOC (OPD ACCALL]
	      

          (* Normal function call. Form is CCALL N, ADR or 
	  ACCALL N , ADR where ADR is address of literal 
	  contaaing name of function in right half)


	      (COND
		((AND (NULL VARSFLG)
		      [LITATOM (SETQ X
				 (FNOPENRA DEF
					   (PRFNOPENADR DEF ADR 
							SWAPPEDFLG]
		      (NOT (FMEMB X CALLED)))
		  (SETQ CALLED (NCONC1 CALLED X]
	    [(EQ OPD (LOC (OPD PUSHJ)))
	      

          (* for functions with more than 16 arguments, the 
	  form of the caaling sequence is MOVE 2, ADR followed
	  by PUSHJ CP,EFNCALCODE)


	      (COND
		((AND (NULL VARSFLG)
		      (EQ (FNOPENRA DEF ADR)
			  (COREVAL EFNCAL))
		      [LITATOM (SETQ X (FNOPENRA DEF
						 (PRFNOPENADR
						   DEF
						   (SUB1 ADR)
						   SWAPPEDFLG]
		      (NOT (FMEMB X CALLED)))
		  (SETQ CALLED (NCONC1 CALLED X]
	    [[OR (EQ OPD (LOC (OPD LNCALL)))
		 (EQ OPD (LOC (OPD LNCAL2)))
		 (EQ OPD (LOC (OPD ALNCAL]
	      

          (* Linked caal. LNCALL is for functions with less 
	  than 16 arguments, LNCAL2 for 16 or more.
	  The address field contains the address of the 2 word
	  literal for the linked call.
	  The first word of the literal contains in the right 
	  half the definition, and in the left half of the 
	  second word, the function name.)


	      (COND
		((AND (NULL VARSFLG)
		      [LITATOM (SETQ X
				 (FNOPENRD DEF
					   (ADD1 (PRFNOPENADR DEF ADR 
							 SWAPPEDFLG]
		      (NOT (FMEMB X LNCALLED)))
		  

          (* PRFNOPENADR is recomputed rather than doing a 
	  SETQ to avoid contsructing a large number.)


		  (SETQ LNCALLED (NCONC1 LNCALLED X]
	    ((EQ OPD (LOC (OPD PBIND)))
	      

          (* PBIND. Form of instruction is PBIND ADR.
	  Next instruction is of form NN*2^27 + NC*2^18 + 
	  some-other-stuff. NN, the first 9 bit byte, is the 
	  number of variables whose value is computed.
	  NC the number of variables bound to a constant 
	  (e.g. NIL, number, or quoted expression.) The 
	  variables begin at ADR. For the computed variables, 
	  the variable name is in the right half of the 
	  literaa. For the constant variables, it is in the 
	  left half.)


	      (SETQ L (NCONC (MAKELIST
			       DEF
			       (SETQ X (PRFNOPENADR DEF ADR SWAPPEDFLG))
			       (SETQ N
				 (RSH (LOC (FNOPENRD DEF (ADD1 ADR)))
				      9)))
			     (MAKELIST
			       DEF
			       (IPLUS X N)
			       (LOGAND (LOC (FNOPENRD DEF (ADD1 ADR)))
				       511)
			       T)))
	      

          (* FNOPENADR returns address portion of 
	  corresponding cell as a relative address, regardless
	  of whether handle corresponds to compiled or swapped
	  function.)


	      (SETQ BOUND (NCONC BOUND L))
	      (SETN ADR (ADD1 ADR)))
	    ((EQ OPD (LOC (OPD PBIND2)))
	      

          (* In a block, when a retfn is called, the following
	  sequence occurs: PBIND2 ADR followed by junk,,NN ADR
	  references the first literal of a block of NN 
	  literals. This first literal contains the name of 
	  the retfn. The specvars, if any, are in the next 
	  NN-1 cells, in the left half.)


	      

          (* PRFNOPENADR is recomputed rather than doing a 
	  SETQ to avoid constructing a large number.)


	      (SETQ BOUND
		(NCONC BOUND (MAKELIST
			 DEF
			 (ADD1 (PRFNOPENADR DEF ADR SWAPPEDFLG))
			 [SUB1 (LOC (FNOPENRA DEF (ADD1 ADR]
			 T)))
	      (SETN ADR (ADD1 ADR)))
	    ((EQ OPD (LOC (OPD JSP)))
	      (COND
		((OR (EQ (SETQ X (FNOPENRA DEF ADR))
			 (COREVAL BINDB))
		     (EQ X (COREVAL BINDLA)))
		  

          (* In a block, when a frame is made for a function, 
	  the following sequence occurs: JSp 7, BINDB/BINDLA 
	  followed by NN*2^24+ADR. ADR references the first 
	  variable literal-1. NN is is ther number of 
	  specvars.)


		  (SETQ BOUND
		    (NCONC BOUND
			   (MAKELIST
			     DEF
			     (ADD1 (PRFNOPENADR DEF (SETN ADR
							  (ADD1 ADR))
						SWAPPEDFLG))
			     (LOGAND (LRSH (LOC (FNOPENRD DEF ADR))
					   6)
				     63)
			     T]
          (GO LP)
      LP1 (COND
	    ((IEQP ADR END)
	      (RETURN))
	    ((LISTP (SETQ X (FNOPENRA DEF ADR)))
	                                        (* Necessary to ANALYZE 
						generated subfunctions 
						even when just looking 
						for variables.)
	      (CALLS2 (CAR X)))
	    ((AND (NULL VARSFLG)
		  (LITATOM X)
		  (NOT (FMEMB X CALLED))
		  (NOT (FMEMB X BOUND))
		  (CALLS2 X))
	      

          (* Analyze generated subfunction.
	  the fmemb checks are simply to avoid having the call
	  to CALLS2 and the nthchars.)

))
          (SETN ADR (ADD1 ADR))
          (GO LP1])

(CALLS2
  [LAMBDA (X)                                               (* rmk: "22-FEB-82 16:16")
    (COND
      ((AND (EQ (NTHCHARCODE X -5)
		(CHARCODE A))
	    (EQ (NTHCHARCODE X -4)
		(CHARCODE 0))
	    (SETQ X (GETD X))
	    (CCODEP X))
	(CALLS1 X T)
	T])

(MAKELIST
  [LAMBDA (HANDLE ADR N LEFTFLG)                (* dcl: 17 JAN 76 12:40)
                                                (* lmm: 8-DEC-75 21 29)
    (PROG (L X)

          (* Makes a list of N elements beinning at address 
	  ADR relative to HANDLE.)


      LP  (COND
	    ((ZEROP N)
	      (RETURN L)))
          [SETQ X (VCTOAT (COND
			    (LEFTFLG (FNOPENRD HANDLE (IPLUS ADR N -1)))
			    (T (FNOPENRA HANDLE (IPLUS ADR N -1]
          (AND (LITATOM X)
	       (SETQ L (CONS X L)))
          (SETQ N (SUB1 N))
          (GO LP])

(PRFNOPENADR
  [LAMBDA (HANDLE N SWAPPEDFLG)

          (* Like FNOPENADR but takes a flag indicating 
	  whether or not handle corresponds to a swapped 
	  function, thereby avoiding doing the swparrayp each 
	  time. Value is address portion of correspondin cell,
	  as a relative address. i.e. takes into acount that 
	  in swapped functions, all references are relative to
	  beginning of block, whereas in compiled code, they 
	  are absolute)


    (COND
      [SWAPPEDFLG (IPLUS -2 (LOC (FNOPENRA HANDLE N]
      (T (IDIFFERENCE (LOC (FNOPENRA HANDLE N))
		      (LOC HANDLE])

(COREVAL
  [NLAMBDA (X)                                  (* lmm: 
						"31-AUG-76 01:26:20")
    (VAG (GETP X (QUOTE COREVAL])

(OPD
  [NLAMBDA (X)                                  (* lmm: 
						"31-AUG-76 01:29:14")
    (VAG (LOGAND 511 (LLSH (GETP X (QUOTE OPD))
			   -9])
)

(RPAQQ CODEFORMATBLOCKS ((NIL LAPRD DOLINK BINRD DOVARLINK (LOCALVARS . T)
			      (GLOBALVARS LINKEDFNS FILERDTBL NOLINKMESS))
			 (NIL BINRD CGETD FNTYP ARGLIST NARGS BINSKIP BINFIX DEFC (LINKFNS . T)
			      (NOLINKFNS MKSWAPP)
			      (LOCALVARS . T)
			      (GLOBALVARS DFNFLG LINKEDFNS FILERDTBL LAMBDASPLST))
			 (CHANGENAME1 CHANGENAME1 CHANGENAME2)
			 (LINKBLOCK RELINK RELINK1 RELINK2 DOLINK (ENTRIES RELINK RELINK2 DOLINK)
				    (GLOBALVARS SYSLINKEDFNS NOLINKMESS LINKEDFNS)
				    (SPECVARS UNLINKFLG FN))
			 (CALLSCCODE CALLSCCODE CALLS1 CALLS2 MAKELIST
				     (LOCALFREEVARS BOUND FREEVARS CALLED LNCALLED VARSFLG))
			 (NIL FIRSTLIT FNTYP1 LASTLIT+1 NFRVARS NOLINKDEF1 COREVAL OPD (LOCALVARS . T)
			      )))
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
(BLOCK: NIL LAPRD DOLINK BINRD DOVARLINK (LOCALVARS . T)
	(GLOBALVARS LINKEDFNS FILERDTBL NOLINKMESS))
(BLOCK: NIL BINRD CGETD FNTYP ARGLIST NARGS BINSKIP BINFIX DEFC (LINKFNS . T)
	(NOLINKFNS MKSWAPP)
	(LOCALVARS . T)
	(GLOBALVARS DFNFLG LINKEDFNS FILERDTBL LAMBDASPLST))
(BLOCK: CHANGENAME1 CHANGENAME1 CHANGENAME2)
(BLOCK: LINKBLOCK RELINK RELINK1 RELINK2 DOLINK (ENTRIES RELINK RELINK2 DOLINK)
	(GLOBALVARS SYSLINKEDFNS NOLINKMESS LINKEDFNS)
	(SPECVARS UNLINKFLG FN))
(BLOCK: CALLSCCODE CALLSCCODE CALLS1 CALLS2 MAKELIST (LOCALFREEVARS BOUND FREEVARS CALLED LNCALLED 
								    VARSFLG))
(BLOCK: NIL FIRSTLIT FNTYP1 LASTLIT+1 NFRVARS NOLINKDEF1 COREVAL OPD (LOCALVARS . T))
]
(DECLARE: DOEVAL@COMPILE 

(PUTPROPS COREVAL MACRO ((X)
			 (ASSEMBLE NIL
			           (MOVEI 1 , X))))

(PUTPROPS OPD MACRO (X (LIST (QUOTE VAG)
			     (LLSH (GETP (CAR X)
					 (QUOTE OPD))
				   -9))))
DONTCOPY 

(PUTPROPS OBIN MACRO [(JFN)
		      (LOC (ASSEMBLE NIL
				     (CQ JFN)
				     (JSYS 50Q)
				     (MOVE 1 , 2])

(PUTPROPS OBOUT MACRO ((BYTE JFN)
		       (ASSEMBLE NIL
			         (CQ JFN)
			         [E (CEXP2 (QUOTE (VAG BYTE]
			         (JSYS 51Q))))

(PUTPROPS OSFBSZ MACRO ((JFN N)
			(ASSEMBLE NIL
			          (CQ JFN)
			          [E (CEXP2 (QUOTE (VAG N]
			          (JSYS 46Q)
			          (JFCL))))

(PUTPROPS OSIN MACRO ((ORG N JFN)
		      (ASSEMBLE NIL
			        (CQ (VAG N))
			        (JUMPLE 1 , OUT)
			        (PUSHN 1)
			        (CQ JFN)
			        (E (CEXP2 (QUOTE ORG)))
			        (HRLI 2 , 444400Q)
			        (POPN 3)
			        (MOVN 3 , 3)
			        (JSYS 52Q)
			    OUT)))

(PUTPROPS ONIN MACRO [(JFN)
		      (LOC (ASSEMBLE NIL
				     (CQ JFN)
				     (MOVEI 3 , 12Q)
				     (JSYS 225Q)
				     (MOVNI 2 , 1)
				     (JSYS 42Q)
				     (JFCL)
				     (MOVE 1 , 2])

(PUTPROPS ORFPTR MACRO [(JFN)
			(LOC (ASSEMBLE NIL
				       (CQ JFN)
				       (JSYS 43Q)
				       (HRLZI 2 , 377777Q)
				       (MOVE 1 , 2])

(PUTPROPS OSFPTR MACRO ((JFN POS)
			(ASSEMBLE NIL
			          (CQ JFN)
			          [E (CEXP2 (QUOTE (VAG POS]
			          (JSYS 27Q)
			          (JFCL))))

(PUTPROPS CGETD MACRO [LAMBDA (X)
			(COND
			  ((LITATOM X)
			    (GETD X))
			  (T X])

(PUTPROPS PRFNOPENADR MACRO [(HANDLE N SWAPPEDFLG)
			     (COND
			       [SWAPPEDFLG (IPLUS -2 (LOC (FNOPENRA HANDLE N]
			       (T (IDIFFERENCE (LOC (FNOPENRA HANDLE N))
					       (LOC HANDLE])
)
(DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 

(ADDTOVAR NLAMA )

(ADDTOVAR NLAML OPD COREVAL NOLINKDEF1)

(ADDTOVAR LAMA )
)
(DECLARE: DONTCOPY
  (FILEMAP (NIL (1304 32155 (LAPRD 1316 . 2749) (BINRD 2753 . 5617) (BINSKIP 5621 . 7992) (BINFIX 7996 .
 9782) (DOVARLINK 9786 . 10148) (DOLINK 10152 . 12680) (ARGLIST 12684 . 14382) (CGETD 14386 . 14464) (
CHANGENAME1 14468 . 15623) (CHANGENAME2 15627 . 16080) (DEFC 16084 . 17036) (FIRSTLIT 17040 . 17545) (
FNTYP 17549 . 18459) (FNTYP1 18463 . 18491) (LASTLIT+1 18495 . 18783) (NARGS 18787 . 19361) (NFRVARS 
19365 . 19708) (RELINK 19712 . 20685) (RELINK1 20689 . 20979) (RELINK2 20983 . 22383) (NOLINKDEF1 
22387 . 23856) (CALLSCCODE 23860 . 24224) (CALLS1 24228 . 30408) (CALLS2 30412 . 30692) (MAKELIST 
30696 . 31259) (PRFNOPENADR 31263 . 31862) (COREVAL 31866 . 31996) (OPD 32000 . 32152)))))
STOP
   