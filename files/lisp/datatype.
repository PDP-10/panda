(FILECREATED " 4-MAR-84 20:47:24" <NEWLISP>DATATYPE.;1 38491  

      changes to:  (VARS DATATYPEFIELDTYPES)
		   (FNS DECLAREDATATYPE)

      previous date: "22-NOV-82 22:09:19" <LISP>DATATYPE.;155)


(PRETTYCOMPRINT DATATYPECOMS)

(RPAQQ DATATYPECOMS ((DECLARE: FIRST (ADDVARS (NOSWAPFNS NCREATE SETUPDATATYPES)))
	(GLOBALVARS dtNAME.NUMBER dtNAME.SNAME dtNAME.DESCRIPTORS dtNAME.FIELDSPECS)
	(FNS USERDATATYPES GETDESCRIPTORS GETFIELDSPECS DECLAREDATATYPE DATATYPERROR)
	(FNS FETCHFIELD REPLACEFIELD)
	(FNS TYPENAMEP NCREATE .DATATYPENAME. TYPENAMEFROMNUMBER TYPENUMBERFROMNAME 
	     SETTYPEDESCRIPTION GETTYPEDESCRIPTION /REPLACEFIELD REPLACEFIELDVAL /DECLAREDATATYPE)
	(PROP 10MACRO FETCHFIELD FFETCHFIELD REPLACEFIELD FREPLACEFIELD REPLACEFIELDVAL 
	      FREPLACEFIELDVAL TYPENAMEP .TYPEP. /REPLACEFIELD)
	(PROP OPD LD@ LOADNUMBER ADDC)
	(PROP CTYPE .FLOC.)
	(FNS CFETCH CREPLACE)
	(DECLARE: EVAL@COMPILE DONTCOPY (PROP MACRO PUTFROM GETFROM))
	(FNS HARRAYP ARRAYTYP COPYARRAY)
	(FNS SETUPDATATYPES)
	[P (COND ((CCODEP (QUOTE SETUPDATATYPES))
		  (SETUPDATATYPES]
	(* make functions accept type names)
	(FNS NEWRECLAIM NEWDEFEVAL NEWDEFPRINT DEFPRINTARRAY DEFEVALARRAY NEWMINFS)
	[P (MAPC (QUOTE ((REPLACEFIELD FREPLACEFIELD)
			 (FETCHFIELD FFETCHFIELD)
			 (REPLACEFIELDVAL FREPLACEFIELDVAL)
			 (RECLAIM OLDRECLAIM NEWRECLAIM)
			 (DEFEVAL OLDDEFEVAL NEWDEFEVAL)
			 (MINFS OLDMINFS NEWMINFS)
			 (DEFPRINT OLDDEFPRINT NEWDEFPRINT)))
		 (FUNCTION (LAMBDA (X)
				   (MOVD? (CAR X)
					  (CADR X))
				   (COND ((GETD (CADDR X))
					  (MOVD (CADDR X)
						(CAR X))
					  (PUTD (CADDR X]
	(* STORAGE)
	(FNS STORAGE STPRIN)
	(BLOCKS (STORAGE STORAGE STPRIN (NOLINKFNS . T))
		(NIL DECLAREDATATYPE .DATATYPENAME. (NOLINKFNS . T)
		     (LOCALVARS . T))
		(NIL CREPLACE CFETCH (LOCALVARS . T))
		(NIL USERDATATYPES GETDESCRIPTORS GETFIELDSPECS DATATYPERROR FETCHFIELD REPLACEFIELD 
		     TYPENAMEP NCREATE TYPENAMEFROMNUMBER TYPENUMBERFROMNAME SETTYPEDESCRIPTION 
		     GETTYPEDESCRIPTION /REPLACEFIELD REPLACEFIELDVAL /DECLAREDATATYPE
		     (GLOBALVARS RECORDINIT RECORD)
		     HARRAYP ARRAYTYP COPYARRAY SETUPDATATYPES NEWRECLAIM NEWDEFEVAL NEWDEFPRINT 
		     DEFPRINTARRAY DEFEVALARRAY NEWMINFS (LOCALVARS . T)))
	(VARS DATATYPEFIELDTYPES)))
(DECLARE: FIRST 

(ADDTOVAR NOSWAPFNS NCREATE SETUPDATATYPES)
)
(DECLARE: DOEVAL@COMPILE DONTCOPY

(ADDTOVAR GLOBALVARS dtNAME.NUMBER dtNAME.SNAME dtNAME.DESCRIPTORS dtNAME.FIELDSPECS)
)
(DEFINEQ

(USERDATATYPES
  (LAMBDA NIL                           (* lmm " 3-MAY-78 00:47")
                                        (* lmm: 8 OCT 75 305)
    (PROG (V)
          (DECLARE (SPECVARS V))        (* only user-data-types have 
					DESCRIPTORS)
          (MAPHASH dtNAME.DESCRIPTORS (FUNCTION (LAMBDA (VAL K)
		       (SETQ V (CONS K V)))))
          (RETURN V))))

(GETDESCRIPTORS
  (LAMBDA (TYPENAME)                    (* lmm "11-SEP-78 01:29")
    (GETFROM NAME DESCRIPTORS (COND
	       ((LITATOM TYPENAME)
		 TYPENAME)
	       (T (TYPENAME TYPENAME))))))

(GETFIELDSPECS
  (LAMBDA (TYPENAME)                    (* lmm "11-SEP-78 01:29")
    (GETFROM NAME FIELDSPECS (COND
	       ((LITATOM TYPENAME)
		 TYPENAME)
	       (T (TYPENAME TYPENAME))))))

(DECLAREDATATYPE
  [LAMBDA (TYPENAME FIELDSPECS FLG)                         (* rmk: " 4-MAR-84 19:36")
                                                            (* NOTDATATYPE=NIL for DATATYPE, T for BLOCKRECORD, and 
							    FARRAY for FASTARRAY.)
    (OR FLG (AND (LITATOM TYPENAME)
		 TYPENAME)
	(ERROR "Illegal data type" TYPENAME))
    (COND
      ((NULL FIELDSPECS)                                    (* "undeclare" the datatype by 1st calling TYPESTATUS to
							    fix GC tables, and then clearing all hash-table entries)
	(PROG (TYPEATOM (TYPENUMBER (GETFROM NAME NUMBER TYPENAME)))
	      (OR TYPENUMBER (RETURN))
	      (OR (SETQ TYPEATOM (GETFROM NUMBER SNAME TYPENUMBER))
		  (RETURN))
	      (PUTFROM SNAME NUMBER TYPEATOM (CONCAT TYPENAME " de-allocated data type"))
                                                            (* give it an illegal value so it will trap)
	      (TYPESTATUS TYPENUMBER 2)
	      (PUTFROM NUMBER NAME TYPENUMBER NIL)
	      (PUTFROM NAME DESCRIPTORS TYPENAME NIL)
	      (PUTFROM NAME FIELDSPECS TYPENAME NIL)
	      (PUTFROM NAME NUMBER TYPENAME NIL)))
      ((EQUAL FIELDSPECS (GETFIELDSPECS TYPENAME))
	(GETDESCRIPTORS TYPENAME))
      (T
	(PROG ((NWORDS (COND
			 ((EQ FLG (QUOTE ARRAY))
			   2)
			 (T 0)))
	       UNFILLEDWORDS
	       (NPOINTERS 0)
	       FIELDS TYPEATOM (TYPENUMBER (COND
					     ((EQ FLG (QUOTE ARRAY))
					       1)))
	       Z TMP (TYPENM (COND
			       (FLG NIL)
			       (T TYPENAME)))
	       FIELD OFF)
	      [SETQ TMP (APPEND (SETQ FIELDS (for X in FIELDSPECS
						collect (CONS (SELECTQ X
								       ((POINTER XPOINTER 
										 FULLXPOINTER)
                                                            (* XPOINTERs so that special D records get passed thru)
									 (SETQ X (QUOTE POINTER))
									 (SELECTQ FLG
										  (NIL -1)
										  (ARRAY 37)
										  18))
								       (FLAG (SETQ X
									       (QUOTE (FLAGBITS
											1)))
									     35)
								       ((FIXP FLOATP)
									 0)
								       (IDIFFERENCE 36 (CADR X)))
							      (CONS X NIL]
	      (SELECTQ FLG
		       ((NIL ARRAY)
			 (SORT TMP T))
		       NIL)
	      [for X in TMP
		 do

          (* Bits in the datatype descriptor: -
	  0-5 rightshift count -
	  6-11 byte size -
	  12-13 field type: 0=pointer 1=fix 2=floating 3=flag -
	  14-17 unused (reserved for expansion) -
	  19,20 unused -
	  21-26 datatype -
	  27-36 displacement -
	  bit 20 means NOT IMPLEMENTED IN MICROCODE ON MAXC = floating, or if there is an offset (?))


		  (FRPLNODE
		    X
		    (CADR X)
		    (SELECTQ
		      (CAR (SETQ X (CDR X)))
		      [POINTER (COND
				 ((AND (ZEROP NPOINTERS)
				       (EQ FLG (QUOTE ARRAY)))
                                                            (* array pointer area begins on word boundary)
				   (SETQ UNFILLEDWORDS)))
			       (PROG1 [for Y in UNFILLEDWORDS when (NOT (ILESSP (CADDR Y)
										18))
					 do [RETURN (PROG1 (LOGOR 301989888 (CAR Y))
                                                            (* Right half, no box)
							   (FRPLACA (CDDR Y)
								    (IDIFFERENCE (CADDR Y)
										 18]
					 finally (RETURN (PROG1 (LOGOR 19629342720 NWORDS)
                                                            (* Left half, no box)
								(SETQ UNFILLEDWORDS
								  (CONS (LIST NWORDS 18 18)
									UNFILLEDWORDS))
								(ADD1VAR NWORDS]
				      (SETQ NPOINTERS (ADD1 NPOINTERS]
		      (FIXP (PROG1 (LOGOR 608174080 NWORDS)
                                                            (* Full word, box)
				   (ADD1VAR NWORDS)))
		      (FLOATP (PROG1 (LOGOR 612401152 NWORDS)
                                                            (* full word, floating, and special for maxc)
				     (ADD1VAR NWORDS)))
		      (SELECTQ
			(CAR (LISTP (CAR X)))
			((FLAGBITS BITS)
			  [COND
			    ((OR (IGREATERP (SETQ Z (CADR (CAR X)))
					    35)
				 (ILESSP Z 1))
			      (ERROR "Illegal field specification" (CAR X]
			  [COND
			    ((SETQ OFF (CADDR (CAR X)))
			      (COND
				((ZEROP OFF)
				  (SETQ OFF NIL]
			  [SETQ FIELD
			    (LOGOR (COND
				     ((EQ (CAAR X)
					  (QUOTE FLAGBITS))
				       12615680)
				     (T 4194304))
				   (LLSH Z 24)
				   (for Y in UNFILLEDWORDS when (NOT (ILESSP (CADDR Y)
									     Z))
				      do [RETURN (PROG1 (LOGOR (CAR Y)
							       (LLSH (IDIFFERENCE
								       36
								       (IPLUS (CADR Y)
									      Z))
								     30))
							(FRPLACA (CDR Y)
								 (IPLUS (CADR Y)
									Z))
							(FRPLACA (CDDR Y)
								 (IDIFFERENCE (CADDR Y)
									      Z]
				      finally (RETURN (PROG1 (LOGOR NWORDS (LLSH (IDIFFERENCE 36 Z)
										 30))
							     (SETQ UNFILLEDWORDS
							       (CONS (LIST NWORDS Z (IDIFFERENCE
									     36 Z))
								     UNFILLEDWORDS))
							     (ADD1VAR NWORDS]
			  (COND
			    (OFF (CONS FIELD OFF))
			    (T FIELD)))
			(ERROR "Illegal field specification" (CAR X]
	      (for X on FIELDS do (FRPLACA X (CDAR X)))

          (* This bit of garbage with the sort is so that the fields will be allocated in decreasing order, while retaining 
	  the original order. First TYPESPEC is transformed into a list where each element is (element); FIELDS is set to this
	  list temporariliy. Then a top-level copy of this list (thus the APPEND) is sorted so that POINTERS and FIXP's and 
	  FLOATP's come first, and then BITS in decreasing order; Each of these is allocated, with the FIELDSPEC smashed into 
	  the CDR. Then, going down the original FIELDS, we can extract the real information (thus the RPLAC in the last for))

                                                            (* This guarantees that, in particular, half-word fields
							    will fill properly)

          (* DATATYPES have (a) a type name, (b) a type-atom (generated by packing onto the type-name a special char followed 
	  by DATATYPE), and a type-number -
	  (GETTOPVAL type-atom) is the type number. The list USERDATATYPES contains entries (type-number type-name type-atom 
	  fields))


	      (SELECTQ FLG
		       (NIL (DECLAREDATATYPE TYPENM)        (* undeclare any old definition)
			    (SETQ TYPENUMBER (DEFTYPE NWORDS NPOINTERS))
			    (SETQ TYPEATOM (.DATATYPENAME. TYPENM))
			    (PUTFROM SNAME NUMBER TYPEATOM TYPENUMBER)
			    (PUTFROM NAME SNAME TYPENM TYPEATOM)
			    (PUTPROP TYPEATOM (QUOTE GLOBALVAR)
				     T)
			    (PUTFROM NAME NUMBER TYPENM TYPENUMBER)
			    (PUTFROM NUMBER NAME TYPENUMBER TYPENM)
			    (PUTFROM NUMBER UNAME TYPENUMBER (CONCAT TYPENM "s"))
			    (PUTFROM NAME DESCRIPTORS TYPENM FIELDS)
			    (PUTFROM NAME FIELDSPECS TYPENM FIELDSPECS))
		       (ARRAY 

          (* Horrible kludge that produces the create function to be used in a second call to BLOCKRECORD -
	  the free varialbe TYPENAME is set to the appropriate args to ARRAY to create one of these)


			      [SET TYPENAME (CONS (SETQ NWORDS (IDIFFERENCE NWORDS 2))
						  (IDIFFERENCE NWORDS (IQUOTIENT (ADD1 NPOINTERS)
										 2]
			      (SETQ TYPENUMBER 1))
		       NIL)
	      [COND
		(TYPENUMBER (for X on FIELDS
			       do [COND
				    ((LISTP (CAR X))        (* field with offset)
				      (SETQ X (CAR X]
				  (RPLACA X (LOGOR (CAR X)
						   (LLSH TYPENUMBER 9]
	      (RETURN FIELDS])

(DATATYPERROR
  (LAMBDA (DESCRIPTOR DATUM NEWVALUE CALL)
                                        (* lmm "24-JUN-78 22:09")
    (DECLARE (SPECVARS DESCRIPTOR NEWVALUE))
    (PROG NIL
          (RETURN
	    (ERRORX
	      (LIST
		(SELECTQ
		  (LOGAND 277Q (LRSH DESCRIPTOR 11Q))
		  (201Q                 (* want an array but will accept
					swapped array)
		    (COND
		      ((SWPARRAYP DATUM)
			(SETQ DESCRIPTOR
			  (LOGOR (LOGAND DESCRIPTOR 777777000777Q)
				 2000Q))
                                        (* change type from 201Q to 2)
			(RETURN (COND
				  ((EQ CALL (QUOTE FETCHFIELD))
				    (SWPPOS DATUM
					    (FUNCTION (LAMBDA (Y)
						(FETCHFIELD DESCRIPTOR 
							    Y)))))
				  (T (SWPPOS DATUM
					     (FUNCTION (LAMBDA (Y)
						 (REPLACEFIELD 
							 DESCRIPTOR Y 
							   NEWVALUE)))))
				  )))))
		  (10Q (COND
			 (DATUM         (* ARG NOT LIST)
				4)
			 ((EQ CALL (QUOTE FETCHFIELD))
                                        (* fetch CAR/CDR of NIL)
			   (RETURN NIL))
			 (T             (* ATTEMPT TO RPLAC NIL)
			    (SETQ DATUM NEWVALUE)
			    7)))
		  (14Q                  (* ARG NOT LITATOM)
		       20Q)
		  (222Q 

          (* want LARGE but will accept SMALL or FLOATING -
	  e.g. can implement (LOGAND (LRSH x n) n2) with FETCHFIELD)


			(COND
			  ((AND (NUMBERP DATUM)
				(EQ CALL (QUOTE FETCHFIELD)))
			    (CLOSER (LOC (SETQ NEWVALUE
					   (CONSTANT (IPLUS 1000000Q))))
				    (FIX DATUM))
			    (RETURN (FETCHFIELD DESCRIPTOR NEWVALUE)))
			  (T            (* can't smash it, though;
					cause NON NUMERIC ARG)
			     12Q)))
		  (ERRORX (LIST 40Q DATUM)))
		DATUM))))))
)
(DEFINEQ

(FETCHFIELD
  (LAMBDA (DESCRIPTOR DATUM)            (* lmm "24-AUG-78 11:42")
    (COND
      ((LISTP DESCRIPTOR)
	(IPLUS (FETCHFIELD (CAR DESCRIPTOR)
			   DATUM)
	       (CDR DESCRIPTOR)))
      (T (ASSEMBLE NIL
	           (CQ DATUM)
	           (CQ2 DESCRIPTOR)
	           (LDB 3 , = 110602000000Q)

          (* Get the datatype number field from the number box pointed 
	  to by ac2)


	           (JUMPE 3 , NOCHK)
	           (PUSHP)
	           (LDTY 1)
	           (CAIE 1 , 0 (3))
	           (JRST DTERR)
	           (POPP)
	       NOCHK
	           (MOVE 3 , 0 (2))
	           (AND 3 , = -77777001Q)
                                        (* get rid of special bits)
	           (TLO 3 , 1)          (* Add the ac field)
	           (LDB 1 , 3)          (* Fetch the field)
                                        (* bits 12-13 of the descriptor 
					mean: -
					0=pointer 1=fixed 2=floating 
					3=flag)
	           (LDB 2 , = 250302000000Q)

          (* get the bits in the descriptor which say which type of 
	  field this is)


	           (ADDI 2 , DISPATCH)
	           (JRST 0 (2))
	       DTERR
	           (CQ (DATATYPERROR DESCRIPTOR DATUM NIL
				     (QUOTE FETCHFIELD)))
	           (JRST OUT)
	       DISPATCH
	       PTR (JRST OUT)
	           (JFCL)
	       FIX (FASTCALL MKN)
	           (JRST OUT)
	       FLOAT
	           (FASTCALL MKFN)
	           (JRST OUT)
	       FLAG(SKIPN 1)
	           (SKIPA 1 , KNIL)
	           (MOVE 1 , KT)
	       OUT)))))

(REPLACEFIELD
  (LAMBDA (DESCRIPTOR DATUM NEWVALUE)   (* lmm "24-AUG-78 11:52")
    (COND
      ((LISTP DESCRIPTOR)
	(REPLACEFIELD (CAR DESCRIPTOR)
		      DATUM
		      (IDIFFERENCE NEWVALUE (CDR DESCRIPTOR))))
      (T (ASSEMBLE NIL
	           (CQ2 DESCRIPTOR)
	           (LDB 3 , = 110602000000Q)
	           (JUMPE 3 , NOCHK)
	           (CQ DATUM)
	           (LDTY 1)
	           (CAIE 1 , 0 (3))
	           (JRST DTERR)
	       NOCHK
	           (CQ NEWVALUE)
	           (MOVE 2 , 0 (2))     (* descriptor)
	           (TLNN 2 , 60Q)
	           (JRST PTR)           (* use as a pointer)
	           (TLNN 2 , 40Q)
	           (JRST FIX)
	           (TLNN 2 , 20Q)
	           (JRST FLOAT)
	           (CAMN 1 , KNIL)
	           (TDZA 1 , 1)         (* zero ac1 and skip)
	           (HRROI 1 , -1)
	           (JRST PTR)
	       FIX (FASTCALL IUNBOX)
	           (JRST PTR)
	       FLOAT
	           (FASTCALL FUNBOX)
	           (JRST PTR)
	       DTERR
	           (CQ (DATATYPERROR DESCRIPTOR DATUM NEWVALUE
				     (QUOTE REPLACEFIELD)))
	       PTR (CQ2 DESCRIPTOR)
	           (MOVE 2 , 0 (2))
	           (AND 2 , = -77777001Q)
                                        (* Get rid of datatype number)
	           (VAR (MOVE 3 , DATUM))
	           (TLO 2 , 3)          (* Add the ac field)
	           (DPB 1 , 2)          (* Fetch the field)
	       )))
    NEWVALUE))
)
(DEFINEQ

(TYPENAMEP
  (LAMBDA (DATUM TYPENAME)              (* lmm "11-SEP-78 02:28")
    (EQ (TYPENAME DATUM)
	TYPENAME)))

(NCREATE
  (LAMBDA (TYPENAME FROM)               (* lmm "31-JUL-78 01:24")
    (PROG (NTY NEWVAL)
          (OR (SETQ NTY (GETFROM NAME NUMBER TYPENAME))
	      (ERROR TYPENAME "not a user datatype"))
          (COND
	    ((TYPEP FROM NTY)
	      (SETQ NEWVAL (NALLOC NTY))
	      (ASSEMBLE NIL
		        (CQ (VAG (GETNWRDS NTY)))
		        (PUSHN)
		        (CQ NEWVAL)
		        (CQ2 FROM)
		        (POPN 3)
		        (ADDI 3 , 0 (1))
		        (HRL 1 , 2)
		        (BLT 1 , -1 (3))))
	    (T (SETQ NEWVAL (USERCONS NTY))))
          (RETURN NEWVAL))))

(.DATATYPENAME.
  [LAMBDA (X)                           (* lmm: 10Q OCT 113Q 371Q)
    (PACK (LIST X (FCHARACTER 34Q)
		(QUOTE DATATYPE])

(TYPENAMEFROMNUMBER
  (LAMBDA (N)                           (* lmm "11-SEP-78 05:30")
    (COND
      ((EQ N 1)
	(QUOTE ARRAYP))
      (T (OR (GETFROM NUMBER NAME N)
	     N)))))

(TYPENUMBERFROMNAME
  [LAMBDA (NAME)                        (* lmm: 1-DEC-75 23Q 34Q)
    (GETFROM NAME NUMBER NAME])

(SETTYPEDESCRIPTION
  [LAMBDA (TYPE STRING)
    (PUTFROM NUMBER UNAME (OR (SMALLP TYPE)
			      (GETFROM NAME NUMBER TYPE))
	     STRING])

(GETTYPEDESCRIPTION
  [LAMBDA (TYPE)
    (GETFROM NUMBER UNAME (OR (SMALLP TYPE)
			      (GETFROM NAME NUMBER TYPE])

(/REPLACEFIELD
  [LAMBDA (DESCRIPTOR DATUM NEWVALUE)   (* lmm: "23-AUG-76 00:01:53")
    [AND LISPXHIST (UNDOSAVE (LIST (QUOTE /REPLACEFIELD)
				   DESCRIPTOR DATUM (FETCHFIELD 
							 DESCRIPTOR 
							      DATUM]
    (REPLACEFIELD DESCRIPTOR DATUM NEWVALUE])

(REPLACEFIELDVAL
  [LAMBDA (DESCRIPTOR DATUM NEWVALUE)   (* lmm: "22-AUG-76 04:18:20")
                                        (* used by the record package-- 
					compiles open better than saving
					datum)
    (REPLACEFIELD DESCRIPTOR DATUM NEWVALUE)
    DATUM])

(/DECLAREDATATYPE
  (LAMBDA (TYPENAME FIELDSPECS FLG)     (* lmm "11-SEP-78 02:25")
    (COND
      ((EQ RECORD (QUOTE NO))
	(SETQ RECORDINIT (NCONC1 RECORDINIT
				 (LIST (QUOTE /DECLAREDATATYPE)
				       TYPENAME FIELDSPECS FLG))))
      (T (PROG ((PREV (AND TYPENAME (NOT FLG)
			   (GETFIELDSPECS TYPENAME))))
	       (AND PREV (OR (EQUAL FIELDSPECS PREV)
			     (LISPXPRINT (LIST (QUOTE datatype)
					       TYPENAME
					       (QUOTE redeclared))
					 T T)))
	       (AND LISPXHIST TYPENAME
		    (UNDOSAVE (LIST (QUOTE /DECLAREDATATYPE)
				    TYPENAME PREV)))
	       (RETURN (DECLAREDATATYPE TYPENAME FIELDSPECS FLG)))))))
)

(PUTPROPS FETCHFIELD 10MACRO (X (CFETCH X)))

(PUTPROPS FFETCHFIELD 10MACRO (X (CFETCH X T)))

(PUTPROPS REPLACEFIELD 10MACRO (X (CREPLACE X)))

(PUTPROPS FREPLACEFIELD 10MACRO (X (CREPLACE X T)))

(PUTPROPS REPLACEFIELDVAL 10MACRO (X (CREPLACE X NIL T)))

(PUTPROPS FREPLACEFIELDVAL 10MACRO (X (CREPLACE X T T)))

(PUTPROPS TYPENAMEP 10MACRO [X (CONS (QUOTE EQ)
				     (CONS (LIST (QUOTE TYPENAME)
						 (CAR X))
					   (CDR X])

(PUTPROPS .TYPEP. 10MACRO [X (CEXP (CAR X))
			     (COND ((GETPROP (CADR X)
					     (QUOTE COREVAL))
				    (PRED2 (QUOTE STE)
					   (QUOTE STN)
					   (LIST (CADR X)))
				    (SETQ PCF)
				    (QUOTE INSTRUCTIONS))
				   (T (LIST (QUOTE EQ)
					    (QUOTE (NTYP (AC)))
					    (CADR X])

(PUTPROPS /REPLACEFIELD 10MACRO [X (COND ((FIXP (CAR X))
					  (CONS [SUBPAIR (QUOTE (D1 D2))
							 (LIST (CAR X)
							       (LOGAND (CAR X)
								       -261633))
							 (QUOTE (LAMBDA (DATUM NEWVALUE)
									(DECLARE (LOCALVARS DATUM 
											 NEWVALUE))
									(UNDOSAVE
									  (LIST (QUOTE /REPLACEFIELD)
										D2 DATUM
										(FETCHFIELD D1 DATUM))
									  )
									(REPLACEFIELD D2 DATUM 
										      NEWVALUE]
						(CDR X)))
					 (T (QUOTE IGNOREMACRO])

(PUTPROPS LD@ OPD ((V)
		   (MOVE 1 , @ V)))

(PUTPROPS LOADNUMBER OPD [LAMBDA (AC N)
				 (LIST (COND [(NOT (OR (ILESSP N -262143)
						       (IGREATERP N 262143)))
					      (COND ((NOT (MINUSP N))
						     (LIST (QUOTE MOVEI)
							   AC
							   (QUOTE ,)
							   N))
						    (T (LIST (QUOTE HRROI)
							     AC
							     (QUOTE ,)
							     N]
					     ((ZEROP (LOGAND N 262143))
					      (LIST (QUOTE MOVSI)
						    AC
						    (QUOTE ,)
						    (LRSH N 18)))
					     ((IEQP (LOGAND N 262143)
						    262143)
					      (LIST (QUOTE HRLOI)
						    AC
						    (QUOTE ,)
						    (LRSH N 18)))
					     (T (LIST (QUOTE MOVE)
						      AC
						      (QUOTE ,)
						      (QUOTE =)
						      N])

(PUTPROPS ADDC OPD [LAMBDA (VAL AC)
			   (COND ((ZEROP VAL)
				  NIL)
				 (T (LIST (COND ((OR (IGREATERP VAL 131071)
						     (ILESSP VAL -131071))
						 (LIST (QUOTE ADD)
						       AC
						       (QUOTE ,)
						       (QUOTE =)
						       VAL))
						((IGREATERP VAL 0)
						 (LIST (QUOTE ADDI)
						       AC
						       (QUOTE ,)
						       VAL))
						(T (LIST (QUOTE SUBI)
							 AC
							 (QUOTE ,)
							 (IMINUS VAL])

(PUTPROPS .FLOC. CTYPE FNF)
(DEFINEQ

(CFETCH
  (LAMBDA (X NOCHECK OFFSET)                                (* lmm " 5-OCT-78 01:44")
    (COND
      ((FIXP (CAR X))                                       (* descriptor given)
	(PROG (TRAN (DESCRIPTOR (CAR X))
		    (DATUM (CADR X))
		    LOC DISP BPTR FETCH TYPE)
	      (SETQ DISP (LOGAND DESCRIPTOR 777Q))
	      (COND
		((AND (EQ (CAR (LISTP DATUM))
			  (QUOTE WORDOFFSET))
		      (FIXP (CADDR DATUM)))
		  (SETQ DISP (IPLUS DISP (CADDR DATUM)))
		  (SETQ DATUM (CADR DATUM))))
	      (SETQ BPTR (LRSH DESCRIPTOR 30Q))
	      (OR NOCHECK (COND
		    ((OR (ZEROP (SETQ TYPE (LRSH (LOGAND 77000Q DESCRIPTOR)
						 11Q)))
			 (NULL (SETQ TYPE (GETFROM NUMBER SNAME TYPE))))
		      (SETQ NOCHECK T))))
	      (SETQ FETCH (LIST (COND
				  ((IEQP BPTR 2222Q)
				    (COND
				      ((AND NOCHECK (ZEROP DISP))
					(SETQ FETCH (LIST (QUOTE CDR)
							  DATUM))
					(GO GOTFIELD)))
				    (LIST (QUOTE HLRZ)
					  1
					  (QUOTE ,)
					  DISP
					  (QUOTE (1))))
				  ((EQ BPTR 22Q)
				    (COND
				      ((AND NOCHECK (ZEROP DISP))
					(SETQ FETCH (LIST (QUOTE CAR)
							  DATUM))
					(GO GOTFIELD)))
				    (LIST (QUOTE HRRZ)
					  1
					  (QUOTE ,)
					  DISP
					  (QUOTE (1))))
				  ((EQ BPTR 44Q)
				    (COND
				      ((AND NOCHECK (ZEROP DISP)
					    (LITATOM DATUM))
					(SETQ FETCH (LIST (QUOTE ASSEMBLE)
							  NIL
							  (LIST (QUOTE VAR)
								(LIST (QUOTE LD@)
								      DATUM))))
					(GO GOTFIELD)))
				    (LIST (QUOTE MOVE)
					  1
					  (QUOTE ,)
					  DISP
					  (QUOTE (1))))
				  (T (LIST (QUOTE LDB)
					   1
					   (QUOTE ,)
					   (QUOTE =)
					   (LOGOR (LLSH BPTR 30Q)
						  DISP 1000000Q))))))
	      (OR NOCHECK (SETQ FETCH (CONS (LIST (QUOTE VAR)
						  (LIST (QUOTE CKUDT)
							TYPE))
					    FETCH)))
	      (SETQ FETCH (CONS (QUOTE ASSEMBLE)
				(CONS NIL (CONS (LIST (QUOTE CQ)
						      DATUM)
						FETCH))))
	  GOTFIELD
	      (SETQ FETCH (SELECTQ (LRSH (LOGAND DESCRIPTOR 60000000Q)
					 26Q)
				   (0                       (* pointer)
				      FETCH)
				   (1                       (* Fixp)
				      (LIST (QUOTE LOC)
					    (COND
					      ((AND OFFSET (EQ (CAR FETCH)
							       (QUOTE ASSEMBLE)))
						(PROG1 (NCONC1 FETCH (LIST (QUOTE ADDC)
									   OFFSET 1))
						       (SETQ OFFSET)))
					      (T FETCH))))
				   (2                       (* floatp)
				      (LIST (QUOTE FLOC)
					    FETCH))
				   (PROGN                   (* test)
					  (LIST (QUOTE NEQ)
						FETCH
						(QUOTE (VAG 0))))))
	      (COND
		(OFFSET (SETQ FETCH (LIST (QUOTE IPLUS)
					  FETCH OFFSET))))
	      (RETURN FETCH)))
      ((AND (EQ (CAR (LISTP (CAR X)))
		(QUOTE QUOTE))
	    (LISTP (CADAR X))
	    (FIXP (CAADAR X))
	    (FIXP (CDADAR X)))
	(CFETCH (CONS (CAADAR X)
		      (CDR X))
		NOCHECK
		(CDADAR X)))
      (T (QUOTE IGNOREMACRO)))))

(CREPLACE
  (LAMBDA (X NOCHECK RETURNDATUM OFFSET)                    (* lmm " 5-OCT-78 00:59")
    (COND
      ((FIXP (CAR X))                                       (* descriptor given)
	(PROG (TRAN (DESCRIPTOR (CAR X))
		    (DATUM (CADR X))
		    LOC DISP BPTR REPLACE (NEWVALUE (CADDR X))
		    FIELD TYPE LV)
	      (SETQ DISP (LOGAND DESCRIPTOR 777Q))
	      (COND
		((AND (EQ (CAR (LISTP DATUM))
			  (QUOTE WORDOFFSET))
		      (FIXP (CADDR DATUM))
		      (OR (NULL RETURNDATUM)
			  (NOT VCF)))
		  (SETQ DISP (IPLUS DISP (CADDR DATUM)))
		  (SETQ DATUM (CADR DATUM))))
	      (SETQ BPTR (LRSH DESCRIPTOR 30Q))
	      (SETQ FIELD (LRSH (LOGAND DESCRIPTOR 60000000Q)
				26Q))
	      (SETQ REPLACE (COND
		  ((IEQP BPTR 2222Q)
		    (LIST (QUOTE HRLM)
			  2
			  (QUOTE ,)
			  DISP
			  (LIST 1)))
		  ((EQ BPTR (QUOTE 22Q))
		    (LIST (QUOTE HRRM)
			  2
			  (QUOTE ,)
			  DISP
			  (LIST 1)))
		  ((EQ BPTR 44Q)
		    (LIST (QUOTE MOVEM)
			  2
			  (QUOTE ,)
			  DISP
			  (LIST 1)))
		  (T (LIST (QUOTE DPB)
			   2
			   (QUOTE ,)
			   (QUOTE =)
			   (LOGOR (LLSH BPTR 30Q)
				  DISP
				  (LLSH 1 22Q))))))
	      (SETQ NEWVALUE (SELECTQ FIELD
				      (0 (LIST (QUOTE CQ2)
					       NEWVALUE))
				      (1                    (* fixp)
					 (COND
					   ((AND (ZEROP NEWVALUE)
						 (SELECTQ (CAR REPLACE)
							  (MOVEM (RPLACA REPLACE (QUOTE SETZB)))
							  NIL)
						 (QUOTE (*))))
					   ((FIXP NEWVALUE)
					     (LIST (QUOTE LOADNUMBER)
						   2
						   (COND
						     ((AND OFFSET (NOT (OR VCF PCF NCF)))
						       (PROG1 (IDIFFERENCE NEWVALUE OFFSET)
							      (SETQ OFFSET)))
						     (T NEWVALUE))))
					   (T (LIST (QUOTE CQ2)
						    (LIST (QUOTE VAG)
							  (LIST (QUOTE FIX)
								NEWVALUE))))))
				      (2                    (* float)
					 (LIST (QUOTE CQ2)
					       (LIST (QUOTE VAG)
						     (LIST (QUOTE FLOAT)
							   NEWVALUE))))
				      (PROGN                (* flag)
					     (COND
					       ((NULL NEWVALUE)
						 (QUOTE (MOVEI 2 , 0)))
					       ((EQ NEWVALUE T)
						 (QUOTE (SETO 2 ,)))
					       (T (LIST (QUOTE CQ2)
							(LIST (QUOTE COND)
							      (LIST NEWVALUE (QUOTE (VAG -1)))
							      (LIST T (QUOTE (VAG 0))))))))))
	      (SETQ REPLACE (LIST REPLACE))
	      (COND
		((AND OFFSET (NEQ OFFSET 0))
		  (SETQ REPLACE (CONS (LIST (QUOTE ADDC)
					    (IMINUS OFFSET)
					    2)
				      REPLACE))))
	      (SETQ REPLACE (CONS NEWVALUE REPLACE))
	      (OR NOCHECK (ZEROP (SETQ TYPE (LRSH (LOGAND 77000Q DESCRIPTOR)
						  11Q)))
		  (NULL (SETQ TYPE (GETFROM NUMBER SNAME TYPE)))
		  (SETQ REPLACE (CONS (LIST (QUOTE VAR)
					    (LIST (QUOTE CKUDT)
						  TYPE))
				      REPLACE)))
	      (SETQ REPLACE (CONS (QUOTE ASSEMBLE)
				  (CONS NIL (CONS (LIST (QUOTE CQ)
							DATUM)
						  REPLACE))))
	      (RETURN (COND
			((AND (NOT RETURNDATUM)
			      (OR VCF PCF NCF))
			  (NCONC1 REPLACE (QUOTE (MOVE 1 , 2)))
			  (COND
			    (OFFSET (NCONC1 REPLACE (LIST (QUOTE ADDC)
							  OFFSET 1))))
			  (SELECTQ FIELD
				   (0 REPLACE)
				   (1 (LIST (QUOTE LOC)
					    REPLACE))
				   (2 (LIST (QUOTE FLOC)
					    REPLACE))
				   (PROGN                   (* test)
					  (LIST (QUOTE NEQ)
						REPLACE
						(QUOTE (VAG 0))))))
			(T REPLACE)))))
      ((AND (NULL OFFSET)
	    (EQ (CAR (LISTP (CAR X)))
		(QUOTE QUOTE))
	    (LISTP (CADAR X))
	    (FIXP (CAADAR X))
	    (FIXP (CDADAR X)))
	(CREPLACE (CONS (CAADAR X)
			(CDR X))
		  NOCHECK RETURNDATUM (CDADAR X)))
      (T (QUOTE IGNOREMACRO)))))
)
(DECLARE: EVAL@COMPILE DONTCOPY 

(PUTPROPS PUTFROM MACRO [X (SELECTQ (CAR X)
				    [NUMBER (FMEMB (CADR X)
						   (QUOTE (NAME UNAME)))
					    (SUBPAIR (QUOTE (OP NUMBER NEWVALUE))
						     (CONS (SELECTQ (CADR X)
								    (UNAME (QUOTE HRRM))
								    (NAME (QUOTE HRLM))
								    (HELP))
							   (CDDR X))
						     (QUOTE (ASSEMBLE NIL (CQ (VAG (FIX NUMBER)))
								      (CQ2 NEWVALUE)
								      (CAMN 2 , KNIL)
								      (MOVEI 2 , 0)
								      (OP 2 , TYPNAM (1]
				    (SNAME (OR (EQ (CADR X)
						   (QUOTE NUMBER))
					       (HELP))
					   (LIST (QUOTE PROG1)
						 (CONS (QUOTE SETATOMVAL)
						       (CDDR X))
						 (LIST (QUOTE PUT)
						       (CADDR X)
						       (QUOTE (QUOTE GLOBALVAR))
						       T)))
				    (LIST (QUOTE PUTHASH)
					  (CADDR X)
					  (CADDDR X)
					  (PACK* (QUOTE dt)
						 (CAR X)
						 (QUOTE %.)
						 (CADR X])

(PUTPROPS GETFROM MACRO [X (SELECTQ (CAR X)
				    [NUMBER (SELECTQ (CADR X)
						     [SNAME (LIST (QUOTE GETFROM)
								  (QUOTE NAME)
								  (QUOTE SNAME)
								  (LIST (QUOTE GETFROM)
									(QUOTE NUMBER)
									(QUOTE NAME)
									(CADDR X]
						     (SUBPAIR
						       (QUOTE (OP NUM))
						       (CONS (SELECTQ (CADR X)
								      (UNAME (QUOTE HRRZ))
								      (NAME (QUOTE HLRZ))
								      (HELP))
							     (CDDR X))
						       (QUOTE (ASSEMBLE NIL
									(CQ (VAG (FIX NUM)))
									(OP 1 , TYPNAM (1))
									(JUMPN 1 , * 2)
									(MOVE 1 , KNIL]
				    (SNAME (OR (EQ (CADR X)
						   (QUOTE NUMBER))
					       (HELP))
					   (CONS (QUOTE GETATOMVAL)
						 (CDDR X)))
				    (LIST (QUOTE GETHASH)
					  (CADDR X)
					  (PACK* (QUOTE dt)
						 (CAR X)
						 (QUOTE %.)
						 (CADR X])
)
(DEFINEQ

(HARRAYP
  [LAMBDA (X)                           (* lmm: "29-NOV-76 16:41:16")
    (AND (ARRAYP X)
	 (EQ X (ARRAYBEG X))
	 (MINUSP (OPENR (LOC X])

(ARRAYTYP
  (LAMBDA (ARRAY)                       (* lmm "11-SEP-78 02:20")

          (* According to the VM, this function really should return 
	  either FIXP or POINTER depending on the type of the array 
	  pointed at. I use it in CIRCL to supply the second arg to 
	  ARRAY -- thus, if ARRAY is ever changed to VM specs 
	  (which say that TYP=FIXP or ARRAYP, then ARRAYTYP can be 
	  changed too))



          (* (AND (ARRAYP ARRAY) (EQ ARRAY (SETQ ARRAY 
	  (ARRAYBEG ARRAY))) (COND ((IEQP (ARRAYSIZE ARRAY) 
	  (SETQ ARRAY (IPLUS (LOC (CAR (VAG (ADD1 
	  (LOC ARRAY))))) -2))) (QUOTE FIXP)) ((ZEROP ARRAY) 
	  (QUOTE POINTER)))))


    (COND
      ((SWPARRAYP ARRAY)
	(IPLUS (LOC (FNOPENRA ARRAY -1))
	       -2))
      (T (IPLUS (LOC (CAR (VAG (ADD1 (LOC ARRAY)))))
		-2)))))

(COPYARRAY
  [LAMBDA (AR)                          (* lmm: "21-JUL-77 15:35")
    [COND
      ([NOT (AND (ARRAYP AR)
		 (EQ AR (ARRAYBEG AR]
	(ERRORX (LIST 28 AR]
    (PROG ((SIZE (ARRAYSIZE AR))
	   NEW)
          (ASSEMBLE NIL
		    (CQ (VAG SIZE))
		    (PUSHN)
		    (CQ (SETQ NEW (ARRAY SIZE)))
		    (CQ2 AR)
		    (POPN 3)
		    (ADDI 3 , 0 (1))
		    (HRL 1 , 2)
		    (BLT 1 , 1 (3)))
          (RETURN NEW])
)
(DEFINEQ

(SETUPDATATYPES
  (LAMBDA NIL                           (* lmm "24-AUG-78 12:13")
    (MAPC (QUOTE ((dtNAME.NUMBER . 35)
		  (dtNAME.SNAME . 35)
		  (dtNAME.DESCRIPTORS . 7)
		  (dtNAME.FIELDSPECS . 7)))
	  (FUNCTION (LAMBDA (X)
	      (SETATOMVAL (CAR X)
			  (LIST (HARRAY (CDR X)))))))
    (MAPC (QUOTE ((1 ARRAYT "arrays" CCODEP HARRAYP READTABLEP 
		     TERMTABLEP ARRAYP POINTER.INTO.ARRAY.SPACE)
		  (2 BLOCKT "stack, swap buffer" STACK)
		  (4 HANDLT "swap array handles" SWPARRAYP)
		  (5 STKPT "stack pointers" STACKP)
		  (6 BTABT "gc bittable" GC.BTAB)
		  (7 HASHTT "atom hash table" ATOM.HASH)
		  (8 LISTT "lists" LISTP)
		  (9 VCELLT "value cells" VCELLP)
		  (12 ATOMT "atoms" LITATOM)
		  (16 FLOATT "floating numbers" FLOATP)
		  (18 FIXT "large numbers" FIXP)
		  (20 SMALLT "small numbers" SMALLP)
		  (24 STPTT "string pointers" STRINGP)
		  (26 CHART "page 0" VAG)
		  (28 PNAMT "atom name characters" ATOM.CHARS)
		  (30 STRNGT "string characters" STRING.CHARS)))
	  (FUNCTION (LAMBDA (X)
	      (PUTFROM SNAME NUMBER (CADR X)
		       (CAR X))
	      (PUT (CADR X)
		   (QUOTE COREVAL)
		   (CAR X))
	      (PUTFROM NUMBER UNAME (CAR X)
		       (CADDR X))
	      (MAPC (CDDDR X)
		    (FUNCTION (LAMBDA (NAM)
			(PUTFROM NAME NUMBER NAM (CAR X))
			(PUTFROM NUMBER NAME (CAR X)
				 NAM)
			(PUTFROM NAME SNAME NAM (CADR X))))))))
    (AND (CCODEP (QUOTE SETUPDATATYPES))
	 (PUTD (QUOTE SETUPDATATYPES)))))
)
(COND ((CCODEP (QUOTE SETUPDATATYPES))
       (SETUPDATATYPES)))



(* make functions accept type names)

(DEFINEQ

(NEWRECLAIM
  [LAMBDA (TYPE)                        (* lmm: "10-DEC-76 18:29:28")
    (OLDRECLAIM (AND TYPE (OR (SMALLP TYPE)
			      (TYPENUMBERFROMNAME TYPE])

(NEWDEFEVAL
  (LAMBDA (TYPE FN)                                         (* lmm "29-DEC-78 17:15")
    (PROG (NEW)
          (COND
	    ((NOT (SMALLP TYPE))
	      (COND
		((EQ 1 (SETQ NEW (GETFROM NAME NUMBER TYPE)))
		  (OLDDEFEVAL 1 (FUNCTION DEFEVALARRAY))
		  (RETURN (PROG1 (OR (GETPROP TYPE (QUOTE DEFEVAL))
				     T)
				 (AND FN (PUT TYPE (QUOTE DEFEVAL)
					      (COND
						((EQ FN T)
						  NIL)
						(T FN))))))))
	      (SETQ TYPE NEW)))
          (RETURN (OLDDEFEVAL TYPE FN)))))

(NEWDEFPRINT
  (LAMBDA (TYPE FN)                                         (* lmm "29-DEC-78 17:15")
    (PROG (NEW)
          (COND
	    ((NOT (SMALLP TYPE))
	      (COND
		((EQ 1 (SETQ NEW (GETFROM NAME NUMBER TYPE)))
		  (OLDDEFPRINT 1 (FUNCTION DEFPRINTARRAY))
		  (RETURN (PROG1 (OR (GETPROP TYPE (QUOTE DEFPRINT))
				     T)
				 (AND FN (PUT TYPE (QUOTE DEFPRINT)
					      (COND
						((EQ FN T)
						  NIL)
						(T FN))))))))
	      (SETQ TYPE NEW)))
          (OLDDEFPRINT TYPE FN))))

(DEFPRINTARRAY
  (LAMBDA (X)                                               (* lmm "29-DEC-78 17:15")
                                                            (* all type 1 prints out with this function;
							    the dispatch is then upon the type-name)
    (PROG NIL
          (RETURN (APPLY* (OR (GETPROP (TYPENAME X)
				       (QUOTE DEFPRINT))
			      (RETURN))
			  X)))))

(DEFEVALARRAY
  (LAMBDA (X)                                               (* lmm "29-DEC-78 17:14")
                                                            (* all type 1 prints out with this function;
							    the dispatch is then upon the type-name)
    (PROG NIL
          (RETURN (APPLY* (OR (GETPROP (TYPENAME X)
				       (QUOTE DEFEVAL))
			      (RETURN))
			  X)))))

(NEWMINFS
  [LAMBDA (N TYPE)                      (* lmm: "10-DEC-76 18:30:26")
    (OLDMINFS N (AND TYPE (OR (SMALLP TYPE)
			      (TYPENUMBERFROMNAME TYPE])
)
[MAPC (QUOTE ((REPLACEFIELD FREPLACEFIELD)
	      (FETCHFIELD FFETCHFIELD)
	      (REPLACEFIELDVAL FREPLACEFIELDVAL)
	      (RECLAIM OLDRECLAIM NEWRECLAIM)
	      (DEFEVAL OLDDEFEVAL NEWDEFEVAL)
	      (MINFS OLDMINFS NEWMINFS)
	      (DEFPRINT OLDDEFPRINT NEWDEFPRINT)))
      (FUNCTION (LAMBDA (X)
			(MOVD? (CAR X)
			       (CADR X))
			(COND ((GETD (CADDR X))
			       (MOVD (CADDR X)
				     (CAR X))
			       (PUTD (CADDR X]



(* STORAGE)

(DEFINEQ

(STORAGE
  (LAMBDA (FLG GCFLG)                   (* lmm " 1-AUG-78 16:56")
                                        (* FLG T, INCLUDE SYSTEM 
					ASSIGNED)
    (COND
      (GCFLG (PROG ((MA (MINFS 0 (QUOTE ARRAYP)))
		    (MSC (MINFS 0 (QUOTE STRING.CHARS)))
		    (MAC (MINFS 0 (QUOTE ATOM.CHARS))))
	           (RECLAIM (QUOTE ARRAYP))
	           (RECLAIM (QUOTE STRING.CHARS))
	           (RECLAIM (QUOTE ATOM.CHARS))
	           (MINFS MA (QUOTE ARRAYP))
	           (MINFS MSC (QUOTE STRING.CHARS))
	           (MINFS MAC (QUOTE ATOM.CHARS)))))
    (LISPXTERPRI)
    (STPRIN 0 (QUOTE "TYPE"))
    (STPRIN 34 (QUOTE "USED"))
    (STPRIN 42 (QUOTE "ASSIGNED"))
    (COND
      (FLG (STPRIN 51 "SYSTEM")))
    (LISPXTERPRI)
    (PROG ((N 1)
	   (SU 0)
	   (SA 0)
	   (SS 0)
	   U)
      A   (COND
	    ((SETQ U (OR (USED N)
			 (COND
			   ((NEQ (SETQ U (ASSED N))
				 0)
			     U)
			   ((AND FLG (NEQ (ASSED N T)
					  0))
			     0))))
	      (SETQ SU (IPLUS SU U))
	      (LISPXPRIN1 (TYPENAMEFROMNUMBER N))
	      (STPRIN 12 (OR (GETFROM NUMBER UNAME N)
			     ""))
	      (STPRIN 34 U)
	      (SETQ SA (IPLUS (STPRIN 42 (ASSED N))
			      SA))
	      (COND
		(FLG (SETQ SS (IPLUS (STPRIN 51 (ASSED N T))
				     SS))))
	      (LISPXTERPRI)))
          (COND
	    ((ILESSP (SETQ N (ADD1 N))
		     64)
	      (GO A))
	    (T
	      (STPRIN 8 (QUOTE "SUM "))
	      (LISPXPRIN1
		(LIST
		  (for I from 0 to 510
		     count
		      (EQ (CAR (VAG (IPLUS (LOC (COREVAL TYPTAB))
					   I)))
			  (VAG 0)))
		  "pages left"))
	      (STPRIN 34 SU)
	      (STPRIN 42 SA)
	      (COND
		(FLG (STPRIN 51 SS)))
	      (LISPXTERPRI))))))

(STPRIN
  [LAMBDA (X Y)                         (* lmm: "20-JAN-77 09:32:33")
    (LISPXSPACES 1)
    (LISPXSPACES (IDIFFERENCE X (POSITION)))
    (LISPXPRIN1 Y])
)
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
(BLOCK: STORAGE STORAGE STPRIN (NOLINKFNS . T))
(BLOCK: NIL DECLAREDATATYPE .DATATYPENAME. (NOLINKFNS . T)
	(LOCALVARS . T))
(BLOCK: NIL CREPLACE CFETCH (LOCALVARS . T))
(BLOCK: NIL USERDATATYPES GETDESCRIPTORS GETFIELDSPECS DATATYPERROR FETCHFIELD REPLACEFIELD TYPENAMEP 
	NCREATE TYPENAMEFROMNUMBER TYPENUMBERFROMNAME SETTYPEDESCRIPTION GETTYPEDESCRIPTION 
	/REPLACEFIELD REPLACEFIELDVAL /DECLAREDATATYPE (GLOBALVARS RECORDINIT RECORD)
	HARRAYP ARRAYTYP COPYARRAY SETUPDATATYPES NEWRECLAIM NEWDEFEVAL NEWDEFPRINT DEFPRINTARRAY 
	DEFEVALARRAY NEWMINFS (LOCALVARS . T))
]

(RPAQQ DATATYPEFIELDTYPES ((FLOATP 0.0)
			   (FIXP 0)
			   (POINTER NIL)
			   (FLAG NIL)
			   (XPOINTER NIL)
			   (FULLXPOINTER NIL)))
(PUTPROPS DATATYPE COPYRIGHT (NONE))
(DECLARE: DONTCOPY
  (FILEMAP (NIL (2524 12843 (USERDATATYPES 2536 . 2928) (GETDESCRIPTORS 2932 . 3139) (GETFIELDSPECS 3143
 . 3348) (DECLAREDATATYPE 3352 . 11087) (DATATYPERROR 11091 . 12840)) (12845 15945 (FETCHFIELD 12857 .
 14466) (REPLACEFIELD 14470 . 15942)) (15947 18684 (TYPENAMEP 15959 . 16084) (NCREATE 16088 . 16670) (
.DATATYPENAME. 16674 . 16822) (TYPENAMEFROMNUMBER 16826 . 17018) (TYPENUMBERFROMNAME 17022 . 17149) (
SETTYPEDESCRIPTION 17153 . 17300) (GETTYPEDESCRIPTION 17304 . 17428) (/REPLACEFIELD 17432 . 17710) (
REPLACEFIELDVAL 17714 . 18006) (/DECLAREDATATYPE 18010 . 18681)) (21292 28016 (CFETCH 21304 . 24304) (
CREPLACE 24308 . 28013)) (29860 31345 (HARRAYP 29872 . 30030) (ARRAYTYP 30034 . 30896) (COPYARRAY 
30900 . 31342)) (31347 32844 (SETUPDATATYPES 31359 . 32841)) (32963 35203 (NEWRECLAIM 32975 . 33151) (
NEWDEFEVAL 33155 . 33678) (NEWDEFPRINT 33682 . 34202) (DEFPRINTARRAY 34206 . 34613) (DEFEVALARRAY 
34617 . 35022) (NEWMINFS 35026 . 35200)) (35679 37646 (STORAGE 35691 . 37465) (STPRIN 37469 . 37643)))
))
STOP
