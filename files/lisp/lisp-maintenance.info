
	How to Handle Versions of Lisp, Lisp-Users and Problems
	Related to Both or Either, and Still Retain Your Sanity

1.)  Whom to report problems to. 
	Larry Masinter at Xerox-Parc (Masinter@Parc) is the person who
assumes initial responsibility for maintaining Interlisp.  It is his job
to determine into whose area a particular problem or bug falls--and then
to forward it appropriately.  There is a fair amount of delicate feelings
and uh, politics involved in handling these problems.  It is always best to
forward a concise report to Larry, including the protocol for duplicating
the problem, then wait for him to reply.  If you hear nothing within one
or two days, it generally means that you have uncovered a new problem, and
Larry has forwarded it to the appropriate person for a solution.  
	As an example, there is a "kernal" portion of Lisp, written in  
Macro-10 and maintained by BBN.  Parc has the source-code for this portion
of the code, and they are capable of fixing any bugs that arise in it.  
However, in the event that a problem is discovered that requires fixing in
this assembly code, it is forwarded to BBN, and we all wait several weeks
for a fix in a new version of Lisp.  Just as Parc waits on BBN for such
fixes, we wait on Parc for fixes to problems that require any changing of
source code...even though we can in fact get ahold of any of the sources
that are available for Interlisp.

2.) Lisp Users and their problems.
	You will frequently receive msgs from Lisp users in which they
make a complaint -- generally these do not contain much in the line
of details.  Start off by obtaining enough information so that you can
reproduce the problem.  Then decide whether the problem is due to a bug
or due to their misinterpretation of how something in the manual should be
done.  
	In general, Lisp should NEVER leave its users in an unprotected
or a hung state, or in a state where they are thrown back to the EXEC with
an error message.  If you do encounter a complaint involving one of these
incidents, it should be reported as a potential bug to Masinter @Parc .

3.)  Versions of Lisp.
	The actual copies of Lisp are kept on <lisp>, and are indirectly
referred to from the appropriate file on <subsys>.  A program called as
<lisp>make-indirect.sav will make the indirect reference file which is
placed on <subsys>.

4.)  Bringing over new versions of Lisp.
	After you have been notified that a new version of Lisp is available,
and you feel enough time has passed that it has become reasonably stable,
you do the following:
	  a.  use FTP to bring over [PARC]<lisp>netlisp.sav and
	[PARC]<lisp>message.txt.
	  b.  name the above files on [SUMEX] in <lisp> to have an 
 	extension which corresponds to that version's of Lisp creation 
	date (start up the new version of Lisp--it prints out it's creation
	date) so that, for example, June 2, 1977 would be 70602.
	  c.  make the new version of Lisp be pointed to by <subsys>nlisp .
	  d.  update <doc>lisp-versions.info  (this is a file that serves
	as the "scorecard" so that you and Lisp users can tell which
	version of Lisp is which).
	  e.  rename message.txt ("a" above) to be parcmessage.txt
	Leave the other files on <lisp>.
	  f.  delete old versions of files on <doc>, then run <operator>build
	to update the file referred to by HELP.

5.)  Be careful.
	Look at the file <lisp>update-timetable.info .  This file gives
a an outline of the time-frame you should plan on using in springing a new
version of Lisp on the Lisp user community.  Read it, and try to be as
careful as possible when you delete what you believe to be an old version
of Lisp.

6.)  Checking on what versions of Lisp are being used.
	Use the program <lisp>sysall.sav to generate a list (on <lisp>) of
the Lisp sysout's currently on the system, and who they were created by. 
Use the RUNfile named as <lisp>sysall.run to do this, and the results will
automatically be put into <lisp>sysout.owners for you.  Do
this from time to time, and check the results against the versions of Lisp
currently available on the system.  Use the results to determine whether
there are little used versions of Lisp which can be removed from public
directory space.

7.)  Never delete, always archive.
	When a version of Lisp is unused and is going to be removed from
<lisp>, do so by archiving rather than deleting.  Then, in several months 
when a user comes to you and says that they have restored a old sysout
of their's and it no longer works because its parent Lisp is missing, you
can retrieve the old Lisp and make it available for the user on a directory
other than <lisp> (preferably, one of the user's own directories).

8.)  People who want, or don't want, Lisp to get personal.
	From time to time you will receive requests from people who:
	  a.  DO want Lisp to greet them with their proper name, or a
	special nickname.
	  b.  DON'T want Lisp to get "cute" with them when they log in at
	2 or 3 a.m. in the morning.
	Both of these functions are controlled by a file, known as the
USERNAMEFILE, which can be modified from within a version of Lisp.  See
the attached recording for examples of how to update this file, in either
of the two situations. 

9.)  Old version of Lisp can probably be removed.
	The version of Lisp which is <lisp>lisp.sav;50104 is quite old
and should now be ready to be archived and removed from active status.
Use the <lisp>sysall.run check program to see whether there are no longer
any sysout's using this Lisp...if not, refer to the
<lisp>update-timetable.info for procedure to start eliminating a version
of Lisp.


 SUMEX-AIM Tenex 1.31.92, SUMEX-AIM Exec 1.51.60
@johnson  staff
 JOB 12 ON TTY102 2-JAN-78 14:18
 PREVIOUS LOGIN: 2-JAN-78 13:46
 [JOHNSON HAS ONE OTHER JOB]
 Tenex will go down THU 1-5-78 1800 til THU 1-5-78 2359
 for preventive maintenance
@raise
@CONN LISP
 LISP over allocation by 964 pages.
@DIR LISP.SAV

   <LISP>
 LISP.SAV;71114,70702,70110,50104
  4 FILES, 2153 PAGES

@RUN LISP.SAV;71114 

INTERLISP-10  14-NOV-77 ...


Hello.
_LOAD(USERNAMES]
FILE CREATED 15-SEP-77 09:08:04
(MAKEUSERNAMES)
(USERNAMELST)
<LISP>USERNAMES.;144
_EDITV(USERNAMELST]
edit
************************* Recording Comment *************************
to find a particular name in the list...

*********************************************************************
*^ F JOHNSON
*P
(JOHNSON . SUZANNE)
*^ F LAVANCHY

LAVANCHY  ?
************************* Recording Comment *************************
that one does not exist..it's a new directory...let's add it...


*********************************************************************
*^ (N (LAVANCHY . ANDRE]
************************* Recording Comment *************************
now...to delete a name from the list...

*********************************************************************
*^ F JOHNSON
*(:]
*^ F JOHNSON

JOHNSON  ?
*^ (N (JOHNSON . SUZANNE]
*^ F JOHNSON
*P
(JOHNSON . SUZANNE)
************************* Recording Comment *************************
and it is back,....

*********************************************************************
*^ F CARHART
*P
(CARHART RAY (&))
************************* Recording Comment *************************
the & usage you see in CARHART, above, is what you do to eliminate 
cuteness from greetings.  That is, the "my you are up late tonite"
style of greeting which Lisp employs at certain odd hours of the
morning.  Some people explicitly object to it and want it eliminated.

*********************************************************************
*OK
USERNAMELST

_MAKEUSERNAMES]
(Be sure to add the name of new users to <LISP>USERS)
<LISP>USERNAMES.;145,HSU NOT A USER.LEVINE NOT A USER.NSMITH NOT A USER.
REISS NOT A USER.HAWRUSIK NOT A USER.RTAYLOR NOT A USER.GBROWN
 NOT A USER.CHEN NOT A USER.FABENS NOT A USER.MCDONALD NOT A USER.
<LISP>USERNAMEFILE.;24
u.d.f.
DIR

************************* Recording Comment *************************
you can ignore the "be sure to add ..." message above.  the lines about
name not a user etc. simply mean that some directories have been 
deleted from SUMEX, and Lisp still has name information about them. 
The next time you have cause to alter the Name file, you can delete
the names that are listed.  

*********************************************************************
_GREET(LAVANCHY)



GC: lists
493, 10221 FREE CELLS
Hello.
T
************************* Recording Comment *************************
that is how you assertain that you've made a change...the current greeting is
just "hello", or you would see the person's name used.

*********************************************************************
_^C
@DIR USERNAMEFILE

   <LISP>
 USERNAMEFILE.;24,23
  2 FILES, 6 PAGES

@DIR USERNAMES

   <LISP>
 USERNAMES.;145,144
  2 FILES, 6 PAGES

@PURGE USERNAMEFILE.;23
@PURGE USERNAMES.;144
************************* Recording Comment *************************
now, be sure to get rid of the old files

*********************************************************************
@LOGO
 LISP over allocation by 964 pages.
 [JOHNSON HAS ONE OTHER JOB]




