(FILECREATED "15-DEC-82 00:03:34" <NEWLISP>COMP.;2 91250  

      changes to:  (FNS COMPEXPANDMACRO)

      previous date: "22-NOV-82 00:38:27" <NEWLISP>COMP.;1)


(PRETTYCOMPRINT COMPCOMS)

(RPAQQ COMPCOMS [(FNS * COMPFNS)
	(PROP CROPS CAR CDR CAAR CADR CDAR CDDR CAAAR CAADR CADAR CADDR CDAAR CDADR CDDAR CDDDR 
	      CAAAAR CAAADR CAADAR CAADDR CADAAR CADADR CADDAR CADDDR CDAAAR CDAADR CDADAR CDADDR 
	      CDDAAR CDDADR CDDDAR CDDDDR)
	(PROP CTYPE CAR CDR CAAR CADR CDAR CDDR CAAAR CAADR CADAR CADDR CDAAR CDADR CDDAR CDDDR 
	      CAAAAR CAAADR CAADAR CAADDR CADAAR CADADR CADDAR CADDDR CDAAAR CDAADR CDADAR CDADDR 
	      CDDAAR CDDADR CDDDAR CDDDDR)
	(PROP CTYPE COND AND OR EQ NULL NOT ATOM LITATOM SELECTQ PROG GO RETURN PROGN PROG2 PROG1 
	      NUMBERP MINUSP FIXP LISTP ARRAYP SMALLP FLOATP STRINGP STACKP STREAMP IGREATERP ILESSP 
	      IEQP FGTP IPLUS ITIMES LOGOR LOGXOR LOGAND LSH RSH LLSH LRSH IMINUS IDIFFERENCE 
	      IQUOTIENT FIX IREMAINDER LOC OPENR CLOSER FPLUS FTIMES FDIFFERENCE FQUOTIENT FMINUS 
	      FLOAT FLOC)
	(PROP AMAC PUSHN POPN NREF POPNN PUSHNN)
	(DECLARE: DOEVAL@COMPILE DONTCOPY (PROP MACRO * COMPMACROS))
	(PROP MAKE GEN FIXT FLOATT)
	(PROP UBOX GEN FIXT FLOATT)
	(PROP CONVERT GEN FIXT FLOATT)
	(P (MOVD? (QUOTE RPTQ)
		  (QUOTE FRPTQ)))
	(BLOCKS * COMPBLOCKS)
	[VARS (NLAMA)
	      (NLAML)
	      (LAMS)
	      (ALAMS)
	      (USERMACROFN)
	      (COMPILETYPELST)
	      (SPECVARS T)
	      (LOCALVARS)
	      (COUTFILE T)
	      (COMPILERMACROPROPS (QUOTE (10MACRO MACRO]
	(VARS (SYS)
	      (SYSFNS)
	      (LAPFLG)
	      (SVFLG T)
	      (STRF T)
	      (LSTFIL)
	      (LCFIL))
	(ADDVARS (COMPILEUSERFN))
	(ALISTS (COMPILEMODELST PDP-10))
	(P (COMPILEMODE (QUOTE PDP-10])

(RPAQQ COMPFNS (BLOCKCOMPILE2 FIXNCF NOLINKP BLKFNP TESTNM COMPILE2 COMPILE2A IDP QUOP CONP VAGNP 
			      QUOPP NCONP CEXP CSTA CPRD CVPRD CCEXP COMP COMPEXPANDMACRO LQE RESP 
			      RESPN LQ LDCOMP VARCOMP GENTAG STORETAG RETAG USETAG STORIN STOREJ 
			      GOTOCOMP STORERET RETFUDGE PSTEP PSTEPN CEXP2 CEXP2P C2EXP CARG CANYF 
			      CATCOMP CPROG PROGOUT STOREUC PROGUDT PROGCKT CBIND CBIND1 CCHECKVAR 
			      CRETURN CGO CPROGN CPROG1 CSETQ CFASTCALL CCONS CLIST CCRF CCRF2 LOCALP 
			      REFRAME CVAG CFUNC CFA CPI CSF CAPPLY* CBLKAPPLY CBLKAPPLY* CLAM CFNP 
			      CARGN CSETARG CSYNTAXP CPREX CCOND CAND COR CNULL CEQ CEQN CATOM PRED2 
			      CNUMP CMINUSP CPREDT CSELECTQ CFSELECTQ CSYSTEMTYPESELECTQ CNEXP CNEXP2 
			      CNFNS NRESP CPUSHN CPOPN LQN LDFIX LDNUM IMMP IMSP CNUMOP2 CGTLS CNUMOP 
			      CLSH CCLOSER CINF CFNF NCONEXP NCONEXPEVAL CASSEM ASSEM1 CMAP CLAMFNP 
			      AORBLK*))
(DEFINEQ

(BLOCKCOMPILE2
  [LAMBDA (BLKNAME BLKDEFS ENTRIES)             (* dcl: 17 Sep 81 11:26)
    (PROG (FN DEF CODE1 CODE ARGS FREE ERRARGS OTHERVARS GENUSES
	      (ARGTY 0)
	      (TAGNUM (IMINUS TAGNUM))
	      (BLKFLG T)
	      (BNDLEV 0)
	      (SBNDLEV 0)
	      (LOCALVARS LOCALVARS)
	      (SPECVARS (APPEND LOCALFREEVARS SPECVARS))
	      FATALERROR)
          (PRIN1 "(" COUTFILE)
          (PRIN1 BLKNAME COUTFILE)
      LP1 (SETQ ERRARGS)
          (COND
	    ([NULL (SETQ CODE1 (PROG ((SPECVARS SPECVARS)
				      (LOCALVARS LOCALVARS))

          (* This rebinding of specvars is so that specvar 
	  declarations will not propagate.
	  Espec, when set to T)

                                                (* And a similar 
						argument for localvars)
				     (RETURN (COMPILE2A
					       (SETQ FN (CAAR BLKDEFS))
					       (SETQ DEF
						 (CADDAR BLKDEFS]
	      (HELP (CONS FN (QUOTE BOMBED)))

          (* Should never happen -
	  already checked to see if there was a definition.)


	      ))
          (PRIN1 " " COUTFILE)
          (PRIN1 FN COUTFILE)
          [COND
	    ((OR (FMEMB FN ENTRIES)
		 (FMEMB FN BLKAPPLYFNS))
	      (STORIN (LIST (QUOTE XWD)
			    (FLENGTH ARGS)
			    ARGTY]
          (SETQ CODE (CONS (CADAR BLKDEFS)
			   CODE))
          (STORIN (CONS (QUOTE SUBFN)
			CODE1))                 (* This is the gadget 
						that rebinds FREE 
						variables if necessary)
          [RPLACA (CDDAR BLKDEFS)
		  (LIST (CAR (CADDAR BLKDEFS))
			(CADR (CADDAR BLKDEFS]

          (* The RPLACA allows the function definitions to be 
	  reclamed. The original value OF BLKDEFS is still 
	  bound to the FREE variable CALLTAGS and is needed by
	  BLKFNP.)


          (COND
	    ((SETQ BLKDEFS (CDR BLKDEFS))
	      (GO LP1)))
          (PRIN1 ")" COUTFILE)
          (TERPRI T)
          (SETQ CODE (CONS (LIST (QUOTE MKENTRY)
				 (APPEND ENTRIES BLKAPPLYFNS))
			   (DREVERSE CODE)))
          [SETQ ARGS (PACK (LIST BLKNAME (QUOTE #0]
          (OR (EQ LOCALVARS T)
	      (SETQ LOCALVARS (CONS (CAR ARGS)
				    LOCALVARS)))
          [COND
	    ((OR ENTRIES BLKAPPLYFNS)
	      (SETQ ARGS (CONS ARGS))
	      (SETQ ARGTY 0)                    (* NORMAL BLOCK IS 
						LAMBDA)
	      )
	    (T 

          (* SPECIAL CASE -
	  NO ENTRIES MEANS SINGLE ENTRY IS FIRST FN IN BLOCK)


	       (SETQ DEF (CADDAR CALLTAGS))
	       (SETQ ARGTY (SELECTQ (CAR DEF)
				    [LAMBDA 0]
				    1))
	       (COND
		 ((AND (SETQ ARGS (CADR DEF))
		       (ATOM ARGS))
		   (SETQ ARGTY (IPLUS ARGTY 2))
		   (SETQ ARGS (LIST ARGS]
          (SETQ GENUSES)
          (LAP BLKNAME ARGS FREE (PROG1 CODE (SETQ CODE))
	       ARGTY)                           (* Use LAP to make one 
						big BLOCK FUNCTION)
          (RETURN
	    (MAPCAR
	      ENTRIES
	      (FUNCTION (LAMBDA (X)
		  (COMPILE2
		    X
		    (LIST
		      [CAR (SETQ DEF (CADDR (FASSOC X CALLTAGS]
		      (CADR DEF)
		      (SUBPAIR
			(QUOTE (V W))
			(LIST X BLKNAME)
			(QUOTE
			  (ASSEMBLE NIL (PUSHQ (QUOTE V))
				    (E (STORIN (LIST (QUOTE LCLL)
						     (QUOTE W)
						     1])

(FIXNCF
  [LAMBDA NIL                                   (* dcl: 13 Apr 78 00:29)
    (SETQ NCF (COND
	((EQ NCF (QUOTE FLOATP))
	  (QUOTE FLOATT))
	((EQ NCF (QUOTE FIXP))
	  (QUOTE FIXT))
	(T NCF])

(NOLINKP
  [LAMBDA (FN)
    (COND
      ((AND (LISTP NOLINKFNS)
	    (FMEMB FN NOLINKFNS))               (* Explicit non LINK)
	T)
      ((AND BLKFLG (FASSOC FN CALLTAGS))        (* LINK inside block)
	NIL)
      ((AND (LISTP LINKFNS)
	    (FMEMB FN LINKFNS))                 (* Explicit LINK)
	NIL)
      ((EQ NOLINKFNS T)                         (* Default nolink)
	T)
      ((OR BLKFLG (EQ LINKFNS T))               (* Standard LINK)
	NIL)
      (T T])

(BLKFNP
  [LAMBDA (FN)                                  (* dcl: 2 Jan 79 11:04)
    (AND BLKFLG (OR (FMEMB FN RETFNS)
		    (NLISTP NOLINKFNS)
		    (NOT (FMEMB FN NOLINKFNS)))
	 (OR (CADR (FASSOC FN CALLTAGS))
	     (PROG (DEF)
	       LP  (COND
		     ((NULL (FMEMB FN BLKLIBRARY))
		       (RETURN))
		     ([NULL (SETQ DEF (GETPROP FN (QUOTE BLKLIBRARYDEF]
		       [HELP (CONS FN (QUOTE (- NO LIBRARY DEFINITION]
		       (GO LP)))
	           (NCONC1 CALLTAGS (LIST FN (IMINUS (GENTAG))
					  DEF))
                                                (* This adds FN once to 
						CALLTAGS and BLKDEFS 
						since they are EQ)
	           (RETURN (IMINUS TAGNUM])

(TESTNM
  [LAMBDA (F1 L)
    (COND
      (L (PROG (A)
	   LP  (RETURN (COND
			 [(EQ F1 (SETQ A (CAR L]
			 ((AND (LISTP A)
			       (EQ F1 (CAR A)))
			   (OR (NULL (SETQ A (CDR A)))
			       (FMEMB F1 A)))
			 ((SETQ L (CDR L))
			   (GO LP])

(COMPILE2
  [LAMBDA (FN DEF)                              (* dcl: 10 May 79 22:08)
    (PROG (CODE ARGS FREE ARGTY BLKFLG GENUSES NLGOFLUSH (TAGNUM 0)
		(SBNDLEV 0)
		(BNDLEV 0)
		(OTHERVARS (AND (RELSTK (STKPOS (QUOTE COMPILE2A)))
				(APPEND OTHERVARS ARGS)))
		(LOCALVARS LOCALVARS)
		(SPECVARS SPECVARS)
		FATALERROR)
          (COND
	    ((SETQ CODE (COMPILE2A FN DEF))
	      (SETQ GENUSES)
	      (LAP FN ARGS FREE (PROG1 CODE (SETQ CODE))
		   ARGTY)
	      (RETURN FN))
	    (T (RETURN (PRINT (CONS FN (QUOTE (NOT COMPILABLE)))
			      COUTFILE])

(COMPILE2A
  [LAMBDA (FN DEF)                              (* dcl: 17 Sep 81 11:01)
    (PROG ((FRMFLG (COND
		     ((OR (NULL BLKFLG)
			  (FMEMB FN RETFNS))
		       T)))
	   RETFNFLG PLF CODE SP SSP FE TAGS IARGS UDFTGS NN OLDNN 
	   LOCALARGS (PIFSP 0))
          (SETQ RETFNFLG FRMFLG)
          (SETQ SP 0)
      RETRY
          (COND
	    ((NLISTP DEF)
	      (GO NG)))
          [SETQ ARGTY (SELECTQ (CAR DEF)
			       [LAMBDA 0]
			       [NLAMBDA 1]
			       (COND
				 ((AND COMPILEUSERFN
				       (SETQ DEF
					 (APPLY* COMPILEUSERFN NIL DEF))
				       )
				   (GO RETRY))
				 (T (GO NG]
          [COND
	    ((AND (SETQ ARGS (CADR DEF))
		  (NLISTP ARGS))
	      (SETQ ARGTY (IPLUS ARGTY 2))
	      (SETQ ARGS (LIST ARGS]
          (MAPC ARGS (FUNCTION CCHECKVAR))
          [COND
	    ((AND BLKFLG (NOT FRMFLG))
	      (SETQ FRMFLG (NOTEVERY ARGS (FUNCTION LOCALP]
          (SETQ IARGS (SETQ LOCALARGS ARGS))
          (STORETAG (SETQ FE (IMINUS (GENTAG)))
		    T)
          (SETQ TAGS (QUOTE EMPTY))
          (COND
	    [(NULL FRMFLG)
	      (SETQ PIFSP (SETQ SP (FLENGTH ARGS]
	    (T (SETQ BNDLEV 1)))
          (COMP (CONS (QUOTE PROGN)
		      (CDDR DEF))
		T NIL T)
          [COND
	    (BLKFLG                             (* Blkflg = T in BLOCK 
						compiling. Puts unbinder
						at end of CODE)
		    (COND
		      ((AND (NULL FRMFLG)
			    ARGS)
			(COND
			  [(EQ ARGTY 2)         (* LAMBDA ATOM)
			    (STORIN (LIST (QUOTE LDV2)
					  (CAR ARGS)
					  SP 2))
			    (STORIN (QUOTE (SUBI 2 , ASZ -1)))
			    (STORIN (QUOTE (SUB PP , BHC (2]
			  (T                    (* SECOND ARG OF STOREUC
						SAYS STORE AN UNBIND 
						TOO)
			     (STOREUC (FLENGTH ARGS]
          (STORERET)
          (SETQ CODE (DREVERSE CODE))
          [COND
	    (BLKFLG
	      (COND
		[(NULL FRMFLG)                  (* TELL LAP THAT ARGS 
						ARE ON PP NOT IN BASIC 
						FRAME)
		  (STORIN (LIST (QUOTE BLKBIND)
				ARGS
				(FLENGTH ARGS)
				0 0 0 ARGTY LOCALVARS SPECVARS
				(FLENGTH ARGS]
		(T (STORIN (LIST (QUOTE RETENT)
				 FN
				 [COND
				   (RETFNFLG FN)
				   (T (PACK (LIST (QUOTE *)
						  FN
						  (QUOTE *]
				 ARGS ARGTY LOCALVARS SPECVARS]
          (RETURN CODE)
      NG  (RETURN NIL])

(IDP
  [LAMBDA (I)                                   (* lmm "26-MAY-82 10:21"
)
    (AND I (LITATOM I)
	 (NEQ I T)
	 (NOT (GETHASH I COMPVARMACROHASH])

(QUOP
  [LAMBDA (Q)                                   (* dcl: 22 Jul 81 11:16)
                                                (* QUOTE PREDICATE)
    (AND (LISTP Q)
	 (OR (EQ (CAR Q)
		 (QUOTE QUOTE))
	     (AND (EQ (CAR Q)
		      (QUOTE CONSTANT))
		  (CONSTANTOK (APPLY (QUOTE PROG1)
				     (CDR Q])

(CONP
  [LAMBDA (A)                                   (* lmm "27-MAY-82 10:43"
)                                               (* CONSTANT PREDICATE)
    (OR (NULL A)
	(EQ A T)
	(NUMBERP A)
	(QUOP A)
	(COND
	  [(LISTP A)
	    (AND (EQ (CAR A)
		     (QUOTE VAG))
		 (NCONP (CADR A]
	  [(LITATOM A)
	    (AND COMPVARMACROHASH (QUOP (GETHASH A COMPVARMACROHASH]
	  (T (NULL (CDR (FASSOC (TYPENAME A)
				COMPILETYPELST])

(VAGNP
  [LAMBDA (A)                                   (* dcl: 20 Jul 81 11:22)
    (AND (LISTP A)
	 (EQ (CAR A)
	     (QUOTE VAG))
	 (NCONP (CADR A])

(QUOPP
  [LAMBDA (A)                                   (* lmm "26-MAY-82 10:55"
)
    (PROG (X)
          (COND
	    ((AND (LISTP A)
		  (EQ (CAR A)
		      (QUOTE QUOTE)))
	      (RETURN (CADR A)))
	    [(AND [OR (SETQ X (LISTP A))
		      (AND (LITATOM A)
			   COMPVARMACROHASH
			   (SETQ X (GETHASH A COMPVARMACROHASH]
		  (EQ (CAR X)
		      (QUOTE CONSTANT)))
	      (SETQ X (APPLY (QUOTE PROG1)
			     (CDR X]
	    (T (RETURN A)))
          [OR (CONSTANTOK X)
	      (COMPEM (CONS A (QUOTE (- BAD CONSTANT RETURNED FROM 
					QUOPP]
          (RETURN X])

(NCONP
  [LAMBDA (A)                                   (* dcl: 20 Jul 81 11:14)
    (AND (CONP A)
	 (NUMBERP (QUOPP A])

(CEXP
  [LAMBDA (E)                                   (* COMPILE EXPR FOR 
						VALUE)
    (COMP E T NIL NIL])

(CSTA
  [LAMBDA (E)                                   (* COMPILE EXPR AS 
						STATEMENT, NO VALUE 
						NEEDED)
    (COMP E NIL NIL NIL])

(CPRD
  [LAMBDA (E BRT BRF)

          (* COMPILE EXPR AS PREDICATE, NO VALUE, BRANCH BRT 
	  IF TRUE, BRF IF NIL)


    (COMP E NIL T NIL])

(CVPRD
  [LAMBDA (E BRT BRF)                           (* COMPILE EXPR AS 
						PREDICATE WITH VALUE)
    (COMP E T T NIL])

(CCEXP
  [LAMBDA (E)                                   (* COMPILE EXPR IN 
						CURRENT CONTEXT)
    (COMP E VCF PCF PIF NCF])

(COMP
  [LAMBDA (E VCF PCF PIF NCF)                   (* dcl: 19 Oct 82 14:55)

          (* COMPILE EXPR, VCF VALUE FLAG, PCF PREDICATE FLAG,
	  PIF RECURSION TO PROG FLAG, NCF NUMBER CONTEXT FLAG)


    (PROG (F)
      TOP [AND (NEQ (SETQ E (COMPEXPANDMACRO E))
		    (QUOTE INSTRUCTIONS))
	       (COND
		 ((NCONP E)
		   (SETQ E (QUOPP E))
		   (COND
		     (NCF (LQN E NCF))
		     (T (LQE E)))
		   (RETURN))
		 [(NLISTP E)
		   (COND
		     [(IDP E)
		       (COND
			 [(EQ NCF (QUOTE FIXT))
			   (RETURN (STORIN (LIST (QUOTE PIUNBX)
						 (LIST (VARCOMP E)
						       E SP]
			 (T (LDCOMP E]
		     [[AND (SETQ F (CDR (FASSOC (TYPENAME E)
						COMPILETYPELST)))
			   (NEQ E (SETQ E (APPLY* F E]
		       (COND
			 ((NEQ E (QUOTE INSTRUCTIONS))
			   (GO TOP]
		     (T (LQE E)
			(RETURN]
		 [(LITATOM (SETQ F (CAR E)))
		   (COND
		     ((QUOP E)
		       (LQE E)
		       (RETURN))
		     ((SELECTQ (GETPROP F (QUOTE CTYPE))
			       [PRED (RETURN (CPREX F (CDR E]
			       [INF (RETURN (CINF F (CDR E]
			       [CR (CCRF (CADR E)
					 (GETPROP F (QUOTE CROPS]
			       [FNF (RETURN (CFNF F (CDR E]
			       (RETURN (CATCOMP F (CDR E)
						E]
		 [(AND (LISTP (CAR E))
		       (SELECTQ (CAAR E)
				([LAMBDA NLAMBDA]
				  T)
				NIL))
		   (RETURN (CANYF (CADAR E)
				  (CAR E)
				  (CDR E]
		 (T (CSF E]
          (RESP)
          (RETURN])

(COMPEXPANDMACRO
  [LAMBDA (EXP)                    (* lmm "15-DEC-82 00:00")
    (PROG (MACRODEF)
      LP  (COND
	    ((NLISTP EXP)
	      (GO OUT)))
          (SETQ MACRODEF (GETMACROPROP (CAR EXP)
				       COMPILERMACROPROPS))
          (COND
	    ((NEQ EXP (SETQ EXP (MACROEXPANSION EXP MACRODEF T)))
	      (GO LP)))
      OUT (RETURN EXP])

(LQE
  [LAMBDA (E)                                   (* dcl: 29 Dec 81 11:19)
                                                (* RESPOND TO PREDICATE 
						CONTEXT FOR KNOWN 
						NON-NIL OR NIL CASES)
    [COND
      (VCF (SETQ E (LQ E)))
      ((CONP E)
	(SETQ E (QUOPP E]
    (COND
      [PCF (COND
	     ((OR (AND E BRT)
		  (AND (NULL E)
		       BRF))
	       (GOTOCOMP (OR BRF BRT]
      (NCF                                      (* MAYBE THIS SHOULDNT 
						HAPPEN??)
	   (RESPN])

(RESP
  [LAMBDA NIL                                   (* dcl: 12 Apr 78 21:58)
    (COND
      (PCF [STORIN (COND
		     (BRT (LIST (QUOTE BNN)
				BRT))
		     (T (LIST (QUOTE BN)
			      BRF]
	   (USETAG (OR BRT BRF)))
      (NCF (RESPN])

(RESPN
  [LAMBDA NIL                                   (* dcl: 2 Jan 79 11:05)
    (STORIN (COND
	      ((EQ NCF (QUOTE FIXT))
		(QUOTE (FCLL IUNBOX)))
	      ((EQ NCF (QUOTE FIXP))
		(QUOTE (FIXP)))
	      ((EQ NCF (QUOTE FLOATP))
		(QUOTE (FLOATP)))
	      (T (LIST (QUOTE FASTCALL)
		       (GETPROP NCF (QUOTE UBOX))
		       SP])

(LQ
  [LAMBDA (X AC)                                (* lmm "22-JAN-82 11:52"
)
    [STORIN (COND
	      ((VAGNP X)
		(LIST (QUOTE LDN2)
		      (VAGNP X)
		      (OR AC 1)))
	      (T (SETQ X (QUOPP X))
		 (COND
		   ((AND AC (NEQ AC 1))
		     (LIST (COND
			     ((SMALLP X)
			       (QUOTE LQ2I))
			     (T (QUOTE LQ2)))
			   X AC))
		   (T (LIST (COND
			      ((SMALLP X)
				(QUOTE LQI))
			      (T (QUOTE LQ)))
			    X]
    X])

(LDCOMP
  [LAMBDA (V A)                                 (* dcl: 11 DEC 75 11:43)
                                                (* LOAD FREE OR LOCAL V 
						TO AC A OR 1)
    (OR A (SETQ A 1))
    (COND
      ((AND (EQ A 1)
	    (LISTP (CAR CODE))
	    (SELECTQ (CAAR CODE)
		     ((STV STF)
		       T)
		     NIL)
	    (EQ (CADAR CODE)
		V))
	NIL)
      (T (VARCOMP V)
	 (STORIN (SELECTQ A
			  (1 (LIST (QUOTE LDV)
				   V SP))
			  (LIST (QUOTE LDV2)
				V SP A])

(VARCOMP
  [LAMBDA (V)                                   (* dcl: 17 DEC 75 14:42)
    [OR (FMEMB V ARGS)
	(FMEMB V FREE)
	(SETQ FREE (NCONC FREE (CONS V]
    (QUOTE VREF])

(GENTAG
  [LAMBDA NIL
    (SETQ GENUSES (CONS (CONS (SETQ TAGNUM (ADD1 TAGNUM)))
			GENUSES))
    TAGNUM])

(STORETAG
  [LAMBDA (TG FLG)                              (* FLG FORCES STORE OF 
						TAG EVEN IF UNUSED)
    (PROG (X)
          [COND
	    ((AND (FIXP TG)
		  (NULL FLG)
		  (NULL (MINUSP TG))
		  (ATOM (CAR CODE)))            (* A FLUSHABLE TAG 
						PRECEEDED BY ANY OLD 
						TAG)
	      (RETAG TG (CAR CODE))
	      (SETQ TG (CAR CODE))
	      (SETQ CODE (CDR CODE)))
	    ([AND (ATOM (CAR CODE))
		  (FIXP (CAR CODE))
		  (NULL (MINUSP (CAR CODE]
	      (RETAG (CAR CODE)
		     TG)
	      (SETQ CODE (CDR CODE]
          [COND
	    ((AND (LISTP (CAR CODE))
		  (EQ (CAAR CODE)
		      (QUOTE J))
		  (EQ (CADAR CODE)
		      TG))
	      [COND
		((AND (FIXP TG)
		      (SETQ X (FASSOC TG GENUSES)))
                                                (* FLUSH PRECEEDING JRST
						TO TG AND REMOVE FROM 
						USES)
		  (PROG NIL
		    A   (COND
			  ((NLISTP (CDR X))
			    (RETURN)))
		        (COND
			  ((EQ (CADR X)
			       CODE)
			    (FRPLACD X (CDDR X))
			    (RETURN)))
		        (SETQ X (CDR X))
		        (GO A]
	      (SETQ CODE (CDR CODE]
          (COND
	    ((OR FLG (NULL (FIXP TG))
		 (CDR (FASSOC TG GENUSES)))     (* STORE THE TAG UNLESS 
						ITS AN UNUSED TAG)
	      (SETQ CODE (CONS TG CODE])

(RETAG
  [LAMBDA (TG TG1)                              (* REPLACE ALL USES OF 
						TG BY TG1)
    (SETQ TG (FASSOC TG GENUSES))
    [MAPC (CDR TG)
	  (FUNCTION (LAMBDA (E)
	      (FRPLACA (CDAR E)
		       TG1)
	      (PROG ((CODE E))
		    (USETAG TG1]
    (FRPLACD TG])

(USETAG
  [LAMBDA (TG)
    (PROG (X)

          (* IF TG IS ON GENUSES ADD VALUE OF CODE TO FRONT OF
	  CDR OF PAIR)


          (COND
	    ((AND (FIXP TG)
		  (SETQ X (FASSOC TG GENUSES)))
	      (FRPLACD X (CONS CODE (CDR X])

(STORIN
  [LAMBDA (IN)
    (SETQ CODE (CONS IN CODE])

(STOREJ
  [LAMBDA (B)                                   (* USE TO STORE JUMP 
						AFTER SKIPS, SO GOTOCOMP
						WON'T FLUSH)
    (SETQ CODE (CONS (LIST (QUOTE JR)
			   B)
		     CODE))
    (USETAG B])

(GOTOCOMP
  [LAMBDA (TG)
    (PROG (X OC OOC FLG)
          (SETQ OC CODE)
      A   (COND
	    ((FIXP (CAR OC))                    (* IS PRECEEDED BY 
						GENTAG)
	      (RETAG (CAR OC)
		     TG)                        (* PRECEEDING TAG NO 
						LONGER USED)
	      (COND
		[(NULL (MINUSP (CAR OC)))       (* IF TAG NOT MINUS, 
						FLUSH IT)
		  (COND
		    [(EQ OC CODE)
		      (SETQ OC (SETQ CODE (CDR CODE]
		    (T (FRPLACD OOC (SETQ OC (CDR OC]
		(T                              (* ELSE KEEP IT)
		   (SETQ OOC OC)
		   (SETQ OC (CDR OC))
		   (SETQ FLG T)))               (* FLUSH THE TAG AND SEE
						IF ANOTHER)
	      (GO A)))
          (COND
	    ((AND (NULL FLG)
		  (LISTP (CAR OC))
		  (SELECTQ (CAAR OC)
			   ((J RET)
			     T)
			   NIL))

          (* IF PRECEEDED BY J OR RET, THE NEW J IS USELESS -
	  DONT STORE)


	      (RETURN)))
          (SETQ CODE (CONS (LIST (QUOTE J)
				 TG)
			   CODE))
          (COND
	    ((AND (FIXP TG)
		  (SETQ X (FASSOC TG GENUSES))
		  (FRPLACD X (CONS CODE (CDR X])

(STORERET
  [LAMBDA NIL                                   (* dcl: 22 DEC 75 05:46)
    (PROG (X OX OC OOC FLG)
          (SETQ OC CODE)
      A   (COND
	    ([OR (FIXP (CAR OC))
		 (AND (LISTP (CAR OC))
		      (EQ (CAAR OC)
			  (QUOTE PROG))
		      (FIXP (CAR (SETQ OC (CDR (SETQ OOC (CAR OC]
                                                (* AS IN GOTOCOMP MAKE 
						J'S TO PRIOR TAG BE RET 
						INSTEAD)
	      (SETQ X (FASSOC (CAR OC)
			      GENUSES))
	      (SETQ OX X)
	      [MAP (CDR X)
		   (FUNCTION (LAMBDA (E)
		       (COND
			 ((EQ (CAAAR E)
			      (QUOTE J))
			   (RETFUDGE (CAR E))
			   (FRPLACD OX (CDR E)))
			 (T (SETQ OX E]
	      (COND
		[(NULL (OR (MINUSP (CAR OC))
			   (CDR X)))            (* IF TAG NOT MINUS AND 
						NOT USED, FLUSH IT)
		  (COND
		    [(EQ OC CODE)
		      (SETQ OC (SETQ CODE (CDR CODE]
		    (T (FRPLACD OOC (SETQ OC (CDR OC]
		(T (SETQ OOC OC)                (* KEEP TAG)
		   (SETQ OC (CDR OC))
		   (SETQ FLG T)))
	      (GO A)))
          (AND
	    (NULL FLG)
	    (LISTP (CAR OC))
	    (SELECTQ
	      (CAAR OC)
	      ((J RET)
		(RETURN))
	      [UNCOV
		(AND [NUMBERP (CAR (SETQ OX (CDAR OC]
		     (NULL (CDR OX))
		     (ILESSP (CAR OX)
			     8)
		     [COND
		       ((EQ OC CODE)
			 (SETQ CODE (CDR CODE)))
		       (T (FRPLACD OOC (CDR OC]
		     (RETURN (GOTOCOMP
			       (CAR (FNTH (QUOTE (URET1 URET2 URET3 
							URET4 URET5 
							URET6 URET7))
					  (CAR OX]
	      ((UNBIND PROG)                    (* FLUSH UNBIND)
		(STORIN (CONS (QUOTE J)))       (* JUST A RANDOM 
						SMASHABLE INSTRUCTION)
		(RETFUDGE CODE)
		(RETURN))
	      NIL))
          (SETQ CODE (CONS (QUOTE (RET))
			   CODE])

(RETFUDGE
  [LAMBDA (TCODE)                               (* dcl: 10 Apr 78 16:06)

          (* E.G. CHANGE ((J A) (PROG 
	  (UNBIND ..) ...)) TO ((PROG 
	  (J (DEFUNRET ...)) ...)))


    (PROG ((OC TCODE)
	   (C (CDR TCODE))
	   A)
      L1  (SELECTQ (CAR (LISTP (CAR C)))
		   (UNCOV (COND
			    ((CDDAR C)
			      (GO OUT)))
			  (SETQ A (CADAR C))
			  (GO REM))
		   (UNBIND (SETQ A (CADAR C))
			   (GO REM))
		   (PROG [SETQ C (CDR (SETQ OC (CAR C]
			 (GO L1))
		   (GO OUT))
      REM                                       (* FLUSH THE UNCOV OR 
						UNBIND)
          (FRPLACD OC (PROG ((CODE (CDR C)))
			    (GOTOCOMP (SETQ C (GENTAG)))
			    (RETURN CODE)))

          (* PUT (J GENTAG) WHERE THE UNBIND USED TO BE -
	  MAY PERCOLATE HIGHER UP)


          (FRPLACD (FRPLACA TCODE (CADR TCODE))
		   (CDDR TCODE))                (* BACK UP ONE NODE TO 
						FLUSH THE ORIGINAL J)
          (COND
	    ([NULL (SETQ OC (CDR (FASSOC C GENUSES]

          (* The UNCOV/UNBIND has been flushed and so has the 
	  J. But it turns out that they were all preceded by a
	  J, so never could have been reached anyway.
	  There is now nothing more to do, the unaccesable 
	  code has all been flushed.)


	      (RETURN)))
      L2  (COND
	    [(NLISTP OC)
	      (STORIN (LIST (QUOTE J)
			    (LIST (QUOTE DEFUNRET)
				  C A]
	    ((OR (EQ (CAAAR OC)
		     (QUOTE J))
		 (ILESSP A 8))
	      (FRPLACA (CDAAR OC)
		       (LIST (QUOTE DEFUNRET)
			     C A)))
	    (T (SETQ OC (CDR OC))
	       (GO L2)))
          (RETURN)
      OUT (FRPLACD (FRPLACA (CAR TCODE)
			    (QUOTE RET])

(PSTEP
  [LAMBDA NIL
    (SETQ SP (ADD1 SP])

(PSTEPN
  [LAMBDA (N)
    (SETQ SP (IPLUS SP N])

(CEXP2
  [LAMBDA (E FLG)                               (* dcl: 2 Jan 79 11:06)
                                                (* COMPILE EXPRESSION TO
						AC2, PRESERVING AC1)

          (* If FLG=T, ac1 and ac2 may be switched.
	  If they are, CEXP2 returns T, in all other cases NIL
	  is returned.)


    (COND
      ((CEXP2P E)
	[COND
	  ((CONP E)
	    (LQ E 2))
	  ((LITATOM E)
	    (LDCOMP E 2))
	  (T (CCRF2 (CADR E)
		    (GETPROP (CAR E)
			     (QUOTE CROPS]
	NIL)
      (T (PSTEP)
	 (STORIN (QUOTE (PUSHP)))
	 (CEXP E)
	 (SETQ SP (SUB1 SP))
	 (COND
	   (FLG (STORIN (QUOTE (POPP2)))
		T)
	   (T (STORIN (QUOTE (MOV21)))
	      (STORIN (QUOTE (POPP)))
	      NIL])

(CEXP2P
  [LAMBDA (E)                                   (* dcl: 2 Jan 79 11:06)
                                                (* Determines if E can 
						be computed entirely in 
						AC2)
    (OR (CONP E)
	(LITATOM E)
	(AND (GETPROP (CAR E)
		      (QUOTE CROPS))
	     (NULL (CDDR E))
	     (CEXP2P (CADR E])

(C2EXP
  [LAMBDA (E1 E2 FLG)

          (* COMPILE 2 EXPRS TO AC'S 1 AND 2.0 FLG T IF CAN BE
	  SWITCHED. VALUE T IF ARE SWITCHED, ELSE NIL)


    (COND
      ((CEXP2P E2)
	(CEXP E1)
	(CEXP2 E2)
	NIL)
      ((CONP E1)
	(CEXP E2)
	(COND
	  (FLG (CEXP2 E1)
	       T)
	  (T (STORIN (QUOTE (MOV21)))
	     (CEXP E1)
	     NIL)))
      (T (CARG (CONS E1))                       (* GET E1 TO STACK)
	 (CEXP E2)
	 (PSTEPN -1)
	 (COND
	   (FLG (STORIN (QUOTE (POPP2)))
		T)
	   (T (STORIN (QUOTE (MOV21)))
	      (STORIN (QUOTE (POPP)))
	      NIL])

(CARG
  [LAMBDA (L EVF)                               (* lmm "22-JAN-82 11:53"
)                                               (* COMPILE ARG LIST, EVF
						T FOR NLAMBDA, RETURNS 
						LENGTH OF ARG LIST)
    (PROG (LNTH)
          (SETQ LNTH 0)
          [MAPC L (FUNCTION (LAMBDA (X)
		    [STORIN (COND
			      (EVF (LIST (QUOTE PUSHQ)
					 X))
			      [(CONP X)
				(COND
				  ((VAGNP X)
				    (LIST (QUOTE PUSHNV)
					  (VAGNP X)))
				  (T (LIST (QUOTE PUSHQ)
					   (QUOPP X]
			      ((IDP X)
				(VARCOMP X)
				(LIST (QUOTE PUSHV)
				      X SP))
			      (T (CEXP X)
				 (QUOTE (PUSHP]
		    (PSTEP)
		    (SETQ LNTH (ADD1 LNTH]
          (RETURN LNTH])

(CANYF
  [LAMBDA (V X L)                               (* dcl: 10 Aug 81 14:20)

          (* COMPILE open lambda or nlambda, V is variable 
	  list, X is the form, L is list of values)


    [COND
      ((AND (EQ BNDLEV 0)
	    SSP)
	(SETQ NLGOFLUSH (SUB1 (IDIFFERENCE SSP SP]
    (PROG [(SP SP)
	   (SP0 SP)
	   (NFSSP SP)
	   (ARGS ARGS)
	   (BNDLEV BNDLEV)
	   (LOCALVARS LOCALVARS)
	   (SPECVARS SPECVARS)
	   (PLF (QUOTE LAMBDA))
	   LOCALARGS FRMFLG LL V1 ARGTY (TAGS (COND
						((EQ TAGS (QUOTE EMPTY))
						  TAGS]
          [SETQ LL (COND
	      ((EQ (CAR X)
		   (QUOTE NLAMBDA))
		(CARG (COND
			((AND V (NLISTP V))
			  (SETQ V (LIST V))
			  (SETQ L (LIST L)))
			(T L))
		      T))
	      ((AND V (NLISTP V))
		(SETQ LL (CARG L))
		(STORIN (LIST (QUOTE LQI)
			      LL))
		(PSTEP)
		(STORIN (QUOTE (PUSHP)))
		(SETQ V (LIST V))
		(SETQ ARGTY 2)
		1)
	      (T (CARG L]                       (* LL IS # ARGS STACKED 
						THAT NEED NAMES)
          (MAPC V (FUNCTION CCHECKVAR))
          (SETQ ARGS (APPEND (SETQ LOCALARGS V)
			     ARGS))
          (COND
	    ((IGREATERP (SETQ V1 (IDIFFERENCE LL (FLENGTH V)))
			0)                      (* TOO MANY ARGS GIVEN?)
	      (STORIN (LIST (QUOTE UNCOV)
			    V1))
	      (PSTEPN (IMINUS V1))
	      (SETQ LL (IDIFFERENCE LL V1))
	      (SETQ V1 0))
	    ((ZEROP V1))
	    (T [MAP (NTH (SETQ V (COPY V))
			 (ADD1 LL))
		    (FUNCTION (LAMBDA (E)
			(FRPLACA E (CONS NIL (CAR E)))
                                                (* UNSUPPLIED ARGS BOUND
						TO NIL)
			]
	       (SETQ V1 (IMINUS V1))
	       (PSTEPN V1)))
          [COND
	    (V (SETQ V (CBIND1 V LL V1 (IDIFFERENCE SP SP0)
			       ARGTY]
          [STORIN
	    (PROG ((R (GENTAG))
		   CODE)
	          (SETQ X (CDDR X))
	      A   (COND
		    ((CDR X)
		      (CSTA (CAR X))
		      (SETQ X (CDR X))
		      (GO A)))
	          [COND
		    (X (COND
			 (V                     (* CANT RESPOND TO 
						CONTEXT)
			    (COMP (CAR X)
				  (OR PCF VCF)
				  NIL
				  (AND (NOT FRMFLG)
				       PIF)))
			 (T (CCEXP (CAR X]
	          (PROGOUT R V)
	          (RETURN
		    (CONS
		      (QUOTE LAM)
		      (COND
			((OR (EQ TAGS (QUOTE EMPTY))
			     (NULL TAGS))
			  CODE)
			(T
			  (NCONC
			    CODE
			    (CONS
			      (LIST
				(QUOTE SETU)
				(PROG1 [SETQ R
					 (MAPCAR
					   TAGS
					   (FUNCTION (LAMBDA (E)
					       (LIST E NIL
						     (CONS BNDLEV SSP)
						     (CAR SNN)
						     NLGOFLUSH]
				       (SETQ UDFTGS (CONS R UDFTGS]
          (COND
	    (V (RESP])

(CATCOMP
  [LAMBDA (N CD E)                              (* dcl: 17 Jul 81 11:07)

          (* COMPILE SIMPLE FORM IF CAR HAS NO CTYPE, N IS CAR
	  OF FORM, CD IS CDR)


    (PROG (CAD AT)
          (SETQ CAD (CAR CD))
          [SELECTQ
	    N
	    (SETQ (CSETQ CAD (CDR CD)))
	    (CONS (CCONS CAD (CADR CD)))
	    (LIST (CLIST CD))
	    (VAG (CVAG CAD))
	    (FUNCTION (CLAM CD))
	    (ASSEMBLE (CASSEM CD))
	    (ARG (CARGN CAD (CADR CD)))
	    (SETARG (CSETARG CD))
	    (APPLY* (CAPPLY* CD))
	    (BLKAPPLY (CBLKAPPLY CD))
	    (BLKAPPLY* (CBLKAPPLY* CD))
	    [SETN (CCHECKVAR CAD)
		  (CNEXP (CADR CD)
			 (QUOTE GEN))
		  (STORIN (LIST (QUOTE PSETN)
				(LIST (VARCOMP CAD)
				      CAD SP]
	    [FRPLACD (STORIN (COND
			       ((C2EXP CAD (CADR CD)
				       (NULL (OR VCF PCF)))
				 (QUOTE (RPD 2 1)))
			       (T (QUOTE (RPD 1 2]
	    [FRPLACA (STORIN (COND
			       ((C2EXP CAD (CADR CD)
				       (NULL (OR VCF PCF)))
				 (QUOTE (RPA 2 1)))
			       (T (QUOTE (RPA 1 2]
	    (GETHASH (CFASTCALL CAD (CADR CD)
				(QUOTE GETHSH)))
	    (COND
	      [(FMEMB N LAMS)
		(COND
		  ((EQ N FN)
		    (CFUNC N CD))
		  (T (CFA N CD]
	      ((FMEMB N NLAML)
		(CFA N CD T))
	      ((FMEMB N NLAMA)
		(CFA N (LIST CD)
		     T))
	      ([SETQ AT
		  (ARGTYPE (OR (AND BLKFLG (FMEMB N BLKLIBRARY)
				    (GETPROP N (QUOTE BLKLIBRARYDEF)))
			       (GETD (OR (GETPROP N (QUOTE BROKEN))
					 N))
			       (GETPROP N (QUOTE EXPR]
                                                (* IS DEFINED FUNCTION)
		(SELECTQ (LOGAND AT 3)
			 (1 (CFA N CD T))
			 (3 (CFA N (LIST CD)
				 T))
			 (CFUNC N CD)))
	      [COMPILEUSERFN (COND
			       ((EQ (SETQ AT (APPLY* COMPILEUSERFN CD E)
				      )
				    (QUOTE INSTRUCTIONS)))
			       ((NULL AT)
				 (GO ANY))
			       (T (CCEXP AT)
				  (RETURN]
	      (T                                (* This handles unknown 
						fcns)
		 (GO ANY]
      OUT (RESP)
          (RETURN)
      ANY [COND
	    ((NULL (FMEMB N ALAMS))
	      (SETQ ALAMS (CONS N ALAMS]
          (CFA N CD NIL T)
          (GO OUT])

(CPROG
  [LAMBDA (PRV PG)                              (* dcl: 30 Nov 81 15:18)
                                                (* COMPILE PROG, PRV is 
						variable list, PG is 
						PROG statements)
    (COND
      ((EQ TAGS (QUOTE EMPTY))
	(SETQ UDFTGS NIL)))

          (* If we are in a fn that doesn't make a frame, and 
	  in a PROG that doesn't make a frame, remember the 
	  magic number)


    [COND
      ((AND (EQ BNDLEV 0)
	    SSP)
	(SETQ NLGOFLUSH (SUB1 (IDIFFERENCE SSP SP]
    [PROG ((SP SP)
	   (SSP SP)
	   (SP0 SP)
	   (NFSSP SP)
	   (SBNDLEV SBNDLEV)
	   (BNDLEV BNDLEV)
	   (LOCALVARS LOCALVARS)
	   (SPECVARS SPECVARS)
	   (ARGS ARGS)
	   (SNN NN)
	   (PLF (QUOTE PROG))
	   LOCALARGS FRMFLG PROGRETLABEL)
          [COND
	    (PRV (SETQ PRV (CBIND PRV]
          (SETQ SSP SP)                         (* REMEMBER SP OF TOP 
						LEVEL OF PROG)
          (SETQ SBNDLEV BNDLEV)
          [STORIN
	    (PROG ((R (GENTAG))
		   (PR (GENTAG))
		   (PRPCF PCF)
		   (PRVCF VCF)
		   (PRPIF PIF)
		   (PRNCF NCF)
		   (OBRT (AND PCF BRT))
		   (OBRF (AND PCF BRF))
		   CODE TAGS DFTG W U RE UDFTGS)
                                                (* Tags is list of 
						referenced tags, dftg is
						list of defined tags)
	      A   (COND
		    (PG (COND
			  [(ATOM (SETQ W (CAR PG)))
			    (STORETAG W)
			    (OR (FMEMB W TAGS)
				(SETQ TAGS (CONS W TAGS)))
			    (COND
			      [(FMEMB W DFTG)
				(COMPEM (CONS W
					      (QUOTE (- MULTIPLE 
							DEFINED TAG]
			      (T (SETQ DFTG (CONS W DFTG]
			  (T (CSTA W)))
			(SETQ PG (CDR PG))
			(GO A)))
	          (OR
		    (AND
		      (LISTP (CAR CODE))
		      (SELECTQ
			(CAAR CODE)
			((J RET)
			  T)
			(PROG (SELECTQ (CAR (LISTP (CADAR CODE)))
				       ((J RET)
					 T)
				       NIL))
			NIL))
		    (CRETURN NIL))
	          (STORETAG PR)
	          [COND
		    (PROGRETLABEL (STORETAG PROGRETLABEL)
				  (SETQ DFTG (CONS PROGRETLABEL DFTG]
	          (PROGOUT R PRV)
	          (RETURN
		    (PROG1 [CONS (QUOTE PROG)
				 (NCONC CODE
					(CONS (LIST (QUOTE SETU)
						    (PROGUDT]
			   (SETQ PG UDFTGS)     (* TO EXPORT NEW UDFTGS)
			   ]
          (SETQ UDFTGS (NCONC PG UDFTGS))
          (COND
	    (PRV (RESP]
    (COND
      ((EQ TAGS (QUOTE EMPTY))
	(PROGCKT])

(PROGOUT
  [LAMBDA (R V)                                 (* dcl: 22 DEC 75 05:54)
    [COND
      (V (NCONC V (LIST LOCALVARS SPECVARS NFSSP]
    [COND
      (FRMFLG (NCONC CODE
		     (PROG (CODE)
		           (STORIN (PROG1 V
					  (RPLACA (CDR (CDDDDR V))
						  BNDLEV)))

          (* REPLACE BNDLEV IN CASE FRMFLG WENT FROM NIL TO T 
	  DUE TO A SPECVAR DECLARATION)


		           (GOTOCOMP R)
		           (RETURN CODE]
    [COND
      (FRMFLG (STORERET)
	      (STORETAG R))
      (T (STOREUC (IDIFFERENCE SP SP0]
    (COND
      ((AND V (NULL FRMFLG))
	(NCONC CODE (CONS (CONS (QUOTE BLKBIND)
				(CDR V])

(STOREUC
  [LAMBDA (A)                                   (* dcl: 22 DEC 75 05:52)
    (PROG ((C CODE))
          (COND
	    ((ZEROP A)
	      (RETURN)))
      L1  (SELECTQ [CAR (LISTP (SETQ C (CAR C]
		   (UNCOV (FRPLACA (CDR C)
				   (IPLUS (CADR C)
					  A))
			  (FRPLACA C (QUOTE UNBIND))
			  (RETURN))
		   (UNBIND (FRPLACA (CDR C)
				    (IPLUS (CADR C)
					   A))
			   (RETURN))
		   (PROG (SETQ C (CDR C))
			 (GO L1))
		   (GO OUT))
      OUT (STORIN (LIST (QUOTE UNBIND)
			A])

(PROGUDT
  [LAMBDA NIL                                   (* dcl: 10 May 79 22:15)
    (PROG (U)
          [MAPC TAGS (FUNCTION (LAMBDA (E)
		    (OR (FMEMB E DFTG)
			(SETQ U (CONS (LIST E NIL (CONS SBNDLEV SSP)
					    (CAR SNN)
					    NLGOFLUSH)
				      U]
          (SETQ UDFTGS (CONS U UDFTGS))

          (* U = ((TAG NIL (SBNDLEV . SP) NP) ...) FOR 
	  UNDEFINED TAGS IN A PROG)


          [MAPC
	    DFTG
	    (FUNCTION (LAMBDA (TG)
		(PROG (L W)
		      (SETQ L UDFTGS)           (* SEE IF ANY TAGS 
						DEFINED HERE WERE NEEDED
						IN A LOWER PROG)
		  A   (COND
			((SETQ L (CDR L))
			  [COND
			    ([SETQ W (CDR (FASSOC TG (CAR L]
			      (COND
				((NULL (CAR W))
                                                (* STILL NEEDED)
				  (FRPLACA W (IDIFFERENCE (CAADR W)
							  SBNDLEV))
				  (FRPLACA
				    (CDR W)
				    (COND
				      ((ZEROP (CAR W))
					[FRPLACA
					  (CDDR W)
					  (AND (NEQ (CAR SNN)
						    (CADDR W))
					       (IDIFFERENCE
						 (CADDR W)
						 (OR (CAR SNN)
						     -1]
					(IDIFFERENCE (CDADR W)
						     SSP))
				      ((NEQ SBNDLEV 0)
					SSP)
				      (T (CADDDR W]
			  (GO A))
			(T (RETURN]
          (RETURN U])

(PROGCKT
  [LAMBDA NIL                                   (* dcl: 13 Apr 78 16:02)
    (MAPC UDFTGS
	  (FUNCTION (LAMBDA (E)
	      (MAPC E
		    (FUNCTION (LAMBDA (X)
			(COND
			  ((NULL (CADR X))
			    [COMPEM (CONS (CAR X)
					  (QUOTE (- UNDEFINED TAG]
			    (RPLACD X (LIST 0 0 0])

(CBIND
  [LAMBDA (V)                                   (* dcl: 23 Jul 81 13:48)
                                                (* DONT CALL WITH V=NIL)
    (PROG ((NEXP 0)
	   (NCON 0)
	   (NAMS (CONS))
	   (VCON (CONS))
	   (LEXP (CONS))
	   U ANAMS)
      A   [COND
	    ((LISTP (SETQ U (CAR V)))
	      (CCHECKVAR (CAR U))
	      [AND (CDDR U)
		   (COMPEM (CONS (LIST (CAR U)
				       (CADR U)
				       (QUOTE --))
				 (QUOTE (BAD PROG BINDING]
	      [COND
		[[AND (CONP (CADR U))
		      (NOT (VAGNP (CADR U]
		  (SETQ NCON (ADD1 NCON))
		  (TCONC VCON (CONS (QUOPP (CADR U))
				    (CAR U]
		(T (TCONC LEXP (CADR U))
		   (TCONC NAMS (CAR U]
	      (SETQ ANAMS (CONS (CAR U)
				ANAMS)))
	    (T (CCHECKVAR U)
	       (SETQ NCON (ADD1 NCON))
	       (TCONC VCON (CONS NIL U))
	       (SETQ ANAMS (CONS U ANAMS]
          (COND
	    ((SETQ V (CDR V))
	      (GO A)))
          [SETQ NAMS (COND
	      ((CAR NAMS)
		(FRPLACD (CDR NAMS)
			 (CAR VCON))            (* SMASH TWO LISTS 
						TOGETHER)
		(CAR NAMS))
	      (T (CAR VCON]
          (SETQ NEXP (CARG (CAR LEXP)))
          (SETQ SSP (PSTEPN NCON))
          (SETQ ARGS (APPEND (SETQ LOCALARGS (DREVERSE ANAMS))
			     ARGS))
          (RETURN (CBIND1 NAMS NEXP NCON (IPLUS NEXP NCON)
			  0])

(CBIND1
  [LAMBDA (NAMS NEXP NCON FS ARGTY)             (* dcl: 7 JAN 76 13:03)
    (PROG (U)
          (SETQ U LOCALARGS)
      L   (COND
	    ((NULL (LOCALP (CAR U)))
	      (SETQ FRMFLG T)                   (* PROVISIONAL)
	      )
	    ((SETQ U (CDR U))
	      (GO L)))
          (SETQ NFSSP SP)                       (* SAVE SP IN CASE 
						FRMFLG IS OR BECOMES 
						NIL)
          [COND
	    (FRMFLG (SETQ BNDLEV (ADD1 BNDLEV]
          [COND
	    (FRMFLG (SETQ SP (ITIMES BNDLEV 2]
          (RETURN (LIST (QUOTE BIND)
			NAMS NEXP NCON FS BNDLEV ARGTY])

(CCHECKVAR
  [LAMBDA (V)                                   (* lmm "26-MAY-82 10:56"
)                                               (* Check a variable to 
						insure that it is valid 
						to bind it.)
    (COND
      ((NOT (AND (LITATOM V)
		 V
		 (NOT (AND COMPVARMACROHASH (GETHASH V COMPVARMACROHASH)
			   ))
		 (NEQ V T)))
	[COMPEM (CONS V (QUOTE (- NOT A BINDABLE VARIABLE]
	(SETQ FATALERROR T])

(CRETURN
  [LAMBDA (X RX)                                (* dcl: 30 Nov 81 15:11)
                                                (* COMPILE RETURN, X IS 
						RETURN VALUE, RX NOT 
						SUPPLIED)
    (PROG NIL
          (COND
	    ((EQ TAGS (QUOTE EMPTY))
	      (COMPEM (QUOTE (ILLEGAL RETURN)))
	      (RETURN)))
          [AND (NEQ (CAR SNN)
		    (CAR NN))
	       (STORIN (APPEND (QUOTE (SUB CP , BHC))
			       (LIST (IDIFFERENCE (CAR NN)
						  (OR (CAR SNN)
						      -1]
          [COND
	    ((AND (OR PRPCF PRVCF)
		  (EQ SP SSP)
		  (ATOM X))
	      (COND
		((SETQ RX (SASSOC X RE))
		  (GOTOCOMP (CDR RX))
		  (RETURN))
		(T (STORETAG (SETQ RX (IMINUS (GENTAG)))
			     T)
		   (SETQ RE (CONS (CONS X RX)
				  RE]
          [COND
	    (PRV                                (* CANT RESPOND TO 
						CONTEXT)
		 (COMP X (OR PRPCF PRVCF)
		       NIL
		       (AND (NOT FRMFLG)
			    PRPIF)))
	    (T (PROG ((BRT OBRT)
		      (BRF OBRF))
		     (COMP X PRVCF PRPCF PRPIF PRNCF]
          [COND
	    ((NEQ SP SSP)
	      (STOREUC (IDIFFERENCE SP SSP]
          (COND
	    [(NEQ SBNDLEV BNDLEV)
	      [STORIN (QUOTE (MOVEI 3 , 0 (1]
	      (CGO (OR PROGRETLABEL (SETQ PROGRETLABEL
			 (PACK* FN (QUOTE PROGRETLABEL)
				(GENSYM]
	    (T (GOTOCOMP PR])

(CGO
  [LAMBDA (TG)                                  (* edited: 
						" 8-Jun-79 18:20")
    (COND
      ((EQ TAGS (QUOTE EMPTY))
	[COMPEM (CONS TG (QUOTE (- ILLEGAL GO]
	NIL)
      (T [COND
	   ((NULL (FMEMB TG TAGS))
	     (SETQ TAGS (CONS TG TAGS]
	 [COND
	   ((AND (EQ BNDLEV SBNDLEV)
		 (NEQ SP SSP))
	     (STOREUC (IDIFFERENCE SP SSP]
	 [COND
	   ((NEQ (CAR SNN)
		 (CAR NN))
	     (STORIN (APPEND (QUOTE (SUB CP , BHC))
			     (LIST (IDIFFERENCE (CAR NN)
						(OR (CAR SNN)
						    -1]
	 (GOTOCOMP TG])

(CPROGN
  [LAMBDA (L)
    (COND
      ((NULL L)
	(LQE NIL))
      (T (MAP L (FUNCTION (LAMBDA (Z)
		  (COND
		    ((CDR Z)
		      (CSTA (CAR Z)))
		    (T (CCEXP (CAR Z])

(CPROG1
  [LAMBDA (L)                                   (* dcl: 13 Apr 78 00:28)
    (COND
      ((NULL (CDR L))
	(CCEXP (CAR L)))
      (T [COND
	   (NCF (FIXNCF)
		(CNEXP (CAR L)
		       NCF)
		(CPUSHN 1))
	   (T (CARG (CONS (CAR L]
	 (MAPC (CDR L)
	       (FUNCTION CSTA))
	 (COND
	   (NCF (CPOPN))
	   (T (STORIN (QUOTE (POPP)))
	      (SETQ SP (SUB1 SP))
	      (RESP])

(CSETQ
  [LAMBDA (V E)                                 (* dcl: 12 Jul 78 22:03)
                                                (* COMPILE SETQ)
    [AND (CDR E)
	 (COMPEM (CONS (LIST (QUOTE SETQ)
			     V
			     (CAR E)
			     (QUOTE --))
		       (QUOTE (- BAD SETQ]
    (OR (EQ V T)
	(CCHECKVAR V))                          (* V may be T because 
						SETQ doesnt currently 
						check for it.)
    (CEXP (CAR E))
    (VARCOMP V)
    (STORIN (LIST (QUOTE STV)
		  V SP])

(CFASTCALL
  [LAMBDA (L R S)                               (* COMPILE CONS)
    (CEXP L)
    (CEXP2 R)
    (STORIN (LIST (QUOTE FASTCALL)
		  S SP])

(CCONS
  [LAMBDA (E1 E2)
    (STORIN (COND
	      ((NULL E2)
		(CEXP E1)
		(QUOTE (FASTCALL CONSNL)))
	      [(C2EXP E1 E2 T)
		(COND
		  ((EQ (CAR (LISTP (CAR CODE)))
		       (QUOTE POPP2))
		    (SETQ CODE (CDR CODE))
		    (QUOTE (FASTCALL CONSS1)))
		  (T (QUOTE (FASTCALL CONS21]
	      (T (QUOTE (FASTCALL CONS])

(CLIST
  [LAMBDA (L)                                   (* Special treatment for
						0 or 1 args)
    (COND
      [(NULL (CDR L))
	(COND
	  (L (CCONS (CAR L)
		    NIL))
	  (T (LQE NIL]
      (T
	[STORIN
	  (LIST (QUOTE FASTCALL)
		(PROGN (SETQ L (CARG L))
		       (COND
			 [(EQ (CAR (LISTP (CAR CODE)))
			      (QUOTE PUSHP))
			   (SETQ CODE (CDR CODE))
			   (SELECTQ L
				    (2 (QUOTE ALIST2))
				    (3 (QUOTE ALIST3))
				    (4 (QUOTE ALIST4))
				    (PROGN (STORIN (LIST (QUOTE LDI2)
							 L 6))
					   (QUOTE ALIST]
			 ((SELECTQ L
				   (2 (QUOTE LIST2))
				   (3 (QUOTE LIST3))
				   (4 (QUOTE LIST4))
				   (PROGN (STORIN (LIST (QUOTE LDI)
							L))
					  (QUOTE LIST]
	(SETQ SP (IDIFFERENCE SP L])

(CCRF
  [LAMBDA (E OPL)                               (* dcl: 17 DEC 75 15:34)
                                                (* CAR, CDR TYPE FNS- 
						OPL IS LIST OF A'S AND 
						D'S)
    (COND
      [(OR PCF VCF)
	(COND
	  ((IDP E)
	    (VARCOMP E)
	    (STORIN (LIST (SELECTQ (CAR OPL)
				   (A (QUOTE CARV))
				   (QUOTE CDRV))
			  E SP))
	    (SETQ OPL (CDR OPL)))
	  (T (CEXP E)))
	(MAPC OPL (FUNCTION (LAMBDA (Z)
		  (STORIN (SELECTQ Z
				   (A (QUOTE (CAR1)))
				   (QUOTE (CDR1]
      (T (CCEXP E])

(CCRF2
  [LAMBDA (E OPL)                               (* dcl: 17 DEC 75 15:35)
                                                (* CAR, CDR TYPE FNS- 
						OPL IS LIST OF A'S AND 
						D'S)
    (COND
      ((IDP E)
	(VARCOMP E)
	(STORIN (LIST (SELECTQ (CAR OPL)
			       (A (QUOTE CAR2V))
			       (QUOTE CDR2V))
		      E SP 2))
	(SETQ OPL (CDR OPL)))
      (T (CEXP2 E)))
    (MAPC OPL (FUNCTION (LAMBDA (Z)
	      (STORIN (SELECTQ Z
			       (A (QUOTE (CAR2 2)))
			       (QUOTE (CDR2 2])

(LOCALP
  [LAMBDA (E)                                   (* dcl: 2 Jan 79 11:07)
    (COND
      ((NEQ LOCALVARS T)
	(FMEMB E LOCALVARS))
      (T (AND (NOT (GETPROP E (QUOTE GLOBALVAR)))
	      (NOT (FMEMB E GLOBALVARS))
	      (NEQ SPECVARS T)
	      (NULL (FMEMB E SPECVARS])

(REFRAME
  [LAMBDA NIL                                   (* dcl: 14 JAN 76 20:57)
    (COND
      ((AND (RELSTK (STKPOS (QUOTE COMPILE2A)))
	    LOCALARGS)
	(PROG ((A LOCALARGS)
	       NEWF)
	  L   (COND
		((NULL (LOCALP (CAR A)))
		  (SETQ NEWF T)
		  (GO B))
		((SETQ A (CDR A))
		  (GO L)))
	  B   (COND
		((EQ NEWF FRMFLG)
		  (RETURN))
		((NULL (SETQ FRMFLG NEWF))
		  (SELECTQ PLF
			   (PROG (SETQ BNDLEV (SETQ SBNDLEV
				     (SUB1 BNDLEV)))
				 (SETQ SP (SETQ SSP NFSSP)))
			   [LAMBDA (SETQ BNDLEV (SUB1 BNDLEV))
				   (SETQ SP NFSSP]
			   (SETQ FRMFLG T)))
		[(EQ PLF (QUOTE PROG))
		  (SETQ BNDLEV (SETQ SBNDLEV (ADD1 BNDLEV)))
		  (SETQ SP (SETQ SSP (ITIMES BNDLEV 2]
		((EQ PLF (QUOTE LAMBDA))
		  (SETQ BNDLEV (ADD1 BNDLEV))
		  (SETQ SP (ITIMES BNDLEV 2)))
		(T (SETQ SP 0)                  (* Was a blkfn with no 
						frame.)
		   ])

(CVAG
  [LAMBDA (E)                                   (* dcl: 15 Sep 76 22:45)
    (CNEXP E (QUOTE GEN))
    (COND
      ((AND (EQ (CAAR CODE)
		(QUOTE MOVEI))
	    (EQ (CADAR CODE)
		2))
	(SETQ CODE (CDR CODE])

(CFUNC
  [LAMBDA (N L)                                 (* dcl: 10 Aug 81 13:21)
    (COND
      ((AND (EQ N FN)
	    PIF)
	(CPI L))
      (T (CFA N L])

(CFA
  [LAMBDA (N L EVF FLG)                         (* dcl: 26 FEB 76 00:31)

          (* COMPILE call to function -
	  N is name, L is arg list, EVF is T for nlambda -
	  FLG T IF FNTYP UNKNOWN)


    (PROG ((BLF (BLKFNP N))
	   (NLP (NOLINKP N))
	   A)
          (SETQ L (CARG L EVF))
          [COND
	    [BLF (PROG NIL
		       (SETQ A (CADDR (FASSOC N CALLTAGS)))
		       (COND
			 ((AND (NULL EVF)
			       (CADR A)
			       (ATOM (CADR A)))
			   (STORIN (LIST (QUOTE PUSHQ)
					 L))
			   (PSTEP)
			   (SETQ L (ADD1 L))
			   (GO A)))
		       (SETQ A (NARGS A))
		   B   [COND
			 ((EQ A L))
			 ((IGREATERP A L)       (* TOO FEW ARGS GIVEN)
			   (STORIN (QUOTE (PUSH PP , KNIL)))
			   (PSTEP)
			   (SETQ L (ADD1 L))
			   (GO B))
			 (T (STORIN (LIST (QUOTE UNCOV)
					  (SETQ A (IDIFFERENCE L A]
		   A   (SETQ A (LIST (QUOTE TREF)
				     BLF))
		       (STORIN (LIST (QUOTE FCLL)
				     A]
	    (T
	      [COND
		((AND FLG (FMEMB N ARGS))
		  (COMPEM (CONS N
				(QUOTE (- NO LONGER INTERPRETED AS 
					  FUNCTIONAL ARGUMENT]
	      (COND
		[NLP
		  (STORIN
		    (COND
		      ((IGREATERP L 15)
			(LIST (QUOTE CLL2)
			      N L))
		      (T
			(SELECTQ
			  (CAR (LISTP (CAR CODE)))
			  (PUSHP (SETQ CODE (CDR CODE))
				 (LIST (QUOTE ACLL)
				       N L))
			  [PUSHV (CONS (QUOTE VCLL)
				       (APPEND (PROG1 (CDAR CODE)
						      (SETQ CODE
							(CDR CODE)))
					       (LIST N L]
			  (LIST (QUOTE CLL)
				N L]
		(T
		  (STORIN
		    (COND
		      ((IGREATERP L 15)
			(LIST (QUOTE LCLL2)
			      N L))
		      (T
			(SELECTQ
			  (CAR (LISTP (CAR CODE)))
			  (PUSHP (SETQ CODE (CDR CODE))
				 (LIST (QUOTE ALCLL)
				       N L))
			  [PUSHV (CONS (QUOTE VLCLL)
				       (APPEND (PROG1 (CDAR CODE)
						      (SETQ CODE
							(CDR CODE)))
					       (LIST N L]
			  (LIST (QUOTE LCLL)
				N L]
          (SETQ SP (IDIFFERENCE SP L])

(CPI
  [LAMBDA (L)                                   (* dcl: 17 Sep 81 11:02)
    (PROG (U V W F)
          (SETQ U (LIST NIL))
          (SETQ V IARGS)
      C   [COND
	    ((NULL V)
	      (GO A))
	    ((NEQ (CAR V)
		  (CAR L))

          (* There is a potenial problem here.
	  If a call is made like (FOO ARG1 
	  (SETQ ARG1 (FUM))), Things will not be right because
	  the NEQ kept us from saving the proper value of ARG1
	  on the stack. I'll fix this if anyone ever gets hit 
	  by it.)


	      (SETQ U (CONS (CAR L)
			    U))                 (* U IS LIST OF NEW 
						VALUE EXPRS FOR THOSE 
						VARS THAT CHANGE)
                                                (* W IS LIST OF NAMES OF
						THOSE VARS THAT CHANGE)
	      (SETQ W (CONS (CAR V)
			    W]
          (SETQ V (CDR V))
          (SETQ L (CDR L))
          (GO C)
      A   [COND
	    (W                                  (* SET ORIG ARGS TO NEW 
						VALUES)
	       (SETQ F (LIST (QUOTE SETQ)
			     (CAR W)
			     (CAR U)))
	       (SETQ W (CDR W))
	       (SETQ U (CDR U]

          (* This represents a little of my latest thinking on
	  compilers; Don't generate machine/macro code when 
	  you can generate lisp expressions and let the other 
	  parts of the compiler do the work.
	  This makes debugging easier and helps to localize 
	  optimizers.)


      B   (COND
	    (W (SETQ F (LIST (QUOTE SETQ)
			     (CAR W)
			     (LIST (QUOTE PROG1)
				   (CAR U)
				   F)))
	       (SETQ W (CDR W))
	       (SETQ U (CDR U))
	       (GO B)))
          (CSTA F)
          (STOREUC (IDIFFERENCE SP PIFSP))
          (RETURN (GOTOCOMP FE])

(CSF
  [LAMBDA (L X)
    (COND
      [(AND COMPILEUSERFN (COND
	      ((EQ (SETQ X (APPLY* COMPILEUSERFN (CDR L)
				   L))
		   (QUOTE INSTRUCTIONS)))
	      (X (CCEXP X)
		 T]
      (T [COMPEM (CONS (CAR L)
		       (QUOTE (- NON ATOMIC CAR OF FORM]
	 (CAPPLY* L])

(CAPPLY*
  [LAMBDA (L)                                   (* dcl: 21 DEC 75 10:30)
    (SETQ L (CARG L))
    (STORIN (LIST (QUOTE CLLA)
		  (SUB1 L)))
    (SETQ SP (IDIFFERENCE SP L])

(CBLKAPPLY
  [LAMBDA (L)                                   (* dcl: 21 DEC 75 10:28)
    (COND
      ((NULL BLKFLG)
	(CEXP (CONS (QUOTE APPLY)
		    L)))
      (T (SETQ L (CARG L))
	 [COND
	   ((NEQ L 2)
	     (COND
	       [(IGREATERP L 2)
		 (STORIN (LIST (QUOTE UNCOV)
			       (IDIFFERENCE L 2]
	       (T (STORIN (QUOTE (PUSHQ NIL]
	 (STORIN (QUOTE (MOVEI 2 , **BLKENT)))
	 (STORIN (QUOTE (PUSHJ CP , BLKAPP)))
	 (SETQ SP (IDIFFERENCE SP L])

(CBLKAPPLY*
  [LAMBDA (L)                                   (* dcl: 21 DEC 75 10:30)
    (COND
      ((NULL BLKFLG)
	(CAPPLY* L))
      (T (SETQ L (CARG L))
	 (STORIN (LIST (QUOTE BA*)
		       L))
	 (SETQ SP (IDIFFERENCE SP L])

(CLAM
  [LAMBDA (L)                                   (* COMPILE (FUNCTION 
						...))
    (COND
      [(ATOM (CAR L))
	(COND
	  ((NULL (CDR L))
	    (LQ (CAR L)))
	  (T (CFA (QUOTE FUNCTION)
		  L T]
      (T (PROG (G)
	       [SETQ G (PACK (LIST (COND
				     (BLKFLG BLKNAME)
				     (T FN))
				   (GENSYM]
	       (COMPILE2 G (CAR L))
	       (RETURN (COND
			 ((NULL (CDR L))
			   (LQ G))
			 (T (CFA (QUOTE FUNCTION)
				 (CONS G (CDR L))
				 T])

(CFNP
  [LAMBDA (A)
    (COND
      ((AND (LISTP A)
	    (EQ (CAR A)
		(QUOTE FUNCTION)))
	(COND
	  ((NULL (CDDR A))
	    (CADR A])

(CARGN
  [LAMBDA (X N)                                 (* dcl: 11 DEC 75 13:02)
    (COND
      [(FMEMB X ARGS)
	(COND
	  [(FIXP N)
	    (STORIN (LIST (QUOTE HRRZ)
			  1
			  (QUOTE ,)
			  (LIST (QUOTE ARGN)
				X N SP]
	  (T (CNEXP N (QUOTE FIXT))
	     (STORIN (LIST (QUOTE ADDBAS)
			   X SP))
	     (STORIN (QUOTE (CAR1]
      (T (CFA (QUOTE ARG)
	      (LIST X N)
	      T])

(CSETARG
  [LAMBDA (L)                                   (* dcl: 8 JAN 76 18:15)
    (COND
      [(FMEMB (CAR L)
	      ARGS)
	[COND
	  [(FIXP (CADR L))
	    (STORIN (LIST (QUOTE MOVEI)
			  1
			  (QUOTE ,)
			  (LIST (QUOTE ARGN)
				(CAR L)
				(CADR L)
				SP]
	  (T (CNEXP (CADR L)
		    (QUOTE FIXT))
	     (STORIN (LIST (QUOTE ADDBAS)
			   (CAR L)
			   SP]
	[OR (CEXP2 (CADDR L)
		   T)
	    (STORIN (QUOTE (EXCH 1 , 2]
	(STORIN (QUOTE (HRRZM 1 , 0 (2]
      (T (CFA (QUOTE SETARG)
	      L T])

(CSYNTAXP
  [LAMBDA (CH CLASS TABLE)                      (* dcl: 22 Jul 81 11:44)
    (COND
      ((NOT (CONP CLASS))
	(QUOTE IGNOREMACRO))
      [(FMEMB (SETQ CLASS (QUOPP CLASS))
	      (QUOTE (DELETECHAR CHARDELETE DELETELINE LINEDELETE 
				 RETYPE CNTRLV CTRLV EOL)))
	(LIST (QUOTE EQ)
	      (LIST (QUOTE VAG)
		    (LIST (QUOTE LOGAND)
			  CH 127))
	      (LIST (QUOTE CAR)
		    (LIST (QUOTE VAG)
			  (LIST (QUOTE IPLUS)
				(LIST (QUOTE LOC)
				      (LIST (QUOTE GETTERMTABLE)
					    TABLE))
				(SELECTQ CLASS
					 ((DELETECHAR CHARDELETE)
					   2)
					 ((LINEDELETE DELETELINE)
					   3)
					 (RETYPE 4)
					 ((CNTRLV CTRLV)
					   5)
					 (EOL 6)
					 (HELP]
      [(EQ CLASS (QUOTE NONE))
	(SUBPAIR
	  (QUOTE (TABLE CH))
	  (LIST TABLE CH)
	  (QUOTE
	    (ASSEMBLE
	      NIL
	      (CQ (VAG (LOGAND CH 127)))
	      [C
		(COND
		  [(CEXP2
		      (QUOTE (VAG (IPLUS (LOC (GETTERMTABLE TABLE))
					 2)))
		      T)
		    (QUOTE (ASSEMBLE NIL (HRLI 1 , -5)
				     LP
				     (CAMN 2 , 0 (1))
				     (JRST * 3)
				     (AOBJN 1 , LP]
		  (T (QUOTE (ASSEMBLE NIL (HRLI 2 , -5)
				      LP
				      (CAMN 1 , 0 (2))
				      (JRST * 3)
				      (AOBJN 2 , LP]
	      (SKIPA 1 , KT)
	      (MOVE 1 , KNIL]
      (T
	[SETQ CH
	  (LIST (QUOTE LOC)
		(LIST (QUOTE CDR)
		      (LIST (QUOTE VAG)
			    (LIST (QUOTE IPLUS)
				  (LIST (QUOTE LOGAND)
					CH 127)
				  2
				  (LIST (QUOTE LOC)
					(LIST (QUOTE GETREADTABLE)
					      TABLE]
	(SELECTQ
	  CLASS
	  [(BREAK SEPR)
	    (LIST (QUOTE NEQ)
		  0
		  (LIST (QUOTE LOGAND)
			CH
			(SELECTQ CLASS
				 (BREAK 128)
				 (SEPR 64)
				 (HELP]
	  [(LEFTPAREN RIGHTPAREN LEFTBRACKET RIGHTBRACKET BREAKCHAR 
		      SEPRCHAR STRINGDELIM ESCAPE OTHER)
	    (LIST (QUOTE EQ)
		  CH
		  (SELECTQ CLASS
			   (LEFTPAREN 163)
			   (RIGHTPAREN 164)
			   (LEFTBRACKET 162)
			   (RIGHTBRACKET 161)
			   (BREAKCHAR 160)
			   (SEPRCHAR 96)
			   (STRINGDELIM 176)
			   (ESCAPE 40)
			   (OTHER 0)
			   (HELP]
	  [(MACRO SPLICE INFIX)
	    (LIST (QUOTE EQ)
		  (LIST (QUOTE LOGAND)
			CH 7)
		  (SELECTQ CLASS
			   (MACRO 5)
			   (SPLICE 6)
			   (INFIX 7)
			   (HELP]
	  (CONS
	    [LIST (QUOTE LAMBDA)
		  (QUOTE (MACROX))
		  (LIST (QUOTE AND)
			(QUOTE (IGREATERP (LOC MACROX)
					  4))
			(SELECTQ CLASS
				 ((NOESC NOESCQUOTE NONIMMED 
					 NONIMMEDIATE)
				   (LIST (QUOTE EQ)
					 (LIST (QUOTE LOGAND)
					       (QUOTE (LOC MACROX))
					       (SELECTQ CLASS
							((NOESC 
							 NOESCQUOTE)
							  32)
							1024))
					 0))
				 ((ALONE ALWAYS FIRST IMMED IMMEDIATE 
					 ESC ESCQUOTE)
				   (LIST (QUOTE NEQ)
					 (LIST (QUOTE LOGAND)
					       (QUOTE (LOC MACROX))
					       (SELECTQ CLASS
							(ALONE 512)
							(ALWAYS 128)
							(FIRST 256)
							((ESC ESCQUOTE)
							  32)
							1024))
					 0))
				 (COMPEM (CONS CLASS
					       (QUOTE (- ILLEGAL SYNTAX 
							 CLASS GIVEN TO 
							 SYNTAXP]
	    (CDR CH])

(CPREX
  [LAMBDA (F L)                                 (* dcl: 14 Aug 81 01:02)

          (* COMPILE FUNCTIONS WITH BUILT IN RESPONSE TO 
	  PREDICATE CONTEXT, F IS NAME, L IS ARG LIST)


    (SELECTQ F
	     (COND (CCOND L))
	     (AND (CAND L))
	     (OR (COR L))
	     (SELECTQ (CSELECTQ L))
	     (PROG (CPROG (CAR L)
			  (CDR L)))
	     (GO (CGO (CAR L)))
	     (RETURN (CRETURN (CAR L)))
	     (PROG1 (CPROG1 L))
	     ((PROGN PROG2)
	       (CPROGN L))
	     (PROGN [SELECTQ F
			     (EQ (CEQ (CAR L)
				      (CADR L)))
			     ((NULL NOT)
			       (CNULL (CAR L)))
			     (ATOM (CATOM (CAR L)))
			     [LITATOM (CEXP (CAR L))
				      (PRED2 (QUOTE STE)
					     (QUOTE STN)
					     (QUOTE (ATOMT]
			     (NUMBERP (CNUMP (CAR L)
					     (QUOTE SKNM)
					     (QUOTE SKNNM)))
			     (MINUSP (CMINUSP (CAR L)))
			     (FIXP (CNUMP (CAR L)
					  (QUOTE SKI)
					  (QUOTE SKNI)))
			     [IGREATERP (CGTLS (CAR L)
					       (CADR L)
					       (QUOTE FIXT)
					       (QUOTE (CAMG . CAMLE))
					       (QUOTE (CAIG . CAILE]
			     [ILESSP (CGTLS (CAR L)
					    (CADR L)
					    (QUOTE FIXT)
					    (QUOTE (CAML . CAMGE))
					    (QUOTE (CAIL . CAIGE]
			     [IEQP (CGTLS (CAR L)
					  (CADR L)
					  (QUOTE FIXT)
					  (QUOTE (CAME . CAMN))
					  (QUOTE (CAIE . CAIN]
			     [FGTP (CGTLS (CAR L)
					  (CADR L)
					  (QUOTE FLOATT)
					  (QUOTE (CAMG . CAMLE]
			     (CPREDT (CAR L)
				     (SELECTQ
				       F
				       (LISTP (QUOTE LISTT))
				       (ARRAYP (QUOTE ARRAYT))
				       (FLOATP (QUOTE FLOATT))
				       (SMALLP (QUOTE SMALLT))
				       (STRINGP (QUOTE STPTT))
				       (STACKP (QUOTE STKPT))
				       (STREAMP (QUOTE STREAMT))
				       (EVAL (GETPROP F
						      (QUOTE STRUCPRED]
		    (COND
		      (NCF [COMPEM (CONS F
					 (QUOTE (- USED AS ARG TO 
						   NUMBER FUNCTION?]
			   (REPSN])

(CCOND
  [LAMBDA (CX)                     (* dcl: 29 Dec 81 11:41)
    (PROG (CR CLR CR2)             (* CR IS COND RETURN, CLR IS CLAUSE RETURN , CR2 IS USED WHEN VALUE IS OBTAINED 
				   WITHOUT CONSIDERING NUMBER CONTEXT)
          (COND
	    ((NULL CX)
	      (LQE NIL)
	      (GO R)))
      A   (COND
	    [(CDR CX)              (* NOT LAST CLAUSE)
	      (COND
		[(CDAR CX)         (* EFFECT EXISTS)
		  (CPRD (CAAR CX)
			NIL
			(SETQ CLR (GENTAG)))
		  (COND
		    ((AND [EQ (QUOTE J)
			      (CAR (LISTP (CAR CODE]
			  (EQ CLR (CADAR CODE)))
		      (SETQ CODE (CDR CODE)))
		    (T (CPROGN (CDAR CX))
		       [GOTOCOMP (OR CR (SETQ CR (GENTAG]
		       (STORETAG CLR]
		(T                 (* NO EFFECT)
		   (PROG ((PCF T)
			  [BRT (OR (AND PCF BRT)
				   CR2
				   (SETQ CR2 (GENTAG]
			  BRF PIF NCF)
		         (CCEXP (CAAR CX))
		         (COND
			   ((AND (EQ (CAR (LISTP (CAR CODE)))
				     (QUOTE LQ))
				 (NULL (CADAR CODE)))
                                   (* DELETE UNNECESSARY (LQ NIL))
			     (SETQ CODE (CDR CODE]
	    ((CDAR CX)             (* LAST CLAUSE, EFFECT EXISTS)
	      [COND
		((NEQ (CAAR CX)
		      (QUOTE T))
		  (PROG ((PCF T)
			 [BRF (OR (AND PCF BRF)
				  CR2
				  (SETQ CR2 (GENTAG]
			 BRT PIF NCF)
		        (CCEXP (CAAR CX]
	      (CPROGN (CDAR CX))
	      (GO R))
	    (T (CCEXP (CAAR CX))   (* LAST CLAUSE, NO EFFECT)
	       (GO R)))
          (SETQ CX (CDR CX))
          (GO A)
      R   (COND
	    ((AND NCF CR2)
	      (GOTOCOMP (SETQ CX (GENTAG)))
	      (STORETAG CR2)
	      (RESPN)
	      (STORETAG CX))
	    (CR2 (STORETAG CR2)))
          (COND
	    (CR (STORETAG CR)))
          (RETURN])

(CAND
  [LAMBDA (CX)
    (PROG (CD R RNIL)
          (COND
	    ((NULL CX)
	      (LQE T)
	      (RETURN)))
      A   [COND
	    ((SETQ CD (CDR CX))
	      [CPRD (CAR CX)
		    NIL
		    (COND
		      [VCF (OR RNIL (SETQ RNIL (GENTAG]
		      (T (OR (AND PCF BRF)
			     R
			     (SETQ R (GENTAG]
	      (SETQ CX CD)
	      (GO A))
	    (T (CCEXP (CAR CX]
          [COND
	    (RNIL [OR (AND PCF BRT)
		      (GOTOCOMP (OR R (SETQ R (GENTAG]
		  (STORETAG RNIL)
		  (COND
		    ((NLISTP (CAR CODE))        (* IF TAG GOT USED, 
						STORE A (LQ NIL) ELSE 
						NOTHING)
		      (LQE NIL]
          (COND
	    (R (STORETAG R])

(COR
  [LAMBDA (CX)
    (PROG (R)
          (COND
	    ((NULL CX)
	      (LQE NIL)
	      (RETURN)))
          [PROG ((PCF T)
		 [BRT (OR (AND PCF BRT)
			  (SETQ R (GENTAG]
		 BRF PIF NCF)                   (* LEAVE VCF SAME, SET 
						PCF)
	    A   (COND
		  ((CDR CX)
		    (CCEXP (CAR CX))
		    [COND
		      ((AND (EQ (CAAR CODE)
				(QUOTE LQ))
			    (NULL (CADAR CODE)))
			(SETQ CODE (CDR CODE]   (* REALLY ONLY NEED 
						VALUE IF NOT NIL)
		    (SETQ CX (CDR CX))
		    (GO A))
		  (T (RETURN]
          (CCEXP (CAR CX))
          (COND
	    (R [COND
		 (NCF (GOTOCOMP (SETQ CX (GENTAG]
	       (STORETAG R)
	       (COND
		 (NCF (RESPN)
		      (STORETAG CX])

(CNULL
  [LAMBDA (E)
    (COND
      [(NULL VCF)
	(COND
	  (PCF (CPRD E BRF BRT))
	  (T (CSTA E]
      (T (PROG ((A (GENTAG)))
	       (COND
		 ((AND PCF BRF)
		   (CPRD E NIL A))
		 (T (CPRD E A)))
	       [COND
		 [(NULL PCF)
		   (STORIN (QUOTE (LQTS]
		 (T (LQE (AND BRT T]
	       (STORETAG A)
	       (LQ (AND PCF BRF T])

(CEQ
  [LAMBDA (A1 A2)                               (* lmm "22-JAN-82 11:55"
)
    [COND
      ((AND (NOT (CONP A2))
	    (CONP A1))
	(PROG ((C A1))
	      (SETQ A1 A2)
	      (SETQ A2 C]
    (COND
      ((NULL A2)
	(CNULL A1))
      (T (CEXP A1)
	 (COND
	   ((SMALLP (NCONP A2))
	     (CEQN (QUOPP A2)))
	   [(VAGNP A2)
	     (PRED2 (QUOTE SKEN)
		    (QUOTE SKNEN)
		    (LIST (CADR (QUOPP A2]
	   [(CONP A2)
	     (PRED2 (QUOTE SKEQ)
		    (QUOTE SKNEQ)
		    (CONS (QUOPP A2]
	   (T (CEXP2 A2 T)
	      (PRED2 (QUOTE SKE)
		     (QUOTE SKNE)
		     (QUOTE (2])

(CEQN
  [LAMBDA (A2)                                  (* dcl: 2 Jan 79 11:07)
    (COND
      [[AND (LISTP (CAR CODE))
	    (OR (EQ (CAAR CODE)
		    (QUOTE FASTCALL))
		(EQ (CAAR CODE)
		    (QUOTE FCLL)))
	    (EQ (CADAR CODE)
		(GETPROP (QUOTE FIXT)
			 (QUOTE MAKE]
	(SETQ CODE (CDR CODE))
	(COND
	  ((IMMP A2)
	    (PRED2 (QUOTE SKEI)
		   (QUOTE SKNEI)
		   (CONS A2)))
	  (T (PRED2 (QUOTE SKEN)
		    (QUOTE SKNEN)
		    (CONS A2]
      (T (PRED2 (QUOTE SKES)
		(QUOTE SKNES)
		(CONS A2])

(CATOM
  [LAMBDA (E)
    (CEXP E)
    (PRED2 (QUOTE SKA)
	   (QUOTE SKNA])

(PRED2
  [LAMBDA (SKT SKF ADR)

          (* USED BY PREDICATES WHOSE VALUE IS T OR NIL, SKT 
	  IS MACRO TO SKIP IF TRUE, SKF SKIP IF FALSE, ADR IS 
	  ADDRESS OF OPERAND IF ANY)


    (COND
      [(NULL VCF)
	(COND
	  (PCF (STORIN (CONS (COND
			       (BRT SKF)
			       (T SKT))
			     ADR))
	       (STOREJ (OR BRT BRF]
      ((NULL PCF)
	(STORIN (CONS SKT ADR))
	(STORIN (QUOTE (LQNS)))
	(LQ T))
      (T (STORIN (CONS (COND
			 (BRF SKT)
			 (T SKF))
		       ADR))
	 [COND
	   [BRF (STORIN (QUOTE (LQNS)))
		(STORIN (QUOTE (LQTS]
	   (T (STORIN (QUOTE (LQTS)))
	      (STORIN (QUOTE (LQNS]
	 (STOREJ (OR BRT BRF])

(CNUMP
  [LAMBDA (E SKT SKF)                           (* NUMBERP AND FIXP, 
						VALUE IS SELF OF NIL, 
						NOT SIMPLE TYPE CHECK)
    (CEXP E)
    (COND
      ((NULL VCF)
	(PRED2 SKT SKF))
      ((NULL PCF)
	(STORIN (CONS SKT))
	(LQ NIL))
      (T (PROG (A)
	       (STORIN (CONS SKF))
	       [STOREJ (OR BRT (SETQ A (GENTAG]
	       (LQ NIL)
	       (COND
		 (BRF (STOREJ BRF)
		      (STORETAG A])

(CMINUSP
  [LAMBDA (E)
    (CNEXP E (QUOTE GEN))
    [COND
      ((AND (EQ (CAAR CODE)
		(QUOTE MOVE))
	    (EQ (CADAR CODE)
		2))
	(SETQ CODE (CDR CODE]
    (COND
      [(NULL VCF)
	(COND
	  (PCF [STORIN (COND
			 (BRT (LIST (QUOTE JL)
				    BRT))
			 (T (LIST (QUOTE JGE)
				  BRF]
	       (USETAG (OR BRT BRF]
      (T (PRED2 (QUOTE SKIPL)
		(QUOTE SKIPGE)
		(QUOTE (1])

(CPREDT
  [LAMBDA (E TYP)                               (* lmm "16-SEP-82 12:39"
)                                               (* COMPILE SIMPLE 
						PREDICATE USING TYPE 
						CHECK, VALUE SELF OR 
						NIL)
    (COND
      [(OR PCF VCF)
	(PROG (A)
	      (CEXP E)
	      [STORIN (CONS (COND
			      [(AND PCF (OR VCF BRT))
				(COND
				  ((LISTP TYP)
				    (QUOTE PSTNI))
				  (T (QUOTE STN]
			      ((LISTP TYP)
				(QUOTE PSTEI))
			      (T (QUOTE STE)))
			    (OR (LISTP TYP)
				(CONS TYP]
	      [COND
		(PCF (STOREJ (COND
			       (BRT)
			       ((NULL VCF)
				 BRF)
			       (T (SETQ A (GENTAG]
	      (COND
		(VCF (LQ NIL)
		     (COND
		       (A (GOTOCOMP BRF)
			  (STORETAG A]
      (T (CSTA E])

(CSELECTQ
  [LAMBDA (L FLG)                               (* dcl: 21 Jul 81 10:19)
                                                (* FLG will only be true
						when called from 
						CSYSTEMTYPESELECTQ.)
    (PROG ((SR (GENTAG))
	   CLR CA)
          (COND
	    ((NULL L)
	      (LQE NIL)
	      (RETURN))
	    ((AND (NULL FLG)
		  (EQ (CAR (LISTP (CAR L)))
		      (QUOTE SYSTEMTYPE)))
	      (CSYSTEMTYPESELECTQ (CDR L))
	      (RETURN)))
          (CEXP (CAR L))
          [COND
	    ((FMEMB (CAR (LISTP (CAR CODE)))
		    (QUOTE (LQ LQI)))
	      (RETURN (CFSELECTQ (PROG1 (CADAR CODE)
					(SETQ CODE (CDR CODE)))
				 (CDR L]
      A   (SETQ L (CDR L))
          (COND
	    ((CDR L)
	      [COND
		[(NLISTP (SETQ CA (CAAR L)))
		  (STORIN (LIST (COND
				  ((SMALLP CA)
				    (QUOTE SKES))
				  (T (QUOTE SKEQ)))
				CA))
		  (STOREJ (SETQ CLR (GENTAG]
		(T (PROG ((CE (GENTAG)))
		     B   (COND
			   ((CDR CA)
			     (STORIN (LIST (COND
					     ((SMALLP (CAR CA))
					       (QUOTE SKNES))
					     (T (QUOTE SKNEQ)))
					   (CAR CA)))
			     (STOREJ CE)
			     (SETQ CA (CDR CA))
			     (GO B))
			   (T (STORIN (LIST (COND
					      ((SMALLP (CAR CA))
						(QUOTE SKES))
					      (T (QUOTE SKEQ)))
					    (CAR CA)))
			      (STOREJ (SETQ CLR (GENTAG)))
			      (STORETAG CE]
	      (CPROGN (CDAR L))
	      (GOTOCOMP SR)
	      (STORETAG CLR)
	      (GO A))
	    (T (CCEXP (CAR L))
	       (STORETAG SR])

(CFSELECTQ
  [LAMBDA (KEY L)                               (* dcl: 20 Jul 81 15:10)
    (PROG NIL
      L1  (RETURN (COND
		    ((NULL (CDR L))
		      (CCEXP (CAR L)))
		    ([OR (EQ KEY (CAAR L))
			 (AND (LISTP (CAAR L))
			      (FMEMB KEY (CAAR L]
		      (CPROGN (CDAR L)))
		    (T (SETQ L (CDR L))
		       (GO L1])

(CSYSTEMTYPESELECTQ
  [LAMBDA (L)                                   (* dcl: 21 Jul 81 10:26)
    (PROG (HAVETENEX HAVETOPS20)
      L1  [COND
	    ((NULL (CDR L))
	      [COND
		((OR HAVETENEX HAVETOPS20)
		  (CSELECTQ (CONS (QUOTE (SYSTEMTYPE))
				  (NCONC HAVETENEX HAVETOPS20 L))
			    T))
		(T (CCEXP (CAR L]
	      (RETURN))
	    [HAVETENEX (COND
			 ((AND (NOT HAVETOPS20)
			       (EQMEMB (QUOTE TOPS20)
				       (CAAR L)))
			   (SETQ HAVETOPS20
			     (LIST (CONS (QUOTE TOPS20)
					 (CDAR L]
	    [HAVETOPS20 (COND
			  ((EQMEMB (QUOTE TENEX)
				   (CAAR L))
			    (SETQ HAVETENEX (LIST (CONS (QUOTE TENEX)
							(CDAR L]
	    [(EQMEMB (QUOTE TENEX)
		     (CAAR L))
	      (COND
		((EQMEMB (QUOTE TOPS20)
			 (CAAR L))
		  (CPROGN (CDAR L))
		  (RETURN))
		(T (SETQ HAVETENEX (LIST (CONS (QUOTE TENEX)
					       (CDAR L]
	    ((EQMEMB (QUOTE TOPS20)
		     (CAAR L))
	      (SETQ HAVETOPS20 (LIST (CONS (QUOTE TOPS20)
					   (CDAR L]
          (SETQ L (CDR L))
          (GO L1])

(CNEXP
  [LAMBDA (E NTYP)                              (* COMPILE NUMERIC 
						EXPRESSION, NTYP IS 
						DESIRED NUMBER TYPE)
    (COMP E T NIL NIL NTYP])

(CNEXP2
  [LAMBDA (E NTYP)                              (* dcl: 20 Jul 81 11:29)
                                                (* COMPILE NUMBER EXPR 
						TO AC2, PRESERVING 
						NUMBER IN AC1)
    (COND
      ((NCONP E)
	(LQN (QUOPP E)
	     NTYP 2))
      (T (CPUSHN 1)
	 (CNEXP E NTYP)
	 (STORIN (QUOTE (MOV21)))
	 (CPOPN 1])

(CNFNS
  [LAMBDA (L NTYP OP OPM OPI DEFAULT)           (* dcl: 23 Jul 81 11:15)

          (* COMPILE NUMBER FN, INDEF.
	  ARGS, L ARG LIST, NTYP DESIRED TYPE, OP OPCODE)


    (COND
      ((NULL (CDR L))

          (* This should never happen anymore because of the 
	  checks for all constant args.
	  I've just left it here in case I redo that stuff.)


	(CNEXP (OR (CAR L)
		   DEFAULT)
	       NTYP))
      (T (PROG ((L1 L)
		CFLG)
	       (CNEXP (CAR L1)
		      NTYP)
	       (COND
		 ((EQ (CAAR CODE)
		      (QUOTE LPOPN))
		   (SETQ CODE (CDR CODE))
		   (SETQ NN OLDNN))
		 (T (CPUSHN 1)))
	   A   (COND
		 ((SETQ L1 (CDR L1))
		   [COND
		     ((NCONP (CAR L1))
		       (SETQ CFLG T))
		     (T (CNEXP (CAR L1)
			       NTYP)
			(STORIN (LIST OPM 1 (QUOTE ,)
				      0
				      (QUOTE (CP]
		   (GO A)))
	       (COND
		 ((EQ (CAAR CODE)
		      (QUOTE LPUSHN))
		   (SETQ CODE (CDR CODE))
		   (SETQ NN (CDR NN)))
		 (T (CPOPN 1)))
	       (COND
		 ((NULL CFLG)
		   (RETURN)))
	   B   [COND
		 ((NULL (SETQ L (CDR L)))
		   (RETURN))
		 ((NCONP (CAR L))
		   (SETQ L1 (QUOPP (CAR L)))
		   (COND
		     [(AND (EQ NTYP (QUOTE FIXT))
			   (IMMP L1))
		       (STORIN (LIST OPI 1 (QUOTE ,)
				     (FIX L1]
		     (T (STORIN (LIST OP 1 (QUOTE ,)
				      (QUOTE =)
				      (SELECTQ NTYP
					       (FIXT (FIX L1))
					       (FLOAT L1]
	       (GO B])

(NRESP
  [LAMBDA (TY)                                  (* dcl: 2 Jan 79 11:07)

          (* RESPOND TO NCF AND PCF FOR FUNCTIONS WITH NUMERIC
	  RESULTS -
	  TY IS RESULT TYPE, NCF IF NOT NIL IS DESIRED TYPE)


    (FIXNCF)
    (COND
      [(NULL NCF)                               (* NUMBER NOT WANTED, 
						BOX IT IF VALUE NEEDED)
	[COND
	  (VCF (STORIN (COND
			 ((EQ TY (QUOTE FIXT))
			   (QUOTE (FCLL MKN)))
			 (T (LIST (QUOTE FASTCALL)
				  (GETPROP TY (QUOTE MAKE))
				  SP]
	(COND
	  ((AND PCF BRT)
	    (GOTOCOMP BRT]
      ((EQ NCF TY))
      [(EQ NCF (QUOTE GEN))
	(STORIN (APPEND (QUOTE (MOVEI 2 ,))
			(CONS TY]
      ((EQ TY (QUOTE GEN))
	(STORIN (APPEND (QUOTE (MOVEI 3 ,))
			(CONS TY)))
	(STORIN (LIST (QUOTE FASTCALL)
		      (QUOTE CNVNUM)
		      SP)))
      (T (STORIN (LIST (QUOTE FASTCALL)
		       [CDR (ASSOC NCF (GETPROP TY (QUOTE CONVERT]
		       SP])

(CPUSHN
  [LAMBDA (ADR)
    (SETQ NN (CONS (COND
		     ((NULL NN)
		       1)
		     (T (IPLUS (CAR NN)
			       2)))
		   NN))
    (STORIN (QUOTE (LPUSHN 1])

(CPOPN
  [LAMBDA NIL
    (SETQ NN (CDR (SETQ OLDNN NN)))
    (STORIN (QUOTE (LPOPN 1])

(LQN
  [LAMBDA (N NTYP AC)                           (* dcl: 2 Jun 78 13:23)
    (SELECTQ NTYP
	     ((FIXT FIXP)
	       (LDFIX (FIX N)
		      AC))
	     ((FLOATT FLOATP)
	       (LDNUM (FLOAT N)
		      AC))
	     [GEN (COND
		    [(FIXP N)
		      (LDFIX N AC)
		      (STORIN (QUOTE (MOVEI 2 , FIXT]
		    ((FLOATP N)
		      (LDNUM N AC)
		      (STORIN (QUOTE (MOVEI 2 , FLOATT]
	     NIL])

(LDFIX
  [LAMBDA (N AC)
    (STORIN (COND
	      ((IMSP N)
		(SELECTQ AC
			 ((NIL 1)
			   (LIST (QUOTE LDI)
				 N))
			 (LIST (QUOTE LDI2)
			       N AC)))
	      (T (SELECTQ AC
			  ((NIL 1)
			    (LIST (QUOTE LDN)
				  N))
			  (LIST (QUOTE LDN2)
				N AC])

(LDNUM
  [LAMBDA (N AC)
    (STORIN (SELECTQ AC
		     ((NIL 1)
		       (LIST (QUOTE LDN)
			     N))
		     (LIST (QUOTE LDN2)
			   N AC])

(IMMP
  [LAMBDA (N)                                   (* IMMEDIATE PREDICATE, 
						POSITIVE NUMBERS)
    (AND (ILESSP N 262144)
	 (IGREATERP N -1])

(IMSP
  [LAMBDA (N)                                   (* IMMEDIATE PREDICATE, 
						SIGNED NUMBER)
    (AND (ILESSP N 131072)
	 (IGREATERP N -131073])

(CNUMOP2
  [LAMBDA (A1 A2 TYP)                           (* dcl: 20 Jul 81 11:35)

          (* CALLED BY CGTLS AND CNUMOP TO COMPILE 2 NUMERIIC 
	  OPERANDS, A1 AND A2, CHOOSE REGULAR OR IMMEDIATE 
	  OPCODE AND SET UP ADDRESS FIELD FOR A2, AS A2, = A2,
	  OR 2)


    (COND
      ((AND (NCONP A1)
	    (NULL (NCONP A2)))
	(CNEXP A2 TYP)
	(STORIN (QUOTE (MOV21)))
	(LQN (QUOPP A1)
	     TYP)
	(QUOTE (2)))
      (T (CNEXP A1 TYP)
	 (COND
	   [(NCONP A2)
	     (SETQ A2 (QUOPP A2))
	     (COND
	       ([AND (EQ TYP (QUOTE FIXT))
		     (IMMP (SETQ A2 (FIX A2]
		 (SETQ OP OPI)
		 (CONS A2))
	       (T [COND
		    ((EQ TYP (QUOTE FLOATT))
		      (SETQ A2 (FLOAT A2]
		  (LIST (QUOTE =)
			A2]
	   (T (CNEXP2 A2 TYP)
	      (QUOTE (2])

(CGTLS
  [LAMBDA (A1 A2 TYP OP OPI)                    (* I AND F -
						GREATER AND LESS)
    (SETQ A2 (CNUMOP2 A1 A2 TYP))
    (PRED2 (CAR OP)
	   (CDR OP)
	   (APPEND (QUOTE (1 ,))
		   A2])

(CNUMOP
  [LAMBDA (A1 A2 TYP OP OPI)                    (* I AND F -
						QUOTIENT REMAINDER 
						DIFFERENCE, ETC)
    (SETQ A2 (CNUMOP2 A1 A2 TYP))
    (STORIN (CONS OP (APPEND (QUOTE (1 ,))
			     A2])

(CLSH
  [LAMBDA (N M OP)                              (* dcl: 20 Jul 81 11:18)
    (CNEXP N (QUOTE FIXT))
    (STORIN (NCONC (LIST OP 1 (QUOTE ,))
		   (COND
		     [(NCONP M)
		       (LIST (FIX (QUOPP M]
		     (T (CNEXP2 M (QUOTE FIXT))
			(QUOTE (0 (2])

(CCLOSER
  [LAMBDA (A V)                                 (* dcl: 20 Jul 81 11:19)
    (CNEXP A (QUOTE FIXT))
    [COND
      ((NCONP V)
	(STORIN (QUOTE (MOV21)))
	(CVAG (QUOPP V)))
      (T (STORIN (QUOTE (PUSHP)))
	 (PSTEP)
	 (CVAG V)
	 (STORIN (QUOTE (POP PP , 2)))
	 (SETQ SP (SUB1 SP]
    (STORIN (QUOTE (MOVEM 1 , 0 (2])

(CINF
  [LAMBDA (F L)                                 (* dcl: 14 Aug 81 16:48)
                                                (* COMPILE INTEGER 
						NUMBER FUNCTIONS, F IS 
						NAME, L IS ARG LIST)
    [SELECTQ
      F
      [FIX (COND
	     ((AND VCF (NULL NCF))
	       (COMP (CAR L)
		     T NIL NIL (QUOTE FIXP)))
	     (T (CNEXP (CAR L)
		       (QUOTE FIXT]
      (LOC (CEXP (CAR L)))
      [OPENR (CNEXP (CAR L)
		    (QUOTE FIXT))
	     (STORIN (QUOTE (MOVE 1 , 0 (1]
      (CLOSER (CCLOSER (CAR L)
		       (CADR L)))
      (COND
	((EVERY L (FUNCTION NCONEXP))
	  (CNEXP (APPLY F (MAPCAR L (FUNCTION NCONEXPEVAL)))
		 (QUOTE FIXT)))
	(T (SELECTQ F
		    (IPLUS (CNFNS L (QUOTE FIXT)
				  (QUOTE ADD)
				  (QUOTE ADDM)
				  (QUOTE ADDI)
				  0))
		    (ITIMES (CNFNS L (QUOTE FIXT)
				   (QUOTE IMUL)
				   (QUOTE IMULM)
				   (QUOTE IMULI)
				   1))
		    (LOGOR (CNFNS L (QUOTE FIXT)
				  (QUOTE IOR)
				  (QUOTE IORM)
				  (QUOTE IORI)
				  0))
		    (LOGAND (CNFNS L (QUOTE FIXT)
				   (QUOTE AND)
				   (QUOTE ANDM)
				   (QUOTE ANDI)
				   -1))
		    (LOGXOR (CNFNS L (QUOTE FIXT)
				   (QUOTE XOR)
				   (QUOTE XORM)
				   (QUOTE XORI)
				   0))
		    (LSH (CLSH (CAR L)
			       (CADR L)
			       (QUOTE ASH)))
		    (RSH (CLSH (CAR L)
			       [COND
				 [(NCONP (CADR L))
				   (IMINUS (QUOPP (CADR L]
				 (T (LIST (QUOTE IMINUS)
					  (CADR L]
			       (QUOTE ASH)))
		    (LLSH (CLSH (CAR L)
				(CADR L)
				(QUOTE LSH)))
		    (LRSH (CLSH (CAR L)
				[COND
				  [(NCONP (CADR L))
				    (IMINUS (QUOPP (CADR L]
				  (T (LIST (QUOTE IMINUS)
					   (CADR L]
				(QUOTE LSH)))
		    [IMINUS (CNEXP (CAR L)
				   (QUOTE FIXT))
			    (STORIN (QUOTE (MOVN 1 , 1]
		    (IDIFFERENCE (CNUMOP (CAR L)
					 (CADR L)
					 (QUOTE FIXT)
					 (QUOTE SUB)
					 (QUOTE SUBI)))
		    (IQUOTIENT (CNUMOP (CAR L)
				       (CADR L)
				       (QUOTE FIXT)
				       (QUOTE IDIV)
				       (QUOTE IDIVI)))
		    [IREMAINDER (CNUMOP (CAR L)
					(CADR L)
					(QUOTE FIXT)
					(QUOTE IDIV)
					(QUOTE IDIVI))
				(STORIN (QUOTE (MOVE 1 , 2]
		    NIL]
    (NRESP (QUOTE FIXT])

(CFNF
  [LAMBDA (F L)                                 (* lmm "26-MAY-82 17:06"
)                                               (* COMPILE FLOATING 
						NUMBER FUNCTIONS)
    [SELECTQ F
	     [FLOAT (COND
		      ((AND VCF (NULL NCF))
			(COMP (CAR L)
			      T NIL NIL (QUOTE FLOATP)))
		      (T (CNEXP (CAR L)
				(QUOTE FLOATT]
	     (FLOC (CEXP (CAR L)))
	     (COND
	       ((EVERY L (FUNCTION NCONEXP))
		 (CNEXP (APPLY F (MAPCAR L (FUNCTION NCONEXPEVAL)))
			(QUOTE FLOATT)))
	       (T (SELECTQ F
			   (FPLUS (CNFNS L (QUOTE FLOATT)
					 (QUOTE FADR)
					 (QUOTE FADRM)
					 NIL 0.0))
			   (FTIMES (CNFNS L (QUOTE FLOATT)
					  (QUOTE FMPR)
					  (QUOTE FMPRM)
					  NIL 1.0))
			   [FMINUS (CNEXP (CAR L)
					  (QUOTE FLOATT))
				   (STORIN (QUOTE (MOVN 1 , 1]
			   (FDIFFERENCE (CNUMOP (CAR L)
						(CADR L)
						(QUOTE FLOATT)
						(QUOTE FSBR)))
			   (FQUOTIENT (CNUMOP (CAR L)
					      (CADR L)
					      (QUOTE FLOATT)
					      (QUOTE FDVR)))
			   NIL]
    (NRESP (QUOTE FLOATT])

(NCONEXP
  [LAMBDA (A)                                   (* dcl: 14 Aug 81 16:48)
                                                (* Checks that the 
						argument to a numeric fn
						is a constant 
						expression.)
    (OR (NCONP A)
	(AND (SELECTQ (GETPROP (CAR (LISTP A))
			       (QUOTE CTYPE))
		      ((INF FNF)
			T)
		      NIL)
	     (EVERY (CDR A)
		    (FUNCTION NCONEXP])

(NCONEXPEVAL
  [LAMBDA (A)                                   (* dcl: 14 Aug 81 16:48)
                                                (* Evaluate a constant 
						arithmetic expression.)
    (COND
      ((NCONP A)
	(QUOPP A))
      (T (APPLY (CAR A)
		(MAPCAR (CDR A)
			(FUNCTION NCONEXPEVAL])

(CASSEM
  [LAMBDA (L)                                   (* edited: 
						" 8-Jun-79 17:32")
    (COND
      ((EQ TAGS (QUOTE EMPTY))
	(SETQ UDFTGS NIL)))
    (PROG (UDFTGS)
          [STORIN
	    (CONS
	      (QUOTE ASSEM)
	      (COND
		[(CAR L)
		  (EVAL
		    (LIST
		      (QUOTE PROG)
		      (APPEND (CAR L)
			      (QUOTE ((SSP SP)
				       (SNN NN)
				       TAGS DFTG CODE)))
		      (QUOTE (PROGN (ASSEM1 (CDR L))
				    (RETURN (CONS (LIST (QUOTE SETU)
							(PROGUDT))
						  (DREVERSE CODE]
		(T (PROG ((SSP SP)
			  (SNN NN)
			  TAGS DFTG CODE)
		         (ASSEM1 (CDR L))
		         (RETURN (CONS (LIST (QUOTE SETU)
					     (PROGUDT))
				       (DREVERSE CODE]
          (SETQ L UDFTGS))
    (SETQ UDFTGS (NCONC L UDFTGS))
    (COND
      ((EQ TAGS (QUOTE EMPTY))
	(PROGCKT])

(ASSEM1
  [LAMBDA (L)                                   (* dcl: 2 Jan 79 11:09)
    (PROG (CA P)
      A   (COND
	    ((NULL L)
	      (RETURN)))
          [COND
	    [(ATOM (SETQ CA (CAR L)))
	      (STORETAG CA)
	      (OR (FMEMB CA TAGS)
		  (SETQ TAGS (CONS CA TAGS)))
	      (COND
		[(FMEMB CA DFTG)
		  (COMPEM (CONS CA (QUOTE (- MULTIPLE DEFINED TAG, 
					     ASSEMBLE]
		(T (SETQ DFTG (CONS CA DFTG]
	    ((NUMBERP (CAR CA))
	      (STORIN CA))
	    [(SETQ P (GETPROP (CAR CA)
			      (QUOTE OPD)))
	      (COND
		((NUMBERP P)
		  [COND
		    ([AND [SETQ P (COND
			      ((EQ (CADDR CA)
				   (QUOTE ,))
				(CDDDR CA))
			      (T (CDR CA]
			  (SETQ P (SELECTQ (CAR P)
					   ((@ =)
					     (CADR P))
					   (CAR P)))
			  (LITATOM P)
			  (SELECTQ P
				   ((' *)
				     NIL)
				   T)
			  (NULL (GETPROP P (QUOTE COREVAL]
		      (OR (FMEMB P TAGS)
			  (SETQ TAGS (CONS P TAGS]
		  (STORIN CA))
		(T (STORIN (CONS (CAR CA)
				 (MAPCAR (CDR CA)
					 (FUNCTION EVAL]
	    [(SETQ P (GETPROP (CAR CA)
			      (QUOTE AMAC)))
	      (ASSEM1 (COND
			((SELECTQ (CAR P)
				  ([LAMBDA NLAMBDA]
				    T)
				  NIL)
			  (APPLY P (CDR CA)))
			(T (SUBPAIR (CAR P)
				    (CDR CA)
				    (CDR P]
	    (T (SELECTQ (CAR CA)
			(FASTCALL (STORIN CA))
			(CQ (MAPC (CDR CA)
				  (FUNCTION CEXP)))
			(CQ2 (MAPC (CDR CA)
				   (FUNCTION CEXP2)))
			[C (MAPC (CDR CA)
				 (FUNCTION (LAMBDA (ASSEMX)
				     (CEXP (EVAL ASSEMX]
			(VAR (PROG (A B)
			           [SETQ B (CDR (SETQ A
						  (COPY (CADR CA]
			           [COND
				     ((AND (CDR B)
					   (EQ (CADR B)
					       (QUOTE ,)))
				       (SETQ B (CDDR B]
			           (RPLACA B (LIST (VARCOMP (CAR B))
						   (CAR B)
						   SP))
			           (STORIN A)))
			(E (MAPC (CDR CA)
				 (FUNCTION EVAL)))
			(SETQ (VARCOMP (CADR CA))
			      (STORIN (LIST (QUOTE STV)
					    (CADR CA)
					    SP)))
			(* NIL)
			(PROGN [COMPEM (CONS CA
					     (QUOTE (OPCODE? - ASSEMBLE]
			       (STORIN CA]
          (SETQ L (CDR L))
          (GO A])

(CMAP
  [LAMBDA (X LPART PROGSTUFF LL)

          (* COMPILE MAP FUNCTION, X IS CDR OF MAP FORM, LPART
	  IS THE LIST OF ARGS THAT FN1 IS DONE TO ..
	  EITHER (MACROX) OR ((CAR MACROX)), PROGSTUFF IS BODY
	  OF RESULTING PROG WHERE MACROX IS BOUND TO THE LIST,
	  MAPF IS DUMMY FOR PROPER FORM TO DO FN1 TO LPART AND
	  MAPF2 IS DUMMY FOR FORM TO DO FN2 OR CDR TO LIST , 
	  LL IS LIST OF EXTRA DUMMY ARGS NEEDED IN PROG 
	  (E. G. MACROY ETC.))


    (PROG (Q)
          (RETURN
	    (SUBPAIR
	      (QUOTE (MAPX MAPF MAPF2 B))
	      (LIST
		(CAR X)
		[COND
		  ((SETQ Q (CLAMFNP (CADR X)))
		    (CONS Q LPART))
		  (T (SETQ LL (CONS (LIST (QUOTE MACROF)
					  (CADR X))
				    LL))
		     (CONS (AORBLK* (CADR X))
			   (CONS (QUOTE MACROF)
				 LPART]
		[COND
		  [(CDDR X)
		    (COND
		      [(SETQ Q (CLAMFNP (CADDR X)))
			(CONS Q (QUOTE (MACROX]
		      (T (SETQ LL
			   (CONS [LIST (QUOTE MACROF2)
				       (LIST (QUOTE OR)
					     (CADDR X)
					     (QUOTE (QUOTE CDR]
				 LL))
			 (CONS (AORBLK* (CADDR X))
			       (QUOTE (MACROF2 MACROX]
		  (T (QUOTE (CDR MACROX]
		LL)
	      (CONS (QUOTE PROG)
		    (CONS (QUOTE ((MACROX MAPX) . B))
			  PROGSTUFF])

(CLAMFNP
  [LAMBDA (Q)
    (AND (SETQ Q (CFNP Q))
	 [OR (FMEMB Q LAMS)
	     (NULL (OR (FMEMB Q NLAMA)
		       (FMEMB Q NLAML)
		       (SELECTQ (ARGTYPE Q)
				((1 3)
				  T)
				NIL]
	 Q])

(AORBLK*
  [LAMBDA (Q)
    (COND
      ((AND BLKFLG (SETQ Q (CFNP Q))
	    (BLKFNP Q))
	(OR (FMEMB Q ENTRIES)
	    (FMEMB Q BLKAPPLYFNS)
	    (SETQ BLKAPPLYFNS (CONS Q BLKAPPLYFNS)))
	(QUOTE BLKAPPLY*))
      (T (QUOTE APPLY*])
)

(PUTPROPS CAR CROPS (A))

(PUTPROPS CDR CROPS (D))

(PUTPROPS CAAR CROPS (A A))

(PUTPROPS CADR CROPS (D A))

(PUTPROPS CDAR CROPS (A D))

(PUTPROPS CDDR CROPS (D D))

(PUTPROPS CAAAR CROPS (A A A))

(PUTPROPS CAADR CROPS (D A A))

(PUTPROPS CADAR CROPS (A D A))

(PUTPROPS CADDR CROPS (D D A))

(PUTPROPS CDAAR CROPS (A A D))

(PUTPROPS CDADR CROPS (D A D))

(PUTPROPS CDDAR CROPS (A D D))

(PUTPROPS CDDDR CROPS (D D D))

(PUTPROPS CAAAAR CROPS (A A A A))

(PUTPROPS CAAADR CROPS (D A A A))

(PUTPROPS CAADAR CROPS (A D A A))

(PUTPROPS CAADDR CROPS (D D A A))

(PUTPROPS CADAAR CROPS (A A D A))

(PUTPROPS CADADR CROPS (D A D A))

(PUTPROPS CADDAR CROPS (A D D A))

(PUTPROPS CADDDR CROPS (D D D A))

(PUTPROPS CDAAAR CROPS (A A A D))

(PUTPROPS CDAADR CROPS (D A A D))

(PUTPROPS CDADAR CROPS (A D A D))

(PUTPROPS CDADDR CROPS (D D A D))

(PUTPROPS CDDAAR CROPS (A A D D))

(PUTPROPS CDDADR CROPS (D A D D))

(PUTPROPS CDDDAR CROPS (A D D D))

(PUTPROPS CDDDDR CROPS (D D D D))

(PUTPROPS CAR CTYPE CR)

(PUTPROPS CDR CTYPE CR)

(PUTPROPS CAAR CTYPE CR)

(PUTPROPS CADR CTYPE CR)

(PUTPROPS CDAR CTYPE CR)

(PUTPROPS CDDR CTYPE CR)

(PUTPROPS CAAAR CTYPE CR)

(PUTPROPS CAADR CTYPE CR)

(PUTPROPS CADAR CTYPE CR)

(PUTPROPS CADDR CTYPE CR)

(PUTPROPS CDAAR CTYPE CR)

(PUTPROPS CDADR CTYPE CR)

(PUTPROPS CDDAR CTYPE CR)

(PUTPROPS CDDDR CTYPE CR)

(PUTPROPS CAAAAR CTYPE CR)

(PUTPROPS CAAADR CTYPE CR)

(PUTPROPS CAADAR CTYPE CR)

(PUTPROPS CAADDR CTYPE CR)

(PUTPROPS CADAAR CTYPE CR)

(PUTPROPS CADADR CTYPE CR)

(PUTPROPS CADDAR CTYPE CR)

(PUTPROPS CADDDR CTYPE CR)

(PUTPROPS CDAAAR CTYPE CR)

(PUTPROPS CDAADR CTYPE CR)

(PUTPROPS CDADAR CTYPE CR)

(PUTPROPS CDADDR CTYPE CR)

(PUTPROPS CDDAAR CTYPE CR)

(PUTPROPS CDDADR CTYPE CR)

(PUTPROPS CDDDAR CTYPE CR)

(PUTPROPS CDDDDR CTYPE CR)

(PUTPROPS COND CTYPE PRED)

(PUTPROPS AND CTYPE PRED)

(PUTPROPS OR CTYPE PRED)

(PUTPROPS EQ CTYPE PRED)

(PUTPROPS NULL CTYPE PRED)

(PUTPROPS NOT CTYPE PRED)

(PUTPROPS ATOM CTYPE PRED)

(PUTPROPS LITATOM CTYPE PRED)

(PUTPROPS SELECTQ CTYPE PRED)

(PUTPROPS PROG CTYPE PRED)

(PUTPROPS GO CTYPE PRED)

(PUTPROPS RETURN CTYPE PRED)

(PUTPROPS PROGN CTYPE PRED)

(PUTPROPS PROG2 CTYPE PRED)

(PUTPROPS PROG1 CTYPE PRED)

(PUTPROPS NUMBERP CTYPE PRED)

(PUTPROPS MINUSP CTYPE PRED)

(PUTPROPS FIXP CTYPE PRED)

(PUTPROPS LISTP CTYPE PRED)

(PUTPROPS ARRAYP CTYPE PRED)

(PUTPROPS SMALLP CTYPE PRED)

(PUTPROPS FLOATP CTYPE PRED)

(PUTPROPS STRINGP CTYPE PRED)

(PUTPROPS STACKP CTYPE PRED)

(PUTPROPS STREAMP CTYPE PRED)

(PUTPROPS IGREATERP CTYPE PRED)

(PUTPROPS ILESSP CTYPE PRED)

(PUTPROPS IEQP CTYPE PRED)

(PUTPROPS FGTP CTYPE PRED)

(PUTPROPS IPLUS CTYPE INF)

(PUTPROPS ITIMES CTYPE INF)

(PUTPROPS LOGOR CTYPE INF)

(PUTPROPS LOGXOR CTYPE INF)

(PUTPROPS LOGAND CTYPE INF)

(PUTPROPS LSH CTYPE INF)

(PUTPROPS RSH CTYPE INF)

(PUTPROPS LLSH CTYPE INF)

(PUTPROPS LRSH CTYPE INF)

(PUTPROPS IMINUS CTYPE INF)

(PUTPROPS IDIFFERENCE CTYPE INF)

(PUTPROPS IQUOTIENT CTYPE INF)

(PUTPROPS FIX CTYPE INF)

(PUTPROPS IREMAINDER CTYPE INF)

(PUTPROPS LOC CTYPE INF)

(PUTPROPS OPENR CTYPE INF)

(PUTPROPS CLOSER CTYPE INF)

(PUTPROPS FPLUS CTYPE FNF)

(PUTPROPS FTIMES CTYPE FNF)

(PUTPROPS FDIFFERENCE CTYPE FNF)

(PUTPROPS FQUOTIENT CTYPE FNF)

(PUTPROPS FMINUS CTYPE FNF)

(PUTPROPS FLOAT CTYPE FNF)

(PUTPROPS FLOC CTYPE FNF)

(PUTPROPS PUSHN AMAC [NLAMBDA ADR (STORIN (QUOTE (PUSH CP , = 4456449)))
			      [STORIN (APPEND (QUOTE (PUSH CP ,))
					      (OR ADR (CONS 1]
			      (SETQ NN (CONS [COND ((NULL NN)
						    1)
						   (T (IPLUS 2 (CAR NN]
					     NN))
			      NIL])

(PUTPROPS POPN AMAC [NLAMBDA ADR [COND (NN [STORIN (APPEND (QUOTE (POP CP ,))
							   (OR ADR (CONS 1]
					   (STORIN (QUOTE (SUB CP , BHC 1)))
					   (SETQ NN (CDR NN)))
				       (T (COMPEM (QUOTE (TOO MANY POPNS]
			     NIL])

(PUTPROPS NREF AMAC [NLAMBDA (I F)
			     [SETQ F (LAST (SETQ I (COPY I]
			     (RPLACA F (IDIFFERENCE (OR [CAR (NTH NN (ADD1 (IMINUS (CAR F]
							(PROGN (COMPEM (QUOTE (BAD NREF)))
							       (CAR NN)))
						    (CAR NN)))
			     [RPLACD F (QUOTE ((CP]
			     (STORIN I)
			     NIL])

(PUTPROPS POPNN AMAC [NLAMBDA (N)
			      [SETQ NN (NTH NN (PROG1 N (SETQ N (CAR NN]
			      [COND [[AND (CDR NN)
					  (EQ (CADR NN)
					      (SUB1 (CAR NN]
				     (COMPEM (QUOTE (ILLEGAL POPNN]
				    (T (SETQ N (IPLUS N (IMINUS (CAR NN))
						      2))
				       (STORIN (APPEND (QUOTE (SUB CP , BHC))
						       (CONS N)))
				       (SETQ NN (CDR NN]
			      NIL])

(PUTPROPS PUSHNN AMAC [NLAMBDA L (PROG ([M (COND ((NULL NN)
						  1)
						 (T (IPLUS (CAR NN)
							   2]
					N)
				       (COND ((NULL L)
					      (RETURN)))
				       (SETQ N M)
				       [SETQ L (MAPCAR L (FUNCTION (LAMBDA
								     (A)
								     (SETQ NN (CONS M NN))
								     (SETQ M (ADD1 M))
								     (APPEND (QUOTE (PUSH CP ,))
									     A]
				       (RETURN (CONS (LIST (QUOTE PUSH)
							   (QUOTE CP)
							   (QUOTE ,)
							   (QUOTE =)
							   (IPLUS 4456448 M (IMINUS N)))
						     L])
(DECLARE: DOEVAL@COMPILE DONTCOPY 

(RPAQQ COMPMACROS (PSTEP PSTEPN CEXP CSTA STORIN GENTAG))

(PUTPROPS PSTEP MACRO (NIL (SETQ SP (ADD1 SP))))

(PUTPROPS PSTEPN MACRO ((N)
			(SETQ SP (IPLUS SP N))))

(PUTPROPS CEXP MACRO ((E)
		      (COMP E T)))

(PUTPROPS CSTA MACRO ((E)
		      (COMP E)))

(PUTPROPS STORIN MACRO ((X)
			(SETQ CODE (CONS X CODE))))

(PUTPROPS GENTAG MACRO (NIL (PROGN (SETQ GENUSES (CONS (CONS (SETQ TAGNUM (ADD1 TAGNUM)))
						       GENUSES))
				   TAGNUM)))
)

(PUTPROPS GEN MAKE GBOX)

(PUTPROPS FIXT MAKE MKN)

(PUTPROPS FLOATT MAKE MKFN)

(PUTPROPS GEN UBOX GUNBOX)

(PUTPROPS FIXT UBOX IUNBOX)

(PUTPROPS FLOATT UBOX FUNBOX)

(PUTPROPS GEN CONVERT NIL)

(PUTPROPS FIXT CONVERT ((FLOATT . FXFLT)))

(PUTPROPS FLOATT CONVERT ((FIXT . FLTFX)))
(MOVD? (QUOTE RPTQ)
       (QUOTE FRPTQ))

(RPAQQ COMPBLOCKS ((NIL BLKFNP (LINKFNS . T))
	(COMPBLOCK NOLINKP BLKFNP IDP CONP VAGNP QUOP QUOPP NCONP CEXP CSTA CPRD CVPRD CCEXP COMP 
		   COMPEXPANDMACRO LQE RESP RESPN LQ LDCOMP VARCOMP STORETAG RETAG USETAG STOREJ 
		   GOTOCOMP STORERET RETFUDGE CEXP2 CEXP2P C2EXP CARG CANYF CATCOMP CPROG PROGOUT 
		   STOREUC PROGUDT PROGCKT CBIND CBIND1 CRETURN CGO CPROGN CPROG1 CSETQ CFASTCALL 
		   CCONS CLIST CCRF CCRF2 CVAG CFUNC CFA CPI CSF CAPPLY* CBLKAPPLY CBLKAPPLY* CLAM 
		   CARGN CSETARG CSYNTAXP CPREX CCOND CAND COR CNULL CEQ CEQN CATOM PRED2 CNUMP 
		   CMINUSP CPREDT CSELECTQ CFSELECTQ CSYSTEMTYPESELECTQ CNEXP CNEXP2 CNFNS NRESP 
		   CPUSHN CPOPN LQN LDFIX LDNUM IMMP IMSP CNUMOP2 CGTLS CNUMOP CLSH CCLOSER CINF CFNF 
		   NCONEXP NCONEXPEVAL CASSEM ASSEM1 CCHECKVAR FIXNCF
		   (ENTRIES COMP CEXP CEXP2 C2EXP CNEXP CNEXP2 CSTA CPRD CARG VARCOMP ASSEM1 CSYNTAXP 
			    STORERET STORETAG STOREUC PROGUDT PRED2 CCHECKVAR QUOPP CONP NCONP)
		   (SPECVARS VCF PCF PIF NCF CODE SP SSP TAGS ARGS DFTG L EXP BRT BRF FRMFLG BNDLEV 
			     LOCALARGS SBNDLEV NFSSP RE PRVCF PRPCF PRPIF PRNCF PR FE OP OPI DFTG PLF 
			     PRV FN FATALERROR UDFTGS PIFSP PROGRETLABEL))
	(CMAPBLOCK CMAP CLAMFNP AORBLK* (ENTRIES CMAP))))
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
(BLOCK: NIL BLKFNP (LINKFNS . T))
(BLOCK: COMPBLOCK NOLINKP BLKFNP IDP CONP VAGNP QUOP QUOPP NCONP CEXP CSTA CPRD CVPRD CCEXP COMP 
	COMPEXPANDMACRO LQE RESP RESPN LQ LDCOMP VARCOMP STORETAG RETAG USETAG STOREJ GOTOCOMP 
	STORERET RETFUDGE CEXP2 CEXP2P C2EXP CARG CANYF CATCOMP CPROG PROGOUT STOREUC PROGUDT PROGCKT 
	CBIND CBIND1 CRETURN CGO CPROGN CPROG1 CSETQ CFASTCALL CCONS CLIST CCRF CCRF2 CVAG CFUNC CFA 
	CPI CSF CAPPLY* CBLKAPPLY CBLKAPPLY* CLAM CARGN CSETARG CSYNTAXP CPREX CCOND CAND COR CNULL 
	CEQ CEQN CATOM PRED2 CNUMP CMINUSP CPREDT CSELECTQ CFSELECTQ CSYSTEMTYPESELECTQ CNEXP CNEXP2 
	CNFNS NRESP CPUSHN CPOPN LQN LDFIX LDNUM IMMP IMSP CNUMOP2 CGTLS CNUMOP CLSH CCLOSER CINF 
	CFNF NCONEXP NCONEXPEVAL CASSEM ASSEM1 CCHECKVAR FIXNCF
	(ENTRIES COMP CEXP CEXP2 C2EXP CNEXP CNEXP2 CSTA CPRD CARG VARCOMP ASSEM1 CSYNTAXP STORERET 
		 STORETAG STOREUC PROGUDT PRED2 CCHECKVAR QUOPP CONP NCONP)
	(SPECVARS VCF PCF PIF NCF CODE SP SSP TAGS ARGS DFTG L EXP BRT BRF FRMFLG BNDLEV LOCALARGS 
		  SBNDLEV NFSSP RE PRVCF PRPCF PRPIF PRNCF PR FE OP OPI DFTG PLF PRV FN FATALERROR 
		  UDFTGS PIFSP PROGRETLABEL))
(BLOCK: CMAPBLOCK CMAP CLAMFNP AORBLK* (ENTRIES CMAP))
]

(RPAQQ NLAMA NIL)

(RPAQQ NLAML NIL)

(RPAQQ LAMS NIL)

(RPAQQ ALAMS NIL)

(RPAQQ USERMACROFN NIL)

(RPAQQ COMPILETYPELST NIL)

(RPAQQ SPECVARS T)

(RPAQQ LOCALVARS NIL)

(RPAQQ COUTFILE T)

(RPAQQ COMPILERMACROPROPS (10MACRO MACRO))

(RPAQQ SYS NIL)

(RPAQQ SYSFNS NIL)

(RPAQQ LAPFLG NIL)

(RPAQQ SVFLG T)

(RPAQQ STRF T)

(RPAQQ LSTFIL NIL)

(RPAQQ LCFIL NIL)

(ADDTOVAR COMPILEUSERFN )

(ADDTOVAR COMPILEMODELST (PDP-10 (BYTECOMPFLG)
				 (COMPILE.EXT . COM)
				 (COMPILERMACROPROPS 10MACRO MACRO)
				 (SHOULDCOMPILEMACROATOMS ASSEMBLE LOC)
				 (UNSAFEMACROATOMS C2EXP STORIN CEXP COMP)))
(COMPILEMODE (QUOTE PDP-10))
(DECLARE: DONTCOPY (PUTPROPS COMP COPYRIGHT (NONE)))
(DECLARE: DONTCOPY
  (FILEMAP (NIL (2719 81206 (BLOCKCOMPILE2 2731 . 5934) (FIXNCF 5938 . 6141) (NOLINKP 6145 . 6615) (
BLKFNP 6619 . 7305) (TESTNM 7309 . 7566) (COMPILE2 7570 . 8143) (COMPILE2A 8147 . 10474) (IDP 10478 . 
10634) (QUOP 10638 . 10952) (CONP 10956 . 11389) (VAGNP 11393 . 11548) (QUOPP 11552 . 12136) (NCONP 
12140 . 12262) (CEXP 12266 . 12380) (CSTA 12384 . 12528) (CPRD 12532 . 12679) (CVPRD 12683 . 12810) (
CCEXP 12814 . 12944) (COMP 12948 . 14372) (COMPEXPANDMACRO 14376 . 14743) (LQE 14747 . 15255) (RESP 
15259 . 15509) (RESPN 15513 . 15858) (LQ 15862 . 16322) (LDCOMP 16326 . 16817) (VARCOMP 16821 . 16997)
 (GENTAG 17001 . 17111) (STORETAG 17115 . 18393) (RETAG 18397 . 18680) (USETAG 18684 . 18922) (STORIN 
18926 . 18981) (STOREJ 18985 . 19196) (GOTOCOMP 19200 . 20274) (STORERET 20278 . 22024) (RETFUDGE 
22028 . 23684) (PSTEP 23688 . 23734) (PSTEPN 23738 . 23788) (CEXP2 23792 . 24499) (CEXP2P 24503 . 
24828) (C2EXP 24832 . 25402) (CARG 25406 . 26109) (CANYF 26113 . 28759) (CATCOMP 28763 . 30906) (CPROG
 30910 . 33277) (PROGOUT 33281 . 33922) (STOREUC 33926 . 34439) (PROGUDT 34443 . 35689) (PROGCKT 35693
 . 35992) (CBIND 35996 . 37308) (CBIND1 37312 . 37895) (CCHECKVAR 37899 . 38317) (CRETURN 38321 . 
39637) (CGO 39641 . 40177) (CPROGN 40181 . 40361) (CPROG1 40365 . 40757) (CSETQ 40761 . 41255) (
CFASTCALL 41259 . 41412) (CCONS 41416 . 41748) (CLIST 41752 . 42510) (CCRF 42514 . 43052) (CCRF2 43056
 . 43570) (LOCALP 43574 . 43859) (REFRAME 43863 . 44753) (CVAG 44757 . 44976) (CFUNC 44980 . 45137) (
CFA 45141 . 47111) (CPI 47115 . 48794) (CSF 48798 . 49075) (CAPPLY* 49079 . 49266) (CBLKAPPLY 49270 . 
49732) (CBLKAPPLY* 49736 . 49972) (CLAM 49976 . 50455) (CFNP 50459 . 50598) (CARGN 50602 . 51000) (
CSETARG 51004 . 51531) (CSYNTAXP 51535 . 54618) (CPREX 54622 . 56569) (CCOND 56573 . 58417) (CAND 
58421 . 59078) (COR 59082 . 59787) (CNULL 59791 . 60135) (CEQ 60139 . 60731) (CEQN 60735 . 61252) (
CATOM 61256 . 61334) (PRED2 61338 . 61990) (CNUMP 61994 . 62416) (CMINUSP 62420 . 62816) (CPREDT 62820
 . 63579) (CSELECTQ 63583 . 65078) (CFSELECTQ 65082 . 65416) (CSYSTEMTYPESELECTQ 65420 . 66461) (CNEXP
 66465 . 66626) (CNEXP2 66630 . 66976) (CNFNS 66980 . 68417) (NRESP 68421 . 69341) (CPUSHN 69345 . 
69513) (CPOPN 69517 . 69606) (LQN 69610 . 70023) (LDFIX 70027 . 70307) (LDNUM 70311 . 70459) (IMMP 
70463 . 70616) (IMSP 70620 . 70775) (CNUMOP2 70779 . 71547) (CGTLS 71551 . 71752) (CNUMOP 71756 . 
71969) (CLSH 71973 . 72238) (CCLOSER 72242 . 72579) (CINF 72583 . 74797) (CFNF 74801 . 75855) (NCONEXP
 75859 . 76260) (NCONEXPEVAL 76264 . 76568) (CASSEM 76572 . 77408) (ASSEM1 77412 . 79530) (CMAP 79534 
. 80757) (CLAMFNP 80761 . 80963) (AORBLK* 80967 . 81203)))))
STOP
 