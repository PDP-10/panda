(FILECREATED "27-MAR-84 16:25:20" <NEWLISP>LAP.;1   68265

      changes to:  (VARS LAPFNS)

      previous date: "30-Nov-81 15:20:50" <LISP>LAP.;145)


(* Copyright (c) 1984 by Xerox Corporation)

(PRETTYCOMPRINT LAPCOMS)

(RPAQQ LAPCOMS [(FNS * LAPFNS)
	(PROP ACS STV LDV LDV2 CAR1 CDR1 CAR2 CDR2 CAR21 CDR21 RPA RPD STN STE J RET JR MOV21 BN BNN 
	      SKE SKNE SKEQ SKNEQ SKEI SKNEI SKEN SKNEN SKES SKNES SKA SKNA SKNM SKNNM SKI SKNI JL 
	      JGE LPUSHN PUSHP PUSHQ PUSHNV PUSHV)
	(PROP OPD BNDB BNDLA BND BND2 ENTERF LQ LQ2 LQI LQ2I LDI LDI2 LDV STV LDV2 LDN LDN2 MOV21 
	      FCLL CAR1 CDR1 CAR2 CDR2 CARV CDRV CAR2V CDR2V CAR21 CDR21 RPA RPD ACLL CLL CLL2 CLLA 
	      LCLL ALCLL LCLL2 LE BA* BN BNN LQTS LQNS SKE SKNE SKEQ SKNEQ SKEI SKNEI SKEN SKNEN SKES 
	      SKNES SKA SKNA SKNM SKNNM SKI SKNI STE STN LDTY J JR JL JGE RET LPUSHN LPOPN PUSHP 
	      PUSHQ PUSHNV POPP POPP2 UNCOV XWD NLGO FLOATP FIXP)
	(PROP OPD * OPCODES)
	(PROP MACRO LAPPOP LAPNREF LAPNSET LAPRBIT LAPPUSH0 NSUBPAIR)
	(BLOCKS * LAPBLOCKS)
	[P (PUTD (QUOTE NSUBPAIR)
		 (GETD (QUOTE SUBPAIR]
	(DECLARE: DOEVAL@COMPILE DONTCOPY (PROP MACRO OBOUT OSFBSZ IDP))
	(DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
		  (ADDVARS (NLAMA BYTES)
			   (NLAML MKLCL PRET FREBND TREF GREF FREF ARGN ADDBAS VREF SETU)
			   (DONTCOMPILEFNS LAPPUSH0 LAPPOP LAPNREF LAPRBIT LAPNSET NOUT OBOUT)))
	(DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS
		  (ADDVARS (NLAMA BYTES)
			   (NLAML VREF MKLCL DEFUNRET TREF ARGN ADDBAS SETU)
			   (LAMA])

(RPAQQ LAPFNS (LAP LAPLOCALP LAPMAP LAP1 LAPSUB LAPOUT LAPXR LAPAC LAPADR LAPNLIT LAPLIT NMEMB 
		   LAPUTGU LAPUTGG LAPUTG SETU LAPDFT LAPDFT1 LAPCKT LAPPW LAPPT LAPP1 PUSHV PUSHVP 
		   VCLL VLCLL VCALL VREF LAPSPECREF ADDBAS ARGN ASSOCN GB TREF BYTES BIND BIND1 BIND2 
		   BLKBIND UNBIND DEFUNRET RETENT MKLCL FASTCALL MKENTRY LAPERROR LAPST LAPFW 
		   LAPPUSH0 LAPRBIT LAPPOP LAPNREF LAPNSET NSUBPR NOUT OBOUT))
(DEFINEQ

(LAP
  [LAMBDA (FN ARGS FREE CODE ARGTY OLDF)        (* dcl: 2 Jan 79 11:25)
    (PROG (LIT LITN LOC AST LST BACKAST IUTAGS UTAGS GTAGS LFREE NARGS 
	       VPP VVP PLITORG A (UDFTGS (CONS))
	       ETAGS JFLG TAGACS AC7 (AC1 T)
	       (AC2 T)
	       (BNDLEV 0)
	       (NLOCAL 0)
	       VCELLREFS)
          (SETQ LFREE (LENGTH FREE))
          (SETQ VPP (GETPROP (QUOTE PP)
			     (QUOTE COREVAL)))
          (SETQ VVP (GETPROP (QUOTE VP)
			     (QUOTE COREVAL)))
          [SETQ IUTAGS (SETQ UTAGS (LIST (CONS (QUOTE LITORG))
					 (CONS (QUOTE PLITORG]
          (SETQ NARGS 0)
          [SETQ AST (MAPCONC ARGS
			     (FUNCTION (LAMBDA (E)
				 (SETQ NARGS (ADD1 NARGS))
				 (COND
				   [(NEQ ARGTY 2)
				     (AND (LAPLOCALP E)
					  (LIST (CONS E NARGS]
				   [(LAPLOCALP E)
				     (LIST (CONS E (IMINUS NARGS]
				   (T (LIST (CONS (LIST E)
						  (IMINUS NARGS]
          [COND
	    (BLKFLG (SETQ GTAGS (MAPCAR CALLTAGS
					(FUNCTION (LAMBDA (E)
					    (CONS (CADR E]
          [SETQ LIT
	    (MAPCAR ARGS (FUNCTION (LAMBDA (E)
			(COND
			  ((LAPLOCALP E)        (* TELL ENTERF TO OMIT 
						NAMES)
			    (SETQ NLOCAL (ADD1 NLOCAL))
			    (CONS E 1))
			  (T (CONS (QUOTE VARIABLE-VALUE-CELL)
				   (CONS E 0]
          [COND
	    ((NULL BLKFLG)
	      (SETQ LIT
		(NCONC LIT (MAPCAR FREE
				   (FUNCTION (LAMBDA (E)
				       (CONS (QUOTE VARIABLE-VALUE-CELL)
					     (CONS E 0]
          (SETQ CODE (CONS (LIST (QUOTE ENTERF)
				 NARGS NLOCAL ARGTY (COND
				   (BLKFLG      (* IN BLOCK FREE ARE 
						DONE BY BLKENT)
					   0)
				   (T LFREE)))
			   CODE))
          (SETQ LOC 0)                          (* IF LISTING, PRINT 
						OUTPUT OF PASS 1)
          (PRINT [SETQ A
		   (LIST FN ARGS
			 (SUBSET FREE
				 (FUNCTION (LAMBDA (X)
				     (NOT (OR (GETPROP X
						       (QUOTE GLOBALVAR)
						       )
					      (FMEMB X GLOBALVARS]
		 COUTFILE)
          (COND
	    ((AND LAPFLG (NEQ LSTFIL T))
	      (PRINT A LSTFIL)))
          (SELECTQ LAPFLG
		   ((T 1)
		     (LAPP1 CODE))
		   NIL)
          (SELECTQ LAPFLG
		   ((T 2)
		     (TERPRI LSTFIL)
		     (PRINT FN LSTFIL))
		   NIL)
          (SETQ CODE (LAPMAP CODE (CONS NIL NIL)))
          (LAPDFT (QUOTE LITORG))
          (LAPPT (QUOTE LITORG))
          [MAPC LITN (FUNCTION (LAMBDA (N)
		    (LAPPW N)
		    (SETQ LOC (ADD1 LOC))
		    (SETQ CODE (TCONC CODE N]
          (SETQ PLITORG LOC)
          (LAPDFT (QUOTE PLITORG))
          (LAPPT (QUOTE PLITORG))
          [MAPC LIT (FUNCTION (LAMBDA (N)
		    (LAPPW N)
		    (SETQ LOC (ADD1 LOC))
		    (SETQ CODE (TCONC CODE N]
          (LAPCKT)
          (COND
	    ((OR STRF LCFIL)
	      (LAPST FN (CAR CODE)
		     PLITORG LOC])

(LAPLOCALP
  (LAMBDA (V)                                   (* dcl: 8 JAN 76 13:33)
    (AND (LOCALP V)
	 (NOT (FMEMB V FREE)))))

(LAPMAP
  (LAMBDA (CODE LL SFLG)

          (* GOES THRU CODE LIST FROM PASS1 ,DONT DO MAP SO 
	  CODE CAN BE THROWN AWAY WHEN DONE)


    (PROG NIL
      A   (COND
	    ((NULL CODE)
	      (RETURN LL))
	    (T (LAP1 (CAR CODE)
		     SFLG)
	       (SETQ CODE (CDR CODE))
	       (GO A))))))

(LAP1
  [LAMBDA (CL SFLG P)                           (* dcl: 24 Nov 81 16:40)
    (COND
      ((ATOM CL)                                (* TAG)
	(COND
	  (LAPFLG (LAPPT CL)))
	(LAPDFT CL)
	(SETQ JFLG NIL))
      (T
	(SETQ JFLG NIL)
	(COND
	  ((SELECTQ (CAR CL)
		    ((PROG ASSEM
		       LAM)
		      T)
		    NIL)                        (* PROG)
	    (SETQ UDFTGS
	      (NCONC (PROG ((UDFTGS (FLAST UDFTGS))
			    (AST AST)
			    (UTAGS IUTAGS)
			    (BACKAST BACKAST)
			    (LST LST)
			    (BNDLEV BNDLEV)
			    UD ETAGS PREBFLGS REMCODE G)
		           (LAPMAP (COND
				     ((NEQ (CAR CL)
					   (QUOTE ASSEM))
				       (DREVERSE (CDR CL)))
				     (T (CDR CL)))
				   LL)
		           [COND
			     (REMCODE
			       (PROG ((UTAGS (APPEND ETAGS UTAGS)))
                                                (* JUMP AROUND THE 
						REMOTE CODE IF 
						NECESSARY)
				     [LAP1 (LIST (QUOTE J)
						 (SETQ G (GENTAG]
				     (LAPMAP REMCODE LL)
				     (LAP1 G]
		           (RETURN (LAPCKT)))
		     UDFTGS)))
	  ((EQ (CAR CL)
	       (QUOTE SUBFN))
	    (PROG ((GTAGS GTAGS)
		   LST)                         (* REBIND TAGS IN FN 
						WITHIN BLOCK)
	          (LAPMAP (CDR CL)
			  LL)))
	  ((NUMBERP (CAR CL))                   (* NUMBER)
	    (LAPOUT CL (IPLUS (CAR CL)))        (* COPY NUMBER)
	    )
	  [[NUMBERP (SETQ P (GETPROP (CAR CL)
				     (QUOTE OPD]
                                                (* NUMERIC OPD)
	    (LAPOUT CL (LLSH P 18))
	    (COND
	      ((NULL SFLG)                      (* UNLESS EXPANDING A 
						SUBSTITUTION MACRO WE 
						DUNNO WHATS HAPPENING)
		(SETQ AC1 (SETQ AC2 T))
		(SETQ AC7]
	  ((EQ (CAR P)
	       (QUOTE LAMBDA))                  (* FUNCTIONAL OPD)
	    (LAPMAP (APPLY P (CDR CL))
		    LL T))
	  (P                                    (* SUBSTITUTION OPD)
	     (PROG NIL
	           (SELECTQ (GETPROP (CAR CL)
				     (QUOTE ACS))
			    (NIL (GO A))
			    (NOEFF (GO B))
			    (J (LAPSUB CL P)    (* NOTE THAT WE CANT GET
						TO NEXT INSTR FROM HERE)
			       (SETQ JFLG T))
			    [LV (COND
				  ((EQ (CADR CL)
				       AC1))
				  (T (LAPSUB CL P)
				     (SETQ AC1 (CADR CL]
			    [LV2 (COND
				   ((NEQ (CADDDR CL)
					 2)
				     (GO B))
				   ((EQ (CADR CL)
					AC2))
				   [(EQ (CADR CL)
					AC1)
				     (LAP1 (QUOTE (MOV21]
				   (T (LAPSUB CL P)
				      (SETQ AC2 (CADR CL]
			    [SV (LAPSUB CL P)
				(SETQ AC1 (CADR CL))
				(COND
				  ((EQ AC2 AC1)
				    (SETQ AC2 T]
			    (C1 (LAPSUB CL P)
				(SETQ AC1 T))
			    (C2 (LAPSUB CL P)
				(SETQ AC2 T))
			    (M21 (LAPSUB CL P)
				 (SETQ AC2 AC1))
			    (GO A))
	           (RETURN)
	       A   (LAPSUB CL P)
	           (SETQ AC1 (SETQ AC2 T))
	           (SETQ AC7)
	           (RETURN)
	       B   (LAPSUB CL P)
	           (RETURN)))
	  (T (LAPMAP (BLKAPPLY (CAR CL)
			       (CDR CL))
		     LL)

          (* MOST OF THE BLKAPPLYFNS -
	  E.G. BIND AND UNBIND -
	  MAKE CURRENT AC'S INVALID. SO ACCOUNT HERE INSTEAD 
	  OF IN EACH FUNCTION)


	     (COND
	       ((NEQ (GETPROP (CAR CL)
			      (QUOTE ACS))
		     (QUOTE NOEFF))             (* Currently, pPUSHV is 
						the only blkapplyfn with
						an ACS property.)
		 (SETQ AC1 (SETQ AC2 T))
		 (SETQ AC7])

(LAPSUB
  (LAMBDA (CL P)
    (COND
      ((CAR P)
	(PROG ((A P))
	  L   (COND
		((NULL (SETQ A (CDR A)))
		  (RETURN)))
	      (LAP1 (NSUBPAIR (CAR P)
			      (CDR CL)
			      (CAR A))
		    T)
	      (GO L)))
      (T (LAPMAP (CDR P)
		 LL T)))))

(LAPOUT
  (LAMBDA (WD P)                                (* EVALUATE AND OUTPUT 
						ONE WORD, P IS THE OPD 
						VALUE)
    (PROG ((WD1 WD)
	   S LNK AF R)

          (* S IS COREVAL NAME, LNK IS LINK IN UNDEFINED 
	  SYMBOL CHAIN, AF IS T IF ADDRESS PART SEEN YET, R IS
	  T IF WORD IS RELOCATABLE)


      A   (SETQ WD (CDR WD))
      B   (COND
	    ((NULL WD)
	      (TCONC LL (COND
		       (LNK (FRPLACA LNK P))
		       (S (CONS P S))
		       (R (CONS P))
		       (T P)))
	      (SETQ LOC (ADD1 LOC))
	      (COND
		(LAPFLG (LAPPW WD1)))
	      (RETURN)))
          (COND
	    ((AND AF (LISTP (CAR WD)))
	      (LAPXR (CAAR WD)))
	    ((SELECTQ (CAR WD)
		      (@(SETN P (LOGOR P 4194304)))
		      (=(LAPNLIT (CAR (SETQ WD (CDR WD)))))
		      ('(LAPLIT (COND
				  ((LISTP (CAR (SETQ WD (CDR WD))))
				    (CONS (CAR WD)
					  0))
				  (T (CAR WD)))))
		      (COND
			((EQ (CADR WD)
			     (QUOTE ,))
			  (LAPAC (CAR WD))
			  (SETQ WD (CDDR WD))
			  (GO B))
			(T (LAPADR (CAR WD)))))))
          (GO A))))

(LAPXR
  [LAMBDA (X)                                   (* dcl: 2 Jan 79 11:26)
                                                (* PUT INDEX INTO VALUE)
    [COND
      ((LITATOM X)
	(SETQ X (GETPROP X (QUOTE COREVAL]			       |
    (COND
      [(NUMBERP X)
	(SETN P (LOGOR P (LLSH (LOGAND X 15)
			       18]
      (T (LAPERROR])

(LAPAC
  [LAMBDA (X)                                   (* dcl: 2 Jan 79 11:26)
                                                (* PUT AC INTO VALUE)
    [COND
      ((LITATOM X)
	(SETQ X (OR (GETPROP X (QUOTE COREVAL))			       |
		    (EVAL X]
    (COND
      [(NUMBERP X)
	(SETN P (LOGOR P (LLSH (LOGAND X 15)
			       23]
      (T (LAPERROR])

(LAPADR
  [LAMBDA (X)                                   (* dcl: 2 Jan 79 11:27)
                                                (* EVAL ELEMENT OF 
						ADDRESS FIELD AND ADD 
						INTO VALUE)
    (PROG NIL
          (SETQ AF T)                           (* FLAG ADDRESS SEEN)
          [COND
	    ((EQ X (QUOTE *))
	      (SETQ X LOC)
	      (SETQ R T))
	    [(IDP X)
	      (COND
		((GETPROP X (QUOTE COREVAL))			       |
		  (SETQ S X)
		  (RETURN))
		((SETQ X (LAPUTGU X)))
		(T (RETURN]
	    [(LISTP X)
	      (COND
		[(NUMBERP (SETQ X
			    (SELECTQ (CAR X)
				     ((TREF VREF MKLCL FREBND ARGN 
					    ADDBAS LAPLIT)
				       (BLKAPPLY (CAR X)
						 (CDR X)))
				     (EVAL X]
		(T (RETURN (LAPERROR]
	    ((NUMBERP X))
	    (T (RETURN (LAPERROR]
          [COND
	    [(SMALLP P)
	      (SETQ P (LOGAND 262143 (IPLUS P X]
	    (T (FRPLACA P (VAG (IPLUS P X]
          (RETURN])

(LAPNLIT
  (LAMBDA (N)                                   (* NUMERIC LITERALS CAN 
						BE RELOCATABLE OR 
						COREVALS, DENOTED BY 
						NON-ATOM IN LITN)
    (COND
      ((IDP N)
	(PROG (P S LNK AF R)
	      (SETQ P 0)
	      (LAPADR N)
	      (COND
		(LNK (SETQ N (FRPLACA LNK P)))
		(S (SETQ N (CONS P S)))
		(R (SETQ N (CONS P)))
		(T (SETQ N P))))))
    (COND
      ((NULL LITN)
	(SETQ LITN (LIST N))
	(SETQ N 0))
      (T (SETQ N (NMEMB N LITN T))))
    (LAPADR N)
    (LAPUTGU (QUOTE LITORG))
    0))

(LAPLIT
  (LAMBDA (X)
    (SETQ AF T)
    (COND
      ((NULL X)
	(SETQ S (QUOTE KNIL)))
      ((EQ X T)
	(SETQ S (QUOTE KT)))
      (T (PROG (N)
	       (COND
		 ((NULL LIT)
		   (SETQ N 0)
		   (SETQ LIT (LIST X)))
		 (T (SETQ N (NMEMB X LIT))))
	       (COND
		 ((SMALLP P)
		   (SETQ P (LOGAND 262143 (IPLUS P N))))
		 (T (FRPLACA P (VAG (IPLUS P N)))))
	       (LAPUTGU (QUOTE PLITORG))
	       (RETURN 0))))))

(NMEMB
  [LAMBDA (X L FL)                              (* dcl: 25 Apr 76 21:39)
    (PROG [N (FLTFLG (AND FL (FLOATP X]
								       |
          (SETQ N 0)
      A   (COND
	    ([COND
		[FL (AND [COND
								       |
			   (FLTFLG (FLOATP (CAR L)))
								       |
			   (T (NOT (FLOATP (CAR L]
								       |
			 (EQP X (CAR L]
								       |
		(T (EQ X (CAR L]
	      (RETURN N))
	    (T (SETQ N (ADD1 N))
	       (COND
		 ((NULL (CDR L))
		   (FRPLACD L (LIST X))
		   (RETURN N)))
	       (SETQ L (CDR L))
	       (GO A])

(LAPUTGU
  [LAMBDA (TG)                                  (* dcl: 12 Feb 77 16:28)
    (COND
      ((LAPUTG TG UTAGS))
      [(AND UD (FASSOC TG ETAGS))               (* EXTERNAL TAG ?)
	(PROG (V N REM L)
	      (SETQ V (CDR (FASSOC TG UD)))     (* V IS (DLEVEL SPDEF) 
						OR (0 DSP DNP))
	      [COND
		((LISTP (CAR V))

          (* IF USED BEFORE V IS ((GENTAG REMCODE)), SO JUST 
	  REFERENCE THE GENTAG)


		  (RETURN (LAPUTGG (CAAR V]
	      [SETQ REM (COND
		  ((ZEROP (CAR V))
		    [COND
		      ((NEQ (CADR V)
			    0)
			(SETQ REM (CONS (LIST (QUOTE UNCOV)	       |
					      (CADR V]		       |
		    (COND					       |
		      ((CADDR V)				       |
			(CONS (APPEND (QUOTE (SUB CP , BHC))	       |
				      (CDDR V))			       |
			      REM))				       |
		      (T REM)))					       |
		  (T (CONS (CONS (QUOTE NLGO)
				 (COPY V]
	      (COND
		[REM [SETQ REM
		       (CONS (GENTAG)
			     (DREVERSE (CONS (LIST (QUOTE J)
						   TG)
					     REM]
		     (FRPLACA V REM)
		     (SETQ REMCODE (NCONC REM REMCODE))
		     (RETURN (LAPUTGG (CAAR V]
		(T (RETURN (LAPUTG TG ETAGS]
      (T (SETQ UTAGS (CONS (CONS TG (SETQ LNK (CONS 0 NIL)))
			   UTAGS))
	 0])

(LAPUTGG
  (LAMBDA (TG P)                                (* dcl: 14 JAN 76 12:01)
    (COND
      ((NULL (MINUSP TG))

          (* TAGACS KEEPS TRACK OF C (AC1) WHEN A TAG IS 
	  REFERENCED. IF C (AC1) IS SAME FOR ALL REFERENCES TO
	  A TAG THEN WE KNOW THE C (AC1) WHEN WE GET TO THE 
	  TAG.)


	(COND
	  ((SETQ P (CDR (FASSOC TG TAGACS)))
	    (OR (EQ AC1 (CAR P))
		(FRPLACA P T))
	    (OR (EQ AC7 (CDR P))
		(FRPLACD P)))
	  (T (SETQ TAGACS (CONS (CONS TG (CONS AC1 AC7))
				TAGACS))))))
    (COND
      ((LAPUTG TG GTAGS))
      (T (SETQ GTAGS (CONS (CONS TG (SETQ LNK (CONS 0 NIL)))
			   GTAGS))
	 0))))

(LAPUTG
  (LAMBDA (TG L)

          (* Use tag, returns value if defined,nil otherwise- 
	  sets lnk and updates reference chain)


    (PROG (V)
          (SETQ R T)
          (COND
	    ((SETQ V (FASSOC TG L))
	      (COND
		((NUMBERP (CDR V))              (* Defined)
		  (RETURN (CDR V)))
		((AND (CDR V)
		      (LITATOM (CDR V)))        (* COREVAL)
		  (SETQ S (CDR V))
		  (SETQ R NIL)
		  (RETURN 0))
		(T                              (* On list, not yet 
						defined)
		   (FRPLACD V (SETQ LNK (CONS 0 (CDR V))))
		   (RETURN 0))))
	    (T                                  (* Not on list)
	       (RETURN))))))

(SETU
  (NLAMBDA (L)

          (* PUT OUT BY PROG. UD IS LIST OF TAGS DEFINED 
	  OUTSIDE OF PROG. ((TAG DLEV DSP) ...))


    (SETQ UD L)
    (SETQ ETAGS (MAPCAR UD (FUNCTION (LAMBDA (E)
			    (CONS (CAR E)
				  NIL)))))
    NIL))

(LAPDFT
  (LAMBDA (TG P)                                (* dcl: 14 JAN 76 12:03)
    (COND
      ((FIXP TG)                                (* GENTAG)
	(COND
	  ((MINUSP TG)                          (* BACKWARD REF'D 
						GENTAG, AC'S INVALID)
	    (SETQ AC1 (SETQ AC2 T))
	    (SETQ AC7))
	  ((SETQ P (CDR (FASSOC TG TAGACS)))

          (* FORWARD REF'D GENTAG , IF JFLG = T DONT FALL IN 
	  FROM ABOVE AND AC1 IS DETERIMINED BY THE JUMPERS TO 
	  TAG. IF JFLG NIL AND ALL JUMPERS TO TAG AND CURRENT 
	  AC1 AGREE THEN AC1 UNCHANGED)


	    (COND
	      (JFLG (SETQ AC1 (CAR P))
		    (SETQ AC7 (CDR P)))
	      (T (OR (EQ AC1 (CAR P))
		     (SETQ AC1 T))
		 (OR (EQ AC7 (CDR P))
		     (SETQ AC7))))
	    (SETQ AC2 T)))
	(COND
	  ((LAPDFT1 TG GTAGS))
	  (T (SETQ GTAGS (CONS (CONS TG LOC)
			       GTAGS)))))
      (T (COND
	   ((LAPDFT1 TG UTAGS))
	   (T (SETQ UTAGS (CONS (CONS TG LOC)
				UTAGS))))
	 (SETQ AC1 (SETQ AC2 T))
	 (SETQ AC7)))))

(LAPDFT1
  (LAMBDA (X L LLOC)                            (* DEFINE TAG)
    (PROG NIL
          (COND
	    ((NULL LLOC)
	      (SETQ LLOC LOC)))
          (COND
	    ((NULL (SETQ L (FASSOC X L)))
	      (RETURN))
	    ((NUMBERP (CDR L))
	      (RETURN (COMPEM (CONS X
				    (QUOTE (- LAP MULTIPLY DEFINED TAG))
				    )))))
          (FRPLACD (PROG1 L (SETQ L (CDR L)))
		   LLOC)
      A   (OR L (RETURN T))
          (COND
	    ((SMALLP (SETQ X (CAR L)))
	      (FRPLACA L (LOGAND (IPLUS X LLOC)
				 262143)))
	    (T (FRPLACA X (VAG (IPLUS X LLOC)))))
          (FRPLACD (PROG1 L (SETQ L (CDR L)))
		   NIL)
          (GO A))))

(LAPCKT
  [LAMBDA NIL                                   (* dcl: 21 Jun 78 22:02)
    (PROG ((L UTAGS))
          (SETQ UDFTGS (CONS ETAGS UDFTGS))
      A   (COND
	    ((OR (NULL L)
		 (EQ L IUTAGS))
	      (RPLACA UDFTGS ETAGS)
	      (PROG ((X UDFTGS))				       |
		L1  (COND					       |
		      ((CDDR X)					       |
			(SETQ X (CDR X))			       |
			(GO L1)))				       |
		    (RPLACD X NIL))				       |
	      (RETURN UDFTGS))					       |
	    ((NUMBERP (CDAR L))
	      (PROG ((X UDFTGS)
		     V)                         (* LOOK FOR TAG IN ETAGS
						OF LOWER LEVELS)
		B   (COND
		      ((NULL (SETQ X (CDR X)))
			(RETURN)))
		    [COND
		      ([AND (SETQ V (FASSOC (CAAR L)
					    (CAR X)))
			    (NULL (NUMBERP (CDR V]
			(LAPDFT1 (CAAR L)
				 (CAR X)
				 (CDAR L]
		    (GO B)))
	    (T (SETQ ETAGS (CONS (CAR L)
				 ETAGS))

          (* TAG IS USED AT THIS LEVEL, BUT IS UNDEFINED.
	  THEREFORE IT MUST HAVE SNUCK INSIDE THE PROG DUE TO 
	  TAG REPLACEMENT AND WILL BE DEFINED LATER -
	  SO ADD IT TO ETAGS)


	       ))
          (SETQ L (CDR L))
          (GO A])

(LAPPW
  (LAMBDA (W)                                   (* PRINT ONE 
						INSTRUCTION)
    (SELECTQ LAPFLG
	     ((T 2)
	       (SPACES (COND
			 ((IGREATERP (POSITION)
				     5)
			   1)
			 (T (IDIFFERENCE 6 (POSITION))))
		       LSTFIL)
	       (PRINT W LSTFIL))
	     NIL)))

(LAPPT
  (LAMBDA (A)                                   (* PRINT TAG)
    (SELECTQ LAPFLG
	     ((T 2)
	       (COND
		 ((NULL (EQ (POSITION LSTFIL)
			    0))
		   (TERPRI LSTFIL)))
	       (PRIN2 A LSTFIL))
	     NIL)))

(LAPP1
  [LAMBDA (C PD)                                (* dcl: 21 Jun 78 15:10)
                                                (* PRINT PASS 1 OUTPUT)
    (PROG (OF Z)
          (OR PD (SETQ PD 0))
          (SETQ OF (OUTPUT LSTFIL))
      A   [COND
	    ((NULL C)
	      (TERPRI)
	      (OUTPUT OF)
	      (RETURN))
	    [(NULL (SETQ Z (CAR C]
	    ((ATOM Z)
	      [COND
		((IGREATERP (POSITION)
			    PD)
		  (TERPRI)
		  (OR (EQ PD 0)
		      (SPACES PD)))
		(T (SPACES (IDIFFERENCE PD (POSITION]
	      (PRIN2 Z)
	      (SPACES 1))
	    (T [SPACES (IPLUS 6 PD (IMINUS (POSITION]
	       (SELECTQ (CAR Z)
			((PROG SUBFN
			   LAM
			   ASSEM)
			  (PRIN1 (QUOTE %())
			  (PRINT (CAR Z))
			  (LAPP1 (COND				       |
				   ((EQ (CAR Z)			       |
					(QUOTE PROG))		       |
				     (REVERSE (CDR Z)))		       |
				   (T (CDR Z)))			       |
				 (IPLUS PD 3))
			  (PRIN1 (QUOTE %)))
			  (TERPRI))
			(PRINT Z]
          (SETQ C (CDR C))
          (GO A])

(PUSHV
  [LAMBDA (X SP)                                (* dcl: 26 FEB 76 01:16)
    (COND
      [(EQ X AC1)
	(LAP1 (QUOTE (PUSHP]
      ((EQ X AC2)
	(LAP1 (QUOTE (PUSH PP , 2))
	      T))
      ((PUSHVP X)
								       |
	(LAP1 (LIST (QUOTE PUSH)
		    (QUOTE PP)
		    (QUOTE ,)
		    (LIST (QUOTE VREF)
			  X SP))
	      T))
      [(EQ AC1 T)
	(LAP1 (LIST (QUOTE LDV)
		    X SP))
	(LAP1 (QUOTE (PUSHP]
      (T (LAP1 (LIST (QUOTE LDV2)
		     X SP 2))
	 (LAP1 (QUOTE (PUSH PP , 2))
	       T])

(PUSHVP
  [LAMBDA (X)
    (OR (FASSOC X LST)
	(FASSOC X AST)
	(SOME BACKAST (FUNCTION (LAMBDA (Y)
		  (OR (FASSOC X (CDDR Y))
		      (FASSOC X (CAR Y])

(VCLL
  [LAMBDA (VAR SP NAM N)                        (* dcl: 26 FEB 76 01:03)
    (VCALL VAR SP NAM N (QUOTE CLL)
	   (QUOTE ACLL])

(VLCLL
  [LAMBDA (VAR SP NAM N)                        (* dcl: 26 FEB 76 01:04)
    (VCALL VAR SP NAM N (QUOTE LCLL)
	   (QUOTE ALCLL])

(VCALL
  [LAMBDA (VAR SP NAM N CLL ACLL)               (* dcl: 26 FEB 76 01:10)
    (COND
      ((EQ VAR AC1)
								       |
	(LAP1 (LIST ACLL NAM N)))
								       |
      ((EQ VAR AC2)
								       |
	(LAP1 (QUOTE (PUSH PP , 2)))
								       |
	(LAP1 (LIST CLL NAM N)))
								       |
      ((PUSHVP VAR)
	(LAP1 (LIST (QUOTE PUSH)
		    (QUOTE PP)
		    (QUOTE ,)
		    (LIST (QUOTE VREF)
			  VAR SP)))
	(LAP1 (LIST CLL NAM N)))
								       |
      (T (LAP1 (LIST (QUOTE LDV)
								       |
		     VAR SP))
								       |
	 (LAP1 (LIST ACLL NAM N])

(VREF
  [NLAMBDA (V SP)                               (* dcl: 9 JAN 76 15:01)
                                                (* VARIABLE REFERENCE -
						STACKPOS (VP))
    (PROG (Q B C)
          [COND
	    [(SETQ Q (CDR (FASSOC V LST)))
	      (LAPXR VPP)
	      (RETURN (IPLUS Q (IMINUS SP]
	    ((SETQ Q (CDR (FASSOC V AST)))
	      (COND
		((MINUSP Q)
		  (LAP1 (QUOTE (LDB 7 , CFARP)))
		  (LAP1 (QUOTE (ADD 7 , @ CF)))
		  (LAPXR 7)
		  (RETURN 0))
		(T (LAPXR VVP)
		   (RETURN Q]
          (COND
	    ((ZEROP BNDLEV)
	      (GO A)))
          (SETQ B (IDIFFERENCE 1 SP))
          (SETQ C BACKAST)
      L   [COND
	    [[SETQ Q (CDR (FASSOC V (CDDAR C]
	      (OR (EQ AC7 (SETQ AC7 (IPLUS SP B)))
		  (LAP1 (LIST (QUOTE HRRZ)
			      7
			      (QUOTE ,)
			      B
			      (QUOTE (PP)))
			T))
	      (LAPXR 7)
	      (RETURN (IDIFFERENCE Q (CADAR C]
	    ([SETQ Q (PROGN (SETQ B (ADD1 B))
			    (CDR (FASSOC V (CAAR C]
	      (COND
		((MINUSP Q)
		  [LAP1 (LIST (QUOTE HLRZ)
			      7
			      (QUOTE ,)
			      B
			      (QUOTE (PP]
		  (LAP1 (QUOTE (ANDI 7 , 511)))
		  [LAP1 (LIST (QUOTE ADD)
			      7
			      (QUOTE ,)
			      B
			      (QUOTE (PP]
		  (LAPXR 7)
		  (RETURN 0))
		(T (OR (EQ AC7 (SETQ AC7 (IPLUS SP B)))
		       (LAP1 (LIST (QUOTE HRRZ)
				   7
				   (QUOTE ,)
				   B
				   (QUOTE (PP)))
			     T))
		   (LAPXR 7)
		   (RETURN Q]
          (SETQ B (ADD1 B))
          (COND
	    ((SETQ C (CDR C))
	      (GO L)))
      A   (RETURN (LAPSPECREF V])

(LAPSPECREF
  (LAMBDA (V)                                   (* dcl: 17 DEC 75 15:44)
                                                (* Generate a reference 
						to a SPECVAR.)
    (PROG ((L LIT))
      L1  (OR L (LAPERROR))

          (* The variable should already be on the literal 
	  list either because of a BIND or because it is 
	  referenced freely.)


          (COND
	    ((AND (LISTP (CAR L))
		  (OR (AND (EQ (CAAR L)
			       (QUOTE VARIABLE-VALUE-CELL))
			   (EQ V (CADAR L))
			   (SETQ L (CAR L)))
		      (AND (LISTP (CDAR L))
			   (EQ (CADAR L)
			       (QUOTE VARIABLE-VALUE-CELL))
			   (EQ (CADDAR L)
			       V)
			   (SETQ L (CDAR L)))))
	      (SETQ V (CDDR L))

          (* The relative location of the last reference to 
	  the variable is returned so that all references are 
	  "linked".)


	      (RPLACD (CDR L)
		      LOC)
	      (RETURN V)))
          (SETQ L (CDR L))
          (GO L1))))

(ADDBAS
  (NLAMBDA (X SP)                               (* dcl: 7 JAN 76 13:26)
    (LAP1 (COND
	    ((FASSOC X LST)
	      (LAP1 (LIST (QUOTE ADDI)
			  1
			  (QUOTE ,)
			  (LIST (QUOTE VREF)
				X SP)))
	      (LAP1 (LIST (QUOTE SUB)
			  1
			  (QUOTE ,)
			  (LIST (QUOTE VREF)
				X SP)))
	      (QUOTE (ADDI 1 , ASZ -1)))
	    ((ASSOCN X AST)
	      (QUOTE (ADDI 1 , 0 (VP))))
	    (T (LIST (QUOTE ADD)
		     1
		     (QUOTE ,)
		     (GB X SP)
		     (QUOTE (PP))))))
    NIL))

(ARGN
  [NLAMBDA (X N SP)                             (* dcl: 2 Jan 79 11:28)
    (COND
      ((FASSOC X LST)
	(LAP1 (LIST (QUOTE MOVEI)
		    7
		    (QUOTE ,)
		    (LIST (QUOTE VREF)
			  X SP)))
	[LAP1 (QUOTE (SUB 7 , 0 (7]
	(LAPXR 7)
	(SETQ N (IPLUS N (GETPROP (QUOTE ASZ)			       |
				  (QUOTE COREVAL))		       |
		       -1))
	                                        (* CROCKKKK))
      ((ASSOCN X AST)
	(LAPXR VVP))
      (T [LAP1 (LIST (QUOTE HRRZ)
		     7
		     (QUOTE ,)
		     (GB X SP)
		     (QUOTE (PP]
	 (LAPXR 7)))
    N])

(ASSOCN
  (LAMBDA (X L)                                 (* dcl: 8 JAN 76 14:11)
    (PROG NIL
      L1  (OR L (RETURN))
          (AND (EQ (OR (CAR (LISTP (CAAR L)))
		       (CAAR L))
		   X)
	       (RETURN (CDAR L)))
          (SETQ L (CDR L))
          (GO L1))))

(GB
  (LAMBDA (X SP)                                (* dcl: 28 JAN 76 18:46)
    (PROG ((B (IDIFFERENCE 1 SP))
	   (C BACKAST))
      L   (COND
	    ((FASSOC X (CDDAR C))
	      (RETURN B)))
          (SETQ B (ADD1 B))
          (COND
	    ((ASSOCN X (CAAR C))
	      (RETURN B)))
          (SETQ B (ADD1 B))
          (COND
	    ((SETQ C (CDR C))
	      (GO L)))
          (RETURN))))

(TREF
  (NLAMBDA (TG)
    (COND
      ((FIXP TG)
	(LAPUTGG TG))
      ((LISTP TG)
	(BLKAPPLY (CAR TG)
		  (CDR TG)))
      (T (LAPUTGU TG)))))

(BYTES
  (NLAMBDA A
    (PROG ((N (CAR A))
	   (B 0))
      L   (COND
	    ((SETQ A (CDR A))
	      (SETN B (LOGOR (LSH B N)
			     (CAR A)))
	      (GO L)))
          (LAP1 (CONS B))
          (RETURN))))

(BIND
  (LAMBDA (V NV NC NB LEV ARGTY LOCALVARS SPECVARS NFSSP)
                                                (* dcl: 8 JAN 76 12:50)

          (* V IS LIST OF LITERALS FOR BINDING.
	  FIRST NV ARE ARG NAMES, NEXT NC ARE NAME,,CONSTANT 
	  VALUE, NB IS LENGTH OF BASIC FRAME, AND LEV IS 
	  PROG/LAM DEPTH.)


    (SETQ BNDLEV (ADD1 BNDLEV))
    (LAP1 (LIST (QUOTE BND)
		(BIND1 V)
		NV NC NB LEV))
    (SETQ BACKAST (CONS (CONS AST (CONS (IDIFFERENCE NFSSP
						     (IPLUS NV NC))
					LST))
			BACKAST))
    (SETQ NC 0)
    (SETQ AST
      (MAPCONC
	V
	(FUNCTION (LAMBDA (E)
	    (COND
	      ((IGREATERP (SETQ NC (ADD1 NC))
			  NV)
		(COND
		  ((NEQ ARGTY 2)
		    (AND (LAPLOCALP (CDR E))
			 (LIST (CONS (CDR E)
				     NC))))
		  (T (LIST (CONS (COND
				   ((LAPLOCALP (CDR E))
				     (CDR E))
				   (T (LIST (CDR E))))
				 (IMINUS NC))))))
	      (T (COND
		   ((NEQ ARGTY 2)
		     (AND (LAPLOCALP E)
			  (LIST (CONS E NC))))
		   (T (LIST (CONS (COND
				    ((LAPLOCALP E)
				      E)
				    (T (LIST E)))
				  (IMINUS NC)))))))))))
    (SETQ LST NIL)))

(BIND1
  (LAMBDA (L)                                   (* dcl: 8 JAN 76 13:34)
    (SETQ L (MAPCAR L
		    (FUNCTION (LAMBDA (E)       (* FUDGE SO THAT BINDER 
						KNOWS TO OMIT NAMES FOR 
						LOCALVARS)
			(COND
			  ((LISTP E)
			    (COND
			      ((LAPLOCALP (CDR E))
				(COND
				  ((LISTP (CAR E))
				    (CONS (CAR E)
					  0))
				  (T (CAR E))))
			      (T (CONS (CAR E)
				       (CONS (QUOTE VARIABLE-VALUE-CELL)
					     (CONS (CDR E)
						   0))))))
			  (T (COND
			       ((LAPLOCALP E)
				 (CONS 0 1))
			       (T (CONS (QUOTE VARIABLE-VALUE-CELL)
					(CONS E 0))))))))))
    (BIND2 L)))

(BIND2
  (LAMBDA (L)                                   (* dcl: 22 JAN 76 17:08)
    (PROG ((LIT1 LIT)
	   (N 0)
	   LIT2 L1)                             (* ALL THIS AVOIDS 
						MULTIPLE OCCURENCES OF 
						SAME SEQUENCE OF 
						VARIABLE NAMES)
      A   (COND
	    ((NULL LIT1)
	      (SETQ LIT (NCONC LIT (COPY L)))
	      (RETURN N)))
          (COND
	    ((OR (EQ (CAR L)
		     (CAR LIT1))
		 (AND (LISTP (CAR LIT1))
		      (LISTP (CAR L))
		      (EQ (CAAR LIT1)
			  (CAAR L))
		      (OR (EQ (CDAR LIT1)
			      (CDAR L))
			  (AND (EQ (CAAR LIT1)
				   (QUOTE VARIABLE-VALUE-CELL))
			       (EQ (CADAR LIT1)
				   (CADAR L))))))
	      (SETQ LIT2 (CDR LIT1))
	      (SETQ L1 L)
	      (GO B)))
      C   (SETQ N (ADD1 N))
          (SETQ LIT1 (CDR LIT1))
          (GO A)
      B   (COND
	    ((NULL (SETQ L1 (CDR L1)))
	      (RETURN N))
	    (T (COND
		 ((OR (EQ (CAR L1)
			  (CAR LIT2))
		      (AND (LISTP (CAR LIT2))
			   (LISTP (CAR L1))
			   (EQ (CAAR LIT2)
			       (CAAR L1))
			   (OR (EQ (CDAR LIT2)
				   (CDAR L1))
			       (AND (EQ (CAAR LIT2)
					(QUOTE VARIABLE-VALUE-CELL))
				    (EQ (CADAR LIT2)
					(CADAR L1))))))
		   (SETQ LIT2 (CDR LIT2))
		   (GO B))
		 (T (GO C))))))))

(BLKBIND
  [LAMBDA (NAMS NEXP NCON FS BL ARGTY LOCALVARS SPECVARS NFSSP)
                                                (* dcl: 3 Mar 81 01:25)
                                                (* Bind local variables 
						only. ie, no frame is 
						made.)
    (PROG (MV X CFLG)
          (SETQ MV (IMINUS (IPLUS NEXP NCON)))
      C   (COND
	    [NAMS (SETQ NEXP (SUB1 NEXP))
		  (SETQ MV (ADD1 MV))
		  (COND
		    ((LISTP (SETQ X (CAR NAMS)))
		      (SETQ X (CDR X))
		      (SETQ CFLG T))
		    (T (SETQ CFLG]
	    (T (GO B)))
      A   (COND
	    [(LOCALP X)
	      [AND (FMEMB X FREE)
		   (COMPEM (CONS X
				 (APPEND (QUOTE (SHOULD BE A SPECVAR - |
							BOUND LOCALLY  |
							BY))	       |
					 (LIST FN]
	      (COND
		(CFLG (LAP1 (LIST (QUOTE PUSHQ)
				  (CAAR NAMS]
	    (T (LAPERROR)))
          (SETQ LST (CONS (CONS X (IPLUS NFSSP MV))
			  LST))
          (SETQ NAMS (CDR NAMS))
          (GO C)
      B   (RETURN])

(UNBIND
  (LAMBDA (M)                                   (* dcl: 22 DEC 75 05:26)
    (COND
      ((IGREATERP M 0)
	(LAP1 (LIST (QUOTE UNCOV)
		    M))))))

(DEFUNRET
  (NLAMBDA (TG #UNCOVS)                         (* dcl: 8 JAN 76 14:12)
    (PROG (N)
          (COND
	    ((OR (IGREATERP #UNCOVS 7)
		 (ZEROP #UNCOVS))               (* HAVE TO DO OPEN -
						DEFINE TG AND OUTPUT 
						REQUIRED STUFF)
	      (LAPDFT TG)
	      (AND (IGREATERP #UNCOVS 7)
		   (LAP1 (LIST (QUOTE UNCOV)
			       #UNCOVS)))

          (* UNDO THE (J ..) THAT IS ALREADY HALF ASSEMBLED.
	  REPLACE BY (RET))


	      (PROG ((LL (CONS))
		     (LOC 0))                   (* ASSUME RET EXPANDS TO
						1 NON-RELOCATABLE 
						INSTRUCTION)
		    (LAP1 (QUOTE (RET)))
		    (SETQ P (CAAR LL))
		    (SETQ WD))
	      (RETURN 0)))
          (SETQ S (PACK (LIST (QUOTE URET)
			      #UNCOVS)))
          (COND
	    ((SETQ N (FASSOC TG GTAGS))
	      (FRPLACD (PROG1 N (SETQ N (CDR N)))
		       S))
	    (T (SETQ GTAGS (CONS (CONS TG S)
				 GTAGS))))      (* REPLACE ALL REFS BY 
						REF TO APPROPRIATE 
						COREVAL)
      C   (OR N (GO OUTS))
          (FRPLACD (PROG1 N (SETQ N (CDR N)))
		   S)
          (GO C)
      OUTS(COND
	    (LAPFLG (LAPPT TG)
		    (LAPPW (LIST (QUOTE =)
				 S))))
          (RETURN 0))))

(RETENT
  [LAMBDA (FN FRMNAME ARGS ARGTY LOCALVARS SPECVARS)
                                                (* dcl: 26 FEB 76 02:12)
                                                (* PUTS OUT STUFF AT 
						BEGINNING OF BLK FN TO 
						MAKE A FRAME)
    [PROG ((N 0)
	   L)
          [COND
	    ((FMEMB FN ENTRIES)
	      [COND
								       |
		((EQ ARGTY 2)
								       |
		  (LAP1 (QUOTE (POPP)))
								       |
		  (LAP1 (QUOTE (SUBI 1 , ASZ]
								       |
	      (LAP1 (QUOTE (PUSHJ CP , * 2)))
	      (LAP1 (QUOTE (POPJ CP ,]
          [SETQ AST
	    (MAPCONC
	      ARGS
	      (FUNCTION (LAMBDA (E)
		  (SETQ N (ADD1 N))
		  (COND
		    ((NEQ ARGTY 2)
		      (COND
			((LAPLOCALP E)
			  (LIST (CONS E N)))
			(T (SETQ L
			     (CONS (CONS (CONS (QUOTE UNBOXED-NUM)
					       N)
					 (CONS (QUOTE 
						VARIABLE-VALUE-CELL)
					       (CONS E 0)))
				   L))
			   NIL)))
		    [(LAPLOCALP E)
		      (LIST (CONS E (IMINUS N]
		    (T (SETQ L
			 (CONS (CONS (CONS (QUOTE UNBOXED-NUM)
					   N)
				     (CONS (QUOTE VARIABLE-VALUE-CELL)
					   (CONS E 0)))
			       L))
		       (LIST (CONS (LIST E)
				   (IMINUS N]
          (LAP1 (COND
		  [(ILESSP (FLENGTH ARGS)
			   64)
		    (LIST (SELECTQ ARGTY
				   (2 (QUOTE BNDLA))
				   (QUOTE BNDB))
			  (LOGOR (LSH (FLENGTH ARGS)
				      12)
				 (LSH (FLENGTH L)
				      6))
			  (BIND2 (CONS FRMNAME (SETQ L (DREVERSE L]
		  (T (LIST (QUOTE BND2)
			   [BIND2 (CONS FRMNAME (SETQ L
					  (DEREVERSE L]
			   ARGTY
			   (FLENGTH ARGS)
			   (ADD1 (FLENGTH L]
    NIL])

(MKLCL
  (NLAMBDA (NAM)
    (PROG ((A LIT)
	   (N 0)
	   B)
          (SETQ AF T)
      LP  (COND
	    ((NULL A)
	      (GO ON))
	    ((AND (LISTP (SETQ B (CAR A)))
		  (EQ (CAR B)
		      (QUOTE LINKED-FN-CALL))
		  (EQ (CDR B)
		      NAM)
		  (SETQ N (SUB1 N))
		  (GO OUT))))
          (SETQ A (CDR A))
          (SETQ N (ADD1 N))
          (GO LP)
      ON  (SETQ LIT (NCONC LIT (LIST (CONS)
				     (CONS (QUOTE LINKED-FN-CALL)
					   NAM))))
      OUT (LAPUTGU (QUOTE PLITORG))
          (RETURN N))))

(FASTCALL
  (LAMBDA (FN SP)
    (LAP1 (LIST (QUOTE FCLL)
		FN))
    NIL))

(MKENTRY
  (LAMBDA (ENTRIES)                             (* dcl: 16 DEC 75 22:19)
    (LAP1 (QUOTE (JSP 7 , BLKENT)))
    (LAP1 (LIST (LLSH (FLENGTH FREE)
		      18)
		(QUOTE PLITORG)
		(PROG1 (FLENGTH LIT)
		       (SETQ LIT
			 (NCONC LIT (MAPCAR FREE
					    (FUNCTION (LAMBDA (X)
						(CONS (QUOTE 
						VARIABLE-VALUE-CELL)
						      (CONS X 0)))))))))
	  )
    (SETQ UTAGS (SETQ IUTAGS (CONS (CONS (QUOTE **BLKENT))
				   IUTAGS)))
    (LAP1 (QUOTE **BLKENT))
    (LAP1 (LIST (LLSH (IMINUS (FLENGTH ENTRIES))
		      18)
		(QUOTE PLITORG)
		(PROG1 (FLENGTH LIT)
		       (SETQ LIT (NCONC LIT (COPY ENTRIES))))))
    (MAPC ENTRIES
	  (FUNCTION (LAMBDA (E)
	      (LAP1 (CONS 0 (CONS (LIST (QUOTE TREF)
					(CADR (FASSOC E CALLTAGS))))))))
	  )))

(LAPERROR
  (LAMBDA NIL
    (COMPEM (CONS CL (QUOTE (-LAPERROR))))))

(LAPST
  [LAMBDA (FN CODE PLITORG LEN)                 (* dcl: 3 Mar 81 01:29)

          (* STORE IN CORE OR ON FILE OR BOTH IF BINCOMPFLG=T,
	  WRITES CODE IN 'BINARY FORMAT' USING PETER DEUTSCH'S
	  SCHEME.)


    (PROG ((BCFLG (AND (NEQ LCFIL T)
		       BINCOMPFLG))
	   SLOC ELOC B BLST Z Z1 DF OLF LA JFN CLST RL D)
          (COND
	    (FATALERROR (COMPEM (APPEND (QUOTE (NO BINARY CODE 
						   GENERATED OR LOADED 
						   FOR))
					(LIST FN)))
			(RETURN)))
          (SETQ LA (IPLUS LEN (IQUOTIENT (IPLUS LEN 35)
					 36)))
          [SETQ SLOC (VAG (IPLUS 2 (LOC (SETQ DF
					  (COND
					    (STRF (ARRAY LA PLITORG))
					    (T (VAG 0]
          [COND
	    (LCFIL [SETQ OLF (COND
		       ((OPENP LCFIL)
			 (OUTPUT LCFIL))
		       (T (OUTFILE LCFIL]
		   (AND BCFLG (SETQ BCFLG (RANDACCESSP LCFIL)))
		   (TERPRI)
		   (COND
		     (BCFLG (PRIN2 FN NIL FILERDTBL)
			    (SPACES 1)
			    (PRINT (QUOTE BINARY)
				   NIL FILERDTBL)
			    [SETQ JFN (VAG (OPNJFN (OUTPUT]
			    (OSFBSZ JFN 36)
			    (OBOUT LA JFN)
			    (OBOUT PLITORG JFN)
			    (OBOUT LEN JFN))
		     (T (PRINT FN NIL FILERDTBL)
			(PRINT LA NIL FILERDTBL)
			(PRINT PLITORG NIL FILERDTBL)
			(PRINT LEN NIL FILERDTBL]
          (SETQ ELOC (VAG (IPLUS (LOC SLOC)
				 PLITORG)))
          (SETQ BLST (LIST NIL))
          (LAPPUSH0)
          [PROG NIL                             (* THIS PROG IS HERE 
						ONLY TO FOOL COMPILER 
						RE. NREFS)
	    A1  (SETQ B 35)
	    A   [COND
		  [(LISTP (SETQ Z (CAR CODE)))
		    (COND
		      ((NULL (CDR Z))
			(LAPRBIT B)))
		    [COND
		      (LCFIL
			(COND
			  [BCFLG
			    (OBOUT (COND
				     ((FLOATP (SETQ Z1 (CAR Z)))
				       (OPENR (LOC Z1)))
				     (T Z1))
				   JFN)
			    (COND
			      ((CDR Z)
				(SETQ RL (IDIFFERENCE (LOC SLOC)
						      (LOC DF)))
				(COND
				  [(SETQ D (FASSOC (CDR Z)
						   CLST))
				    (FRPLACD D (CONS RL (CDR D]
				  (T (SETQ CLST
				       (CONS (LIST (CDR Z)
						   RL)
					     CLST]
			  (T (LAPFW (CAR Z))
			     (COND
			       ((CDR Z)
				 (PRIN1 (QUOTE % ))
				 (PRINT (CDR Z)
					NIL FILERDTBL))
			       (T (TERPRI]
		    (COND
		      (STRF
			(CLOSER (LOC SLOC)
				(CAR Z))
			(COND
			  ((CDR Z)
			    (FRPLACA
			      SLOC
			      (VAG (IPLUS (CAR Z)
					  (OR (GETPROP (CDR Z)
						       (QUOTE COREVAL))
					      (ERROR (QUOTE 
						       "NO COREVAL")
						     (CDR Z]
		  (T [COND
		       (LCFIL (COND
				(BCFLG (OBOUT (COND
						((FLOATP Z)
						  (OPENR (LOC Z)))
						(T Z))
					      JFN))
				(T (LAPFW Z)
				   (TERPRI]
		     (COND
		       (STRF (CLOSER (LOC SLOC)
				     Z]
	        (SETQ CODE (CDR CODE))
	        [SETQ SLOC (VAG (ADD1 (LOC SLOC]
	        [COND
		  ((IGREATERP (LOC ELOC)
			      (LOC SLOC))
		    (COND
		      ((ZEROP B)
			(SETQ BLST (TCONC BLST (LAPNREF)))
			(LAPNSET)				       |
			(GO A1))
		      (T (SUB1VAR B)
			 (GO A]
	        (SETQ BLST (TCONC BLST (LAPNREF]
          (LAPPOP)
          [SETQ B (IPLUS LA (IMINUS LEN)
			 (IMINUS (FLENGTH (CAR BLST]
                                                (* Make RELOC bits -- 
						all 0 -- for literals.)
      BLP (COND
	    ((IGREATERP (SETQ B (SUB1 B))
			-1)
	      (TCONC BLST 0)
	      (GO BLP)))
          (COND
	    ((AND LCFIL BCFLG)
	      [MAPC (CAR BLST)
		    (FUNCTION (LAMBDA (W)
			(OBOUT W JFN]
	      (OSFBSZ JFN 7)))
          [MAPC
	    CODE
	    (FUNCTION (LAMBDA (W)               (* Put out literals.
						Link if blockcompiled or
						LINKFNS set)
		[COND
		  (STRF [COND
			  [(LISTP W)
			    (COND
			      ((EQ (CAR W)
				   (QUOTE LINKED-FN-CALL))
				(DOLINK SLOC 0 (CDR W)
					FN T))
			      ((EQ (CAR W)
				   (QUOTE VARIABLE-VALUE-CELL))
				(DOVARLINK (VAG (IPLUS (LOC DF)
						       2))
					   SLOC W))
			      [(AND (LISTP (CDR W))
				    (EQ (CADR W)
					(QUOTE VARIABLE-VALUE-CELL))
				    (CDDR W))
				(DOVARLINK (VAG (IPLUS (LOC DF)
						       2))
					   SLOC
					   (CDR W))
				(FRPLACD SLOC (CAR SLOC))
                                                (* Because DOVARLINK 
						puts the value cell ptr 
						in the CAR of SLOC.)
				(FRPLACA SLOC
					 (COND
					   ((AND (LISTP (CAR W))
						 (EQ (CAAR W)
						     (QUOTE UNBOXED-NUM)
						     ))
					     (VAG (CDAR W)))
					   (T (CAR W]
			      (T (FRPLACA SLOC (CAR W))
				 (FRPLACD SLOC (COND
					    ((EQ (CDR W)
						 0)
					      (VAG 0))
					    (T (CDR W]
			  (T (CLOSER (LOC SLOC)
				     (LOC W]
			(SETQ SLOC (VAG (ADD1 (LOC SLOC]
		(COND
		  (LCFIL (PRINT W NIL FILERDTBL]
          (COND
	    ((AND LCFIL BCFLG)                  (* Put out references to
						COREVALs.)
	      (COND
		(CLST (PRIN2 (MAPCAR CLST (FUNCTION CAR))
			     NIL FILERDTBL))
		(T (PRIN1 (QUOTE %(%))
			  NIL FILERDTBL)))
	      (OSFBSZ JFN 18)
	      [MAPC CLST (FUNCTION (LAMBDA (Z)
			[MAPC (CDR Z)
			      (FUNCTION (LAMBDA (R)
				  (OBOUT R JFN]
			(OBOUT 0 JFN]
	      (OSFBSZ JFN 7)
	      (TERPRI)))                        (* Put out relocation 
						words.)
          [MAPC (CAR BLST)
		(FUNCTION (LAMBDA (W)
		    [COND
		      (STRF (CLOSER (LOC SLOC)
				    W)
			    (SETQ SLOC (VAG (ADD1 (LOC SLOC]
		    (COND
		      ((AND LCFIL (NOT BCFLG))
			(LAPFW W)
			(TERPRI]
          [COND
	    (STRF (FRPLACD DF (VAG (IPLUS LEN 2)))
		  (RELOC DF (IPLUS 2 (LOC DF)))
		  (PROG ((DFNFLG (NULL SVFLG)))
		        (DECLARE (SPECVARS DFNFLG))
		        (DEFC FN (VAG (IPLUS 2 (LOC DF]
          (COND
	    (LCFIL (OUTPUT OLF])

(LAPFW
  (LAMBDA (Z)
    (DECLARE (DEFLIST (QUOTE ((NOUT ((N)
				     (ASSEMBLE NIL
					       (CQ (VAG N))
					       (PUSHN 1)
					       (MOVE 2 , KNIL)
					       (PUSHJ CP , OFSET)
					       (HRRZ 1 , FILEN
						     (FX))
					       (POPN 2)
					       (MOVEI 3 , 12Q)
					       (JSYS 224Q)
					       (JFCL))))))
		      (QUOTE MACRO)))
    (COND
      ((FLOATP Z)
	(SETQ Z (OPENR (LOC Z)))))
    (NOUT Z)))

(LAPPUSH0
  (LAMBDA NIL
    (SETQ .QQ. 0)))

(LAPRBIT
  (LAMBDA NIL
    (SETQ .QQ. (LOGOR (LLSH 1 B)
		      .QQ.))))

(LAPPOP
  (LAMBDA NIL .QQ.))

(LAPNREF
  (LAMBDA NIL .QQ.))

(LAPNSET
  (LAMBDA NIL
    (SETQ .QQ. 0)))

(NSUBPR
  (LAMBDA (N V L)
    (PROG (A D)
          (COND
	    ((NLISTP L)
	      (COND
		((NUMBERP L)
		  (RETURN L))
		(T (GO A))))
	    ((SETQ D (CDR L))
	      (SETQ D (COND
		  (FLG (PROG (FLG)
			     (RETURN (NSUBPR N V D))))
		  (T (NSUBPR N V D))))))
          (SETQ A (COND
	      (FLG (PROG (FLG)
		         (RETURN (NSUBPR N V (CAR L)))))
	      (T (NSUBPR N V (CAR L)))))
          (RETURN (COND
		    (FLG (CONS A D))
		    (T L)))
      A   (RETURN (ASSEMBLE NIL
			    (LDV2 (QUOTE L)
				  SP 2)
			    (MOVEI 4 , 0)
			    (LDV2 (QUOTE N)
				  SP 3)
			LP  (CAMN 3 , KNIL)
			    (JRST E)
			    (HRRZ 1 , 0 (3))
			    (CAIE 2 , 0 (1))
			    (JRST B)
			    (HRRZ 1 , KT)
			    (SETQ FLG)
			    (JRST C)
			B   (HLRZ 3 , 0 (3))
			    (AOJA 4 , LP)
			C   (LDV2 (QUOTE V)
				  SP 2)
			    (JUMPE 4 , D)
			    (HLRZ 2 , 0 (2))
			    (SOJG 4 , * -1)
			D   (HRRZ 1 , 0 (2))
			    (JRST END)
			E   (MOVEI 1 , 0 (2))
			END)))))

(NOUT
  (LAMBDA (N FILE MODE)
    (ASSEMBLE NIL
	      (CQ (VAG (OR MODE 120000000012Q)))
	      (PUSHN 1)
	      (CQ (VAG N))
	      (PUSHN 1)
	      (CQ (NOUTJFN FILE))
	      (POPN 2)
	      (POPN 3)
	      (JSYS 224Q)
	      (JFCL)
	      (CQ (NOUTEND N FILE)))))

(OBOUT
  (LAMBDA (BYTE JFN)
    (JSYS 41 (LOC JFN)
	  BYTE 0)))
)

(PUTPROPS STV ACS SV)

(PUTPROPS LDV ACS LV)

(PUTPROPS LDV2 ACS LV2)

(PUTPROPS CAR1 ACS C1)

(PUTPROPS CDR1 ACS C1)

(PUTPROPS CAR2 ACS C2)

(PUTPROPS CDR2 ACS C2)

(PUTPROPS CAR21 ACS C2)

(PUTPROPS CDR21 ACS C2)

(PUTPROPS RPA ACS NOEFF)

(PUTPROPS RPD ACS NOEFF)

(PUTPROPS STN ACS NOEFF)

(PUTPROPS STE ACS NOEFF)

(PUTPROPS J ACS J)

(PUTPROPS RET ACS J)

(PUTPROPS JR ACS NOEFF)

(PUTPROPS MOV21 ACS M21)

(PUTPROPS BN ACS NOEFF)

(PUTPROPS BNN ACS NOEFF)

(PUTPROPS SKE ACS NOEFF)

(PUTPROPS SKNE ACS NOEFF)

(PUTPROPS SKEQ ACS NOEFF)

(PUTPROPS SKNEQ ACS NOEFF)

(PUTPROPS SKEI ACS NOEFF)

(PUTPROPS SKNEI ACS NOEFF)

(PUTPROPS SKEN ACS NOEFF)

(PUTPROPS SKNEN ACS NOEFF)

(PUTPROPS SKES ACS NOEFF)

(PUTPROPS SKNES ACS NOEFF)

(PUTPROPS SKA ACS NOEFF)

(PUTPROPS SKNA ACS NOEFF)

(PUTPROPS SKNM ACS NOEFF)

(PUTPROPS SKNNM ACS NOEFF)

(PUTPROPS SKI ACS NOEFF)

(PUTPROPS SKNI ACS NOEFF)

(PUTPROPS JL ACS NOEFF)

(PUTPROPS JGE ACS NOEFF)

(PUTPROPS LPUSHN ACS NOEFF)

(PUTPROPS PUSHP ACS NOEFF)

(PUTPROPS PUSHQ ACS NOEFF)

(PUTPROPS PUSHNV ACS NOEFF)

(PUTPROPS PUSHV ACS NOEFF)

(PUTPROPS BNDB OPD ((C NAMA)
		    (JSP 7 , BINDB)
		    (XWD C PLITORG NAMA)))

(PUTPROPS BNDLA OPD ((C NAMA)
		     (JSP 7 , BINDLA)
		     (XWD C PLITORG NAMA)))

(PUTPROPS BND OPD ((NAMA NN NC FS BL)
		   (PBIND PLITORG NAMA)
		   (BYTES 9 NN NC FS BL)))

(PUTPROPS BND2 OPD ((LIT ARGTY FS NL)
		    (PBIND2 PLITORG LIT)
		    (BYTES 9 ARGTY FS 0 NL)))

(PUTPROPS ENTERF OPD [LAMBDA (NA NL TY NF)
			     (LIST [COND [(AND (EQ NA NL)
					       (ILESSP NA 7))
					  (LIST (QUOTE JSP)
						7
						(QUOTE ,)
						(PACK (LIST (QUOTE ENTER)
							    (COND ((EQ TY 2)
								   (QUOTE N))
								  (T NA]
					 (T (QUOTE (JSP 7 , ENTERF]
				   (LIST (QUOTE XWD)
					 NA TY)
				   (LIST (QUOTE XWD)
					 NF
					 (QUOTE PLITORG])

(PUTPROPS LQ OPD ((X)
		  (HRRZ 1 , ' X)))

(PUTPROPS LQ2 OPD ((X AC)
		   (HRRZ AC , ' X)))

(PUTPROPS LQI OPD ((X)
		   (HRRZI 1 , ASZ X)))

(PUTPROPS LQ2I OPD ((X AC)
		    (HRRZI AC , ASZ X)))

(PUTPROPS LDI OPD ((N)
		   (HRREI 1 , N)))

(PUTPROPS LDI2 OPD ((N AC)
		    (HRREI AC , N)))

(PUTPROPS LDV OPD ((A SP)
		   (HRRZ 1 , (VREF A SP))))

(PUTPROPS STV OPD ((A SP)
		   (HRRM 1 , (VREF A SP))))

(PUTPROPS LDV2 OPD ((A SP AC)
		    (HRRZ AC , (VREF A SP))))

(PUTPROPS LDN OPD ((N)
		   (MOVE 1 , = N)))

(PUTPROPS LDN2 OPD ((N AC)
		    (MOVE AC , = N)))

(PUTPROPS MOV21 OPD (NIL (MOVE 2 , 1)))

(PUTPROPS FCLL OPD ((FN)
		    (PUSHJ CP , FN)))

(PUTPROPS CAR1 OPD (NIL (HRRZ 1 , 0 (1))))

(PUTPROPS CDR1 OPD (NIL (HLRZ 1 , 0 (1))))

(PUTPROPS CAR2 OPD ((AC)
		    (HRRZ AC , 0 (AC))))

(PUTPROPS CDR2 OPD ((AC)
		    (HLRZ AC , 0 (AC))))

(PUTPROPS CARV OPD ((V SP)
		    (HRRZ 1 , @ (VREF V SP))))

(PUTPROPS CDRV OPD ((V SP)
		    (HLRZ 1 , @ (VREF V SP))))

(PUTPROPS CAR2V OPD ((V SP AC)
		     (HRRZ AC , @ (VREF V SP))))

(PUTPROPS CDR2V OPD ((V SP AC)
		     (HLRZ AC , @ (VREF V SP))))

(PUTPROPS CAR21 OPD (NIL (HRRZ 2 , 0 (1))))

(PUTPROPS CDR21 OPD (NIL (HLRZ 2 , 0 (1))))

(PUTPROPS RPA OPD ((A B)
		   (HRRM B , 0 (A))))

(PUTPROPS RPD OPD ((A B)
		   (HRLM B , 0 (A))))

(PUTPROPS ACLL OPD ((NAM N)
		    (ACCALL N , ' NAM)))

(PUTPROPS CLL OPD ((NAM N)
		   (CCALL N , ' NAM)))

(PUTPROPS CLL2 OPD ((NAM N)
		    (MOVEI 1 , N)
		    (MOVE 2 , ' NAM)
		    (PUSHJ CP , EFNCAL)))

(PUTPROPS CLLA OPD ((N)
		    (MOVEI 1 , N)
		    (PUSHJ CP , EVCC)))

(PUTPROPS LCLL OPD ((NAM N)
		    (LNCALL N , (MKLCL NAM))))

(PUTPROPS ALCLL OPD ((NAM N)
		     (ALNCAL N , (MKLCL NAM))))

(PUTPROPS LCLL2 OPD ((NAM N)
		     (MOVEI 1 , N)
		     (LNCAL2 (MKLCL NAM))))

(PUTPROPS LE OPD [LAMBDA (X)
			 (EVAL X)
			 NIL])

(PUTPROPS BA* OPD ((NA)
		   (MOVEI 1 , NA)
		   (MOVEI 2 , **BLKENT)
		   (PUSHJ CP , BLKAP*)))

(PUTPROPS BN OPD ((A)
		  (CAMN 1 , KNIL)
		  (JR A)))

(PUTPROPS BNN OPD ((A)
		   (CAME 1 , KNIL)
		   (JR A)))

(PUTPROPS LQTS OPD (NIL (SKIPA 1 , KT)))

(PUTPROPS LQNS OPD (NIL (SKIPA 1 , KNIL)))

(PUTPROPS SKE OPD ((A)
		   (CAME 1 , A)))

(PUTPROPS SKNE OPD ((A)
		    (CAMN 1 , A)))

(PUTPROPS SKEQ OPD ((A)
		    (CAME 1 , ' A)))

(PUTPROPS SKNEQ OPD ((A)
		     (CAMN 1 , ' A)))

(PUTPROPS SKEI OPD ((A)
		    (CAIE 1 , A)))

(PUTPROPS SKNEI OPD ((A)
		     (CAIN 1 , A)))

(PUTPROPS SKEN OPD ((A)
		    (CAME 1 , = A)))

(PUTPROPS SKNEN OPD ((A)
		     (CAMN 1 , = A)))

(PUTPROPS SKES OPD ((A)
		    (CAIE 1 , ASZ A)))

(PUTPROPS SKNES OPD ((A)
		     (CAIN 1 , ASZ A)))

(PUTPROPS SKA OPD (NIL (JSP 6 , SKA)))

(PUTPROPS SKNA OPD (NIL (JSP 6 , SKNA)))

(PUTPROPS SKNM OPD (NIL (JSP 6 , SKNM)))

(PUTPROPS SKNNM OPD (NIL (JSP 6 , SKNNM)))

(PUTPROPS SKI OPD (NIL (JSP 6 , SKI)))

(PUTPROPS SKNI OPD (NIL (JSP 6 , SKNI)))

(PUTPROPS STE OPD [LAMBDA (TY)
			  (SELECTQ TY [LISTT (QUOTE ((JSP 6 , SKLST]
				   [ATOMT (QUOTE ((JSP 6 , SKLA]
				   [ARRAYT (QUOTE ((JSP 6 , SKAR]
				   [STPTT (QUOTE ((JSP 6 , SKSTP]
				   [STKPT (QUOTE ((JSP 6 , SKSTK]
				   (CONS (LIST (QUOTE PSTE)
					       1
					       (QUOTE ,)
					       TY])

(PUTPROPS STN OPD [LAMBDA (TY)
			  (SELECTQ TY [LISTT (QUOTE ((JSP 6 , SKNLST]
				   [ATOMT (QUOTE ((JSP 6 , SKNLA]
				   [ARRAYT (QUOTE ((JSP 6 , SKNAR]
				   [STPTT (QUOTE ((JSP 6 , SKNSTP]
				   [STKPT (QUOTE ((JSP 6 , SKNSTK]
				   (CONS (LIST (QUOTE PSTN)
					       1
					       (QUOTE ,)
					       TY])

(PUTPROPS LDTY OPD ((A)
		    (MOVEI A , 0 (1))
		    (LSH A , -9)
		    (HRRZ A , TYPTAB (A))))

(PUTPROPS J OPD ((A)
		 (JRST (TREF A))))

(PUTPROPS JR OPD ((A)
		  (JRST (TREF A))))

(PUTPROPS JL OPD ((A)
		  (JUMPL 1 , (TREF A))))

(PUTPROPS JGE OPD ((A)
		   (JUMPGE 1 , (TREF A))))

(PUTPROPS RET OPD (NIL (POPJ CP ,)))

(PUTPROPS LPUSHN OPD ((N)
		      (PUSH CP , = 4456449)
		      (PUSH CP , N)))

(PUTPROPS LPOPN OPD ((N)
		     (POP CP , N)
		     (SUB CP , BHC 1)))

(PUTPROPS PUSHP OPD (NIL (PUSH PP , 1)))

(PUTPROPS PUSHQ OPD ((X)
		     (PUSH PP , ' X)))

(PUTPROPS PUSHNV OPD ((N)
		      (PUSH PP , = N)))

(PUTPROPS POPP OPD (NIL (POP PP , 1)))

(PUTPROPS POPP2 OPD (NIL (POP PP , 2)))

(PUTPROPS UNCOV OPD ((SP)
		     (SUB PP , BHC SP)))

(PUTPROPS XWD OPD [LAMBDA (L R D)
			  (CONS (CONS (LLSH L 18)
				      (COND ((NULL D)
					     (CONS R))
					    (T (LIST R D])

(PUTPROPS NLGO OPD ((N SP0)
		    (MOVEI 2 , SP0)
		    (MOVNI 1 , N)
		    (PUSHJ CP , NLGO)))

(PUTPROPS FLOATP OPD (NIL (STN FLOATT)
			  (JRST * 3)
			  (FCLL FUNBOX)))

(PUTPROPS FIXP OPD (NIL (SKNI)
			(JRST * 3)
			(FCLL IUNBOX)))

(RPAQQ OPCODES (ADD ADDB ADDI ADDM AND ANDB ANDCA ANDCAB ANDCAI ANDCAM ANDCB ANDCBB ANDCBI ANDCBM 
		    ANDCM ANDCMB ANDCMI ANDCMM ANDI ANDM AOBJN AOBJP AOJ AOJA AOJE AOJG AOJGE AOJL 
		    AOJLE AOJN AOS AOSA AOSE AOSG AOSGE AOSL AOSLE AOSN ASH ASHC BLT CAI CAIA CAIE 
		    CAIG CAIGE CAIL CAILE CAIN CAM CAMA CAME CAMG CAMGE CAML CAMLE CAMN DFN DIV DIVB 
		    DIVI DIVM DPB EQV EQVB EQVI EQVM EXCH FAD FADB FADL FADM FADR FADRB FADRI FADRM 
		    FDV FDVB FDVL FDVM FDVR FDVRB FDVRI FDVRM FMP FMPB FMPL FMPM FMPR FMPRB FMPRI 
		    FMPRM FSB FSBB FSBL FSBM FSBR FSBRB FSBRI FSBRM FSC HLL HLLE HLLEI HLLEM HLLES 
		    HLLI HLLM HLLO HLLOI HLLOM HLLOS HLLS HLLZ HLLZI HLLZM HLLZS HLR HLRE HLREI HLREM 
		    HLRES HLRI HLRM HLRO HLROI HLROM HLROS HLRS HLRZ HLRZI HLRZM HLRZS HRL HRLE HRLEI 
		    HRLEM HRLES HRLI HRLM HRLO HRLOI HRLOM HRLOS HRLS HRLZ HRLZI HRLZM HRLZS HRR HRRE 
		    HRREI HRREM HRRES HRRI HRRM HRRO HRROI HRROM HRROS HRRS HRRZ HRRZI HRRZM HRRZS 
		    IBP IDIV IDIVB IDIVI IDIVM IDPB ILDB IMUL IMULB IMULI IMULM IOR IORB IORI IORM 
		    JFCL JFFO JRA JRST JSA JSP JSR JUMP JUMPA JUMPE JUMPG JUMPGE JUMPL JUMPLE JUMPN 
		    LDB LSH LSHC MOVE MOVEI MOVEM MOVES MOVM MOVMI MOVMM MOVMS MOVN MOVNI MOVNM MOVNS 
		    MOVS MOVSI MOVSM MOVSS MUL MULB MULI MULM ORCA ORCAB ORCAI ORCAM ORCB ORCBB ORCBI 
		    ORCBM ORCM ORCMB ORCMI ORCMM POP POPJ PUSH PUSHJ ROT ROTC SETA SETAB SETAI SETAM 
		    SETCA SETCAB SETCAI SETCAM SETCM SETCMB SETCMI SETCMM SETM SETMB SETMI SETMM SETO 
		    SETOB SETOI SETOM SETZ SETZB SETZI SETZM SKIP SKIPA SKIPE SKIPG SKIPGE SKIPL 
		    SKIPLE SKIPN SOJ SOJA SOJE SOJG SOJGE SOJL SOJLE SOJN SOS SOSA SOSE SOSG SOSGE 
		    SOSL SOSLE SOSN SUB SUBB SUBI SUBM TDC TDCA TDCE TDCN TDN TDNA TDNE TDNN TDO TDOA 
		    TDOE TDON TDZ TDZA TDZE TDZN TLC TLCA TLCE TLCN TLN TLNA TLNE TLNN TLO TLOA TLOE 
		    TLON TLZ TLZA TLZE TLZN TRC TRCA TRCE TRCN TRN TRNA TRNE TRNN TRO TROA TROE TRON 
		    TRZ TRZA TRZE TRZN TSC TSCA TSCE TSCN TSN TSNA TSNE TSNN TSO TSOA TSOE TSON TSZ 
		    TSZA TSZE TSZN UFA XCT XOR XORB XORI XORM PSETN PIUNBX PIBOX PSTNB PSTB PBIND 
		    PBIND2 PSTN PSTE CKUDT PSTEI PSTNI JSYS ACCALL CCALL LNCALL LNCAL2 HCCAL EXCAL 
		    SBCAL ALNCAL))

(PUTPROPS ADD OPD 94208)

(PUTPROPS ADDB OPD 95744)

(PUTPROPS ADDI OPD 94720)

(PUTPROPS ADDM OPD 95232)

(PUTPROPS AND OPD 133120)

(PUTPROPS ANDB OPD 134656)

(PUTPROPS ANDCA OPD 135168)

(PUTPROPS ANDCAB OPD 136704)

(PUTPROPS ANDCAI OPD 135680)

(PUTPROPS ANDCAM OPD 136192)

(PUTPROPS ANDCB OPD 147456)

(PUTPROPS ANDCBB OPD 148992)

(PUTPROPS ANDCBI OPD 147968)

(PUTPROPS ANDCBM OPD 148480)

(PUTPROPS ANDCM OPD 139264)

(PUTPROPS ANDCMB OPD 140800)

(PUTPROPS ANDCMI OPD 139776)

(PUTPROPS ANDCMM OPD 140288)

(PUTPROPS ANDI OPD 133632)

(PUTPROPS ANDM OPD 134144)

(PUTPROPS AOBJN OPD 87552)

(PUTPROPS AOBJP OPD 87040)

(PUTPROPS AOJ OPD 114688)

(PUTPROPS AOJA OPD 116736)

(PUTPROPS AOJE OPD 115712)

(PUTPROPS AOJG OPD 118272)

(PUTPROPS AOJGE OPD 117248)

(PUTPROPS AOJL OPD 115200)

(PUTPROPS AOJLE OPD 116224)

(PUTPROPS AOJN OPD 117760)

(PUTPROPS AOS OPD 118784)

(PUTPROPS AOSA OPD 120832)

(PUTPROPS AOSE OPD 119808)

(PUTPROPS AOSG OPD 122368)

(PUTPROPS AOSGE OPD 121344)

(PUTPROPS AOSL OPD 119296)

(PUTPROPS AOSLE OPD 120320)

(PUTPROPS AOSN OPD 121856)

(PUTPROPS ASH OPD 81920)

(PUTPROPS ASHC OPD 83968)

(PUTPROPS BLT OPD 86528)

(PUTPROPS CAI OPD 98304)

(PUTPROPS CAIA OPD 100352)

(PUTPROPS CAIE OPD 99328)

(PUTPROPS CAIG OPD 101888)

(PUTPROPS CAIGE OPD 100864)

(PUTPROPS CAIL OPD 98816)

(PUTPROPS CAILE OPD 99840)

(PUTPROPS CAIN OPD 101376)

(PUTPROPS CAM OPD 102400)

(PUTPROPS CAMA OPD 104448)

(PUTPROPS CAME OPD 103424)

(PUTPROPS CAMG OPD 105984)

(PUTPROPS CAMGE OPD 104960)

(PUTPROPS CAML OPD 102912)

(PUTPROPS CAMLE OPD 103936)

(PUTPROPS CAMN OPD 105472)

(PUTPROPS DFN OPD 45568)

(PUTPROPS DIV OPD 79872)

(PUTPROPS DIVB OPD 81408)

(PUTPROPS DIVI OPD 80384)

(PUTPROPS DIVM OPD 80896)

(PUTPROPS DPB OPD 48640)

(PUTPROPS EQV OPD 149504)

(PUTPROPS EQVB OPD 151040)

(PUTPROPS EQVI OPD 150016)

(PUTPROPS EQVM OPD 150528)

(PUTPROPS EXCH OPD 86016)

(PUTPROPS FAD OPD 49152)

(PUTPROPS FADB OPD 50688)

(PUTPROPS FADL OPD 49664)

(PUTPROPS FADM OPD 50176)

(PUTPROPS FADR OPD 51200)

(PUTPROPS FADRB OPD 52736)

(PUTPROPS FADRI OPD 51712)

(PUTPROPS FADRM OPD 52224)

(PUTPROPS FDV OPD 61440)

(PUTPROPS FDVB OPD 62976)

(PUTPROPS FDVL OPD 61952)

(PUTPROPS FDVM OPD 62464)

(PUTPROPS FDVR OPD 63488)

(PUTPROPS FDVRB OPD 65024)

(PUTPROPS FDVRI OPD 64000)

(PUTPROPS FDVRM OPD 64512)

(PUTPROPS FMP OPD 57344)

(PUTPROPS FMPB OPD 58880)

(PUTPROPS FMPL OPD 57856)

(PUTPROPS FMPM OPD 58368)

(PUTPROPS FMPR OPD 59392)

(PUTPROPS FMPRB OPD 60928)

(PUTPROPS FMPRI OPD 59904)

(PUTPROPS FMPRM OPD 60416)

(PUTPROPS FSB OPD 53248)

(PUTPROPS FSBB OPD 54784)

(PUTPROPS FSBL OPD 53760)

(PUTPROPS FSBM OPD 54272)

(PUTPROPS FSBR OPD 55296)

(PUTPROPS FSBRB OPD 56832)

(PUTPROPS FSBRI OPD 55808)

(PUTPROPS FSBRM OPD 56320)

(PUTPROPS FSC OPD 46080)

(PUTPROPS HLL OPD 163840)

(PUTPROPS HLLE OPD 176128)

(PUTPROPS HLLEI OPD 176640)

(PUTPROPS HLLEM OPD 177152)

(PUTPROPS HLLES OPD 177664)

(PUTPROPS HLLI OPD 164352)

(PUTPROPS HLLM OPD 164864)

(PUTPROPS HLLO OPD 172032)

(PUTPROPS HLLOI OPD 172544)

(PUTPROPS HLLOM OPD 173056)

(PUTPROPS HLLOS OPD 173568)

(PUTPROPS HLLS OPD 165376)

(PUTPROPS HLLZ OPD 167936)

(PUTPROPS HLLZI OPD 168448)

(PUTPROPS HLLZM OPD 168960)

(PUTPROPS HLLZS OPD 169472)

(PUTPROPS HLR OPD 182272)

(PUTPROPS HLRE OPD 194560)

(PUTPROPS HLREI OPD 195072)

(PUTPROPS HLREM OPD 195584)

(PUTPROPS HLRES OPD 196096)

(PUTPROPS HLRI OPD 182784)

(PUTPROPS HLRM OPD 183296)

(PUTPROPS HLRO OPD 190464)

(PUTPROPS HLROI OPD 190976)

(PUTPROPS HLROM OPD 191488)

(PUTPROPS HLROS OPD 192000)

(PUTPROPS HLRS OPD 183808)

(PUTPROPS HLRZ OPD 186368)

(PUTPROPS HLRZI OPD 186880)

(PUTPROPS HLRZM OPD 187392)

(PUTPROPS HLRZS OPD 187904)

(PUTPROPS HRL OPD 165888)

(PUTPROPS HRLE OPD 178176)

(PUTPROPS HRLEI OPD 178688)

(PUTPROPS HRLEM OPD 179200)

(PUTPROPS HRLES OPD 179712)

(PUTPROPS HRLI OPD 166400)

(PUTPROPS HRLM OPD 166912)

(PUTPROPS HRLO OPD 174080)

(PUTPROPS HRLOI OPD 174592)

(PUTPROPS HRLOM OPD 175104)

(PUTPROPS HRLOS OPD 175616)

(PUTPROPS HRLS OPD 167424)

(PUTPROPS HRLZ OPD 169984)

(PUTPROPS HRLZI OPD 170496)

(PUTPROPS HRLZM OPD 171008)

(PUTPROPS HRLZS OPD 171520)

(PUTPROPS HRR OPD 180224)

(PUTPROPS HRRE OPD 192512)

(PUTPROPS HRREI OPD 193024)

(PUTPROPS HRREM OPD 193536)

(PUTPROPS HRRES OPD 194048)

(PUTPROPS HRRI OPD 180736)

(PUTPROPS HRRM OPD 181248)

(PUTPROPS HRRO OPD 188416)

(PUTPROPS HRROI OPD 188928)

(PUTPROPS HRROM OPD 189440)

(PUTPROPS HRROS OPD 189952)

(PUTPROPS HRRS OPD 181760)

(PUTPROPS HRRZ OPD 184320)

(PUTPROPS HRRZI OPD 184832)

(PUTPROPS HRRZM OPD 185344)

(PUTPROPS HRRZS OPD 185856)

(PUTPROPS IBP OPD 46592)

(PUTPROPS IDIV OPD 77824)

(PUTPROPS IDIVB OPD 79360)

(PUTPROPS IDIVI OPD 78336)

(PUTPROPS IDIVM OPD 78848)

(PUTPROPS IDPB OPD 48128)

(PUTPROPS ILDB OPD 47104)

(PUTPROPS IMUL OPD 73728)

(PUTPROPS IMULB OPD 75264)

(PUTPROPS IMULI OPD 74240)

(PUTPROPS IMULM OPD 74752)

(PUTPROPS IOR OPD 145408)

(PUTPROPS IORB OPD 146944)

(PUTPROPS IORI OPD 145920)

(PUTPROPS IORM OPD 146432)

(PUTPROPS JFCL OPD 88576)

(PUTPROPS JFFO OPD 83456)

(PUTPROPS JRA OPD 93696)

(PUTPROPS JRST OPD 88064)

(PUTPROPS JSA OPD 93184)

(PUTPROPS JSP OPD 92672)

(PUTPROPS JSR OPD 92160)

(PUTPROPS JUMP OPD 106496)

(PUTPROPS JUMPA OPD 108544)

(PUTPROPS JUMPE OPD 107520)

(PUTPROPS JUMPG OPD 110080)

(PUTPROPS JUMPGE OPD 109056)

(PUTPROPS JUMPL OPD 107008)

(PUTPROPS JUMPLE OPD 108032)

(PUTPROPS JUMPN OPD 109568)

(PUTPROPS LDB OPD 47616)

(PUTPROPS LSH OPD 82944)

(PUTPROPS LSHC OPD 84992)

(PUTPROPS MOVE OPD 65536)

(PUTPROPS MOVEI OPD 66048)

(PUTPROPS MOVEM OPD 66560)

(PUTPROPS MOVES OPD 67072)

(PUTPROPS MOVM OPD 71680)

(PUTPROPS MOVMI OPD 72192)

(PUTPROPS MOVMM OPD 72704)

(PUTPROPS MOVMS OPD 73216)

(PUTPROPS MOVN OPD 69632)

(PUTPROPS MOVNI OPD 70144)

(PUTPROPS MOVNM OPD 70656)

(PUTPROPS MOVNS OPD 71168)

(PUTPROPS MOVS OPD 67584)

(PUTPROPS MOVSI OPD 68096)

(PUTPROPS MOVSM OPD 68608)

(PUTPROPS MOVSS OPD 69120)

(PUTPROPS MUL OPD 75776)

(PUTPROPS MULB OPD 77312)

(PUTPROPS MULI OPD 76288)

(PUTPROPS MULM OPD 76800)

(PUTPROPS ORCA OPD 153600)

(PUTPROPS ORCAB OPD 155136)

(PUTPROPS ORCAI OPD 154112)

(PUTPROPS ORCAM OPD 154624)

(PUTPROPS ORCB OPD 159744)

(PUTPROPS ORCBB OPD 161280)

(PUTPROPS ORCBI OPD 160256)

(PUTPROPS ORCBM OPD 160768)

(PUTPROPS ORCM OPD 157696)

(PUTPROPS ORCMB OPD 159232)

(PUTPROPS ORCMI OPD 158208)

(PUTPROPS ORCMM OPD 158720)

(PUTPROPS POP OPD 91136)

(PUTPROPS POPJ OPD 91648)

(PUTPROPS PUSH OPD 90624)

(PUTPROPS PUSHJ OPD 90112)

(PUTPROPS ROT OPD 82432)

(PUTPROPS ROTC OPD 84480)

(PUTPROPS SETA OPD 141312)

(PUTPROPS SETAB OPD 142848)

(PUTPROPS SETAI OPD 141824)

(PUTPROPS SETAM OPD 142336)

(PUTPROPS SETCA OPD 151552)

(PUTPROPS SETCAB OPD 153088)

(PUTPROPS SETCAI OPD 152064)

(PUTPROPS SETCAM OPD 152576)

(PUTPROPS SETCM OPD 155648)

(PUTPROPS SETCMB OPD 157184)

(PUTPROPS SETCMI OPD 156160)

(PUTPROPS SETCMM OPD 156672)

(PUTPROPS SETM OPD 137216)

(PUTPROPS SETMB OPD 138752)

(PUTPROPS SETMI OPD 137728)

(PUTPROPS SETMM OPD 138240)

(PUTPROPS SETO OPD 161792)

(PUTPROPS SETOB OPD 163328)

(PUTPROPS SETOI OPD 162304)

(PUTPROPS SETOM OPD 162816)

(PUTPROPS SETZ OPD 131072)

(PUTPROPS SETZB OPD 132608)

(PUTPROPS SETZI OPD 131584)

(PUTPROPS SETZM OPD 132096)

(PUTPROPS SKIP OPD 110592)

(PUTPROPS SKIPA OPD 112640)

(PUTPROPS SKIPE OPD 111616)

(PUTPROPS SKIPG OPD 114176)

(PUTPROPS SKIPGE OPD 113152)

(PUTPROPS SKIPL OPD 111104)

(PUTPROPS SKIPLE OPD 112128)

(PUTPROPS SKIPN OPD 113664)

(PUTPROPS SOJ OPD 122880)

(PUTPROPS SOJA OPD 124928)

(PUTPROPS SOJE OPD 123904)

(PUTPROPS SOJG OPD 126464)

(PUTPROPS SOJGE OPD 125440)

(PUTPROPS SOJL OPD 123392)

(PUTPROPS SOJLE OPD 124416)

(PUTPROPS SOJN OPD 125952)

(PUTPROPS SOS OPD 126976)

(PUTPROPS SOSA OPD 129024)

(PUTPROPS SOSE OPD 128000)

(PUTPROPS SOSG OPD 130560)

(PUTPROPS SOSGE OPD 129536)

(PUTPROPS SOSL OPD 127488)

(PUTPROPS SOSLE OPD 128512)

(PUTPROPS SOSN OPD 130048)

(PUTPROPS SUB OPD 96256)

(PUTPROPS SUBB OPD 97792)

(PUTPROPS SUBI OPD 96768)

(PUTPROPS SUBM OPD 97280)

(PUTPROPS TDC OPD 217088)

(PUTPROPS TDCA OPD 219136)

(PUTPROPS TDCE OPD 218112)

(PUTPROPS TDCN OPD 220160)

(PUTPROPS TDN OPD 200704)

(PUTPROPS TDNA OPD 202752)

(PUTPROPS TDNE OPD 201728)

(PUTPROPS TDNN OPD 203776)

(PUTPROPS TDO OPD 225280)

(PUTPROPS TDOA OPD 227328)

(PUTPROPS TDOE OPD 226304)

(PUTPROPS TDON OPD 228352)

(PUTPROPS TDZ OPD 208896)

(PUTPROPS TDZA OPD 210944)

(PUTPROPS TDZE OPD 209920)

(PUTPROPS TDZN OPD 211968)

(PUTPROPS TLC OPD 213504)

(PUTPROPS TLCA OPD 215552)

(PUTPROPS TLCE OPD 214528)

(PUTPROPS TLCN OPD 216576)

(PUTPROPS TLN OPD 197120)

(PUTPROPS TLNA OPD 199168)

(PUTPROPS TLNE OPD 198144)

(PUTPROPS TLNN OPD 200192)

(PUTPROPS TLO OPD 221696)

(PUTPROPS TLOA OPD 223744)

(PUTPROPS TLOE OPD 222720)

(PUTPROPS TLON OPD 224768)

(PUTPROPS TLZ OPD 205312)

(PUTPROPS TLZA OPD 207360)

(PUTPROPS TLZE OPD 206336)

(PUTPROPS TLZN OPD 208384)

(PUTPROPS TRC OPD 212992)

(PUTPROPS TRCA OPD 215040)

(PUTPROPS TRCE OPD 214016)

(PUTPROPS TRCN OPD 216064)

(PUTPROPS TRN OPD 196608)

(PUTPROPS TRNA OPD 198656)

(PUTPROPS TRNE OPD 197632)

(PUTPROPS TRNN OPD 199680)

(PUTPROPS TRO OPD 221184)

(PUTPROPS TROA OPD 223232)

(PUTPROPS TROE OPD 222208)

(PUTPROPS TRON OPD 224256)

(PUTPROPS TRZ OPD 204800)

(PUTPROPS TRZA OPD 206848)

(PUTPROPS TRZE OPD 205824)

(PUTPROPS TRZN OPD 207872)

(PUTPROPS TSC OPD 217600)

(PUTPROPS TSCA OPD 219648)

(PUTPROPS TSCE OPD 218624)

(PUTPROPS TSCN OPD 220672)

(PUTPROPS TSN OPD 201216)

(PUTPROPS TSNA OPD 203264)

(PUTPROPS TSNE OPD 202240)

(PUTPROPS TSNN OPD 204288)

(PUTPROPS TSO OPD 225792)

(PUTPROPS TSOA OPD 227840)

(PUTPROPS TSOE OPD 226816)

(PUTPROPS TSON OPD 228864)

(PUTPROPS TSZ OPD 209408)

(PUTPROPS TSZA OPD 211456)

(PUTPROPS TSZE OPD 210432)

(PUTPROPS TSZN OPD 212480)

(PUTPROPS UFA OPD 45056)

(PUTPROPS XCT OPD 89088)

(PUTPROPS XOR OPD 143360)

(PUTPROPS XORB OPD 144896)

(PUTPROPS XORI OPD 143872)

(PUTPROPS XORM OPD 144384)

(PUTPROPS PSETN OPD 9216)

(PUTPROPS PIUNBX OPD 8704)

(PUTPROPS PIBOX OPD 8192)

(PUTPROPS PSTNB OPD 3584)

(PUTPROPS PSTB OPD 3072)

(PUTPROPS PBIND OPD 7168)

(PUTPROPS PBIND2 OPD 7680)

(PUTPROPS PSTN OPD 2560)

(PUTPROPS PSTE OPD 2048)

(PUTPROPS CKUDT OPD 11264)

(PUTPROPS PSTEI OPD 11776)

(PUTPROPS PSTNI OPD 12288)

(PUTPROPS JSYS OPD 34816)

(PUTPROPS ACCALL OPD 13312)

(PUTPROPS CCALL OPD 6656)

(PUTPROPS LNCALL OPD 10240)

(PUTPROPS LNCAL2 OPD 10752)

(PUTPROPS HCCAL OPD 4096)

(PUTPROPS EXCAL OPD 6144)

(PUTPROPS SBCAL OPD 12800)

(PUTPROPS ALNCAL OPD 13824)

(PUTPROPS LAPPOP MACRO [NIL (LOC (ASSEMBLE NIL
				           (POPN 1])

(PUTPROPS LAPNREF MACRO [NIL (LOC (ASSEMBLE NIL
					    (NREF (MOVE 1 , 0])

(PUTPROPS LAPNSET MACRO [NIL (ASSEMBLE NIL
				       (NREF (SETZM 0])

(PUTPROPS LAPRBIT MACRO [(B)
			 (ASSEMBLE NIL
			           (LDV2 (QUOTE B)
					 SP 2)
			           (SUBI 2 , ASZ)
			           (MOVEI 1 , 1)
			           (LSH 1 , 0 (2))
			           (NREF (IORM 1 , 0])

(PUTPROPS LAPPUSH0 MACRO (NIL (ASSEMBLE NIL
				        (PUSHN = 0))))

(PUTPROPS NSUBPAIR MACRO [(N V L)
			  (PROG (FLG)
			        (RETURN (NSUBPR N V L])

(RPAQQ LAPBLOCKS ((LAPBLOCK LAP LAPMAP LAP1 LAPSUB LAPOUT LAPXR LAPAC LAPADR LAPNLIT LAPLIT NMEMB 
			    LAPUTGU LAPUTGG LAPUTG SETU LAPDFT LAPDFT1 LAPCKT LAPPW LAPPT LAPP1 
			    ADDBAS ARGN ASSOCN GB PUSHV PUSHVP VCLL VLCLL VCALL VREF LAPSPECREF TREF 
			    BYTES LAPLOCALP BIND BIND1 BIND2 BLKBIND UNBIND DEFUNRET RETENT MKLCL 
			    FASTCALL MKENTRY LAPERROR LAPST LAPFW NSUBPR (ENTRIES LAP VREF)
			    (BLKAPPLYFNS BIND TREF BLKBIND UNBIND DEFUNRET RETENT MKLCL FASTCALL 
					 MKENTRY BYTES SETU ARGN ADDBAS LAPLIT PUSHV VCLL VLCLL)
			    (SPECVARS LOCALVARS SPECVARS FREE LL CL P AST UTAGS BACKAST LST BNDLEV UD 
				      ETAGS REMCODE GTAGS FLG WD S LNK AF R LOC ENTRIES FN))))
[DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY
(BLOCK: LAPBLOCK LAP LAPMAP LAP1 LAPSUB LAPOUT LAPXR LAPAC LAPADR LAPNLIT LAPLIT NMEMB LAPUTGU 
	LAPUTGG LAPUTG SETU LAPDFT LAPDFT1 LAPCKT LAPPW LAPPT LAPP1 ADDBAS ARGN ASSOCN GB PUSHV 
	PUSHVP VCLL VLCLL VCALL VREF LAPSPECREF TREF BYTES LAPLOCALP BIND BIND1 BIND2 BLKBIND UNBIND 
	DEFUNRET RETENT MKLCL FASTCALL MKENTRY LAPERROR LAPST LAPFW NSUBPR (ENTRIES LAP VREF)
	(BLKAPPLYFNS BIND TREF BLKBIND UNBIND DEFUNRET RETENT MKLCL FASTCALL MKENTRY BYTES SETU ARGN 
		     ADDBAS LAPLIT PUSHV VCLL VLCLL)
	(SPECVARS LOCALVARS SPECVARS FREE LL CL P AST UTAGS BACKAST LST BNDLEV UD ETAGS REMCODE GTAGS 
		  FLG WD S LNK AF R LOC ENTRIES FN))
]
(PUTD (QUOTE NSUBPAIR)
      (GETD (QUOTE SUBPAIR)))
(DECLARE: DOEVAL@COMPILE DONTCOPY 

(PUTPROPS OBOUT MACRO ((BYTE JFN)
		       (ASSEMBLE NIL
			         (CQ JFN)
			         [E (CEXP2 (QUOTE (VAG BYTE]
			         (JSYS 51Q))))

(PUTPROPS OSFBSZ MACRO ((JFN N)
			(ASSEMBLE NIL
			          (CQ JFN)
			          [E (CEXP2 (QUOTE (VAG N]
			          (JSYS 46Q)
			          (JFCL))))

(PUTPROPS IDP MACRO ((I)
		     (AND I (LITATOM I)
			  (NEQ I T))))
)
(DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY 

(ADDTOVAR NLAMA BYTES)

(ADDTOVAR NLAML MKLCL PRET FREBND TREF GREF FREF ARGN ADDBAS VREF SETU)

(ADDTOVAR DONTCOMPILEFNS LAPPUSH0 LAPPOP LAPNREF LAPRBIT LAPNSET NOUT OBOUT)
)
(DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS 

(ADDTOVAR NLAMA BYTES)

(ADDTOVAR NLAML VREF MKLCL DEFUNRET TREF ARGN ADDBAS SETU)

(ADDTOVAR LAMA )
)
(PUTPROPS LAP COPYRIGHT ("Xerox Corporation" 1984))
(DECLARE: DONTCOPY
  (FILEMAP (NIL (1997 42753 (LAP 2009 . 4807) (LAPLOCALP 4811 . 4942) (LAPMAP 4946 . 5251) (LAP1 5255 . 8629) (LAPSUB 8633 . 8896) (
LAPOUT 8900 . 9970) (LAPXR 9974 . 10313) (LAPAC 10317 . 10674) (LAPADR 10678 . 11607) (LAPNLIT 11611 . 12144) (LAPLIT 12148 . 12581)
 (NMEMB 12585 . 13141) (LAPUTGU 13145 . 14369) (LAPUTGG 14373 . 15009) (LAPUTG 15013 . 15658) (SETU 15662 . 15907) (LAPDFT 15911 . 
16895) (LAPDFT1 16899 . 17556) (LAPCKT 17560 . 18694) (LAPPW 18698 . 18992) (LAPPT 18996 . 19225) (LAPP1 19229 . 20237) (PUSHV 20241
 . 20763) (PUSHVP 20767 . 20925) (VCLL 20929 . 21064) (VLCLL 21068 . 21206) (VCALL 21210 . 21804) (VREF 21808 . 23370) (LAPSPECREF 
23374 . 24340) (ADDBAS 24344 . 24853) (ARGN 24857 . 25424) (ASSOCN 25428 . 25704) (GB 25708 . 26108) (TREF 26112 . 26262) (BYTES 
26266 . 26482) (BIND 26486 . 27610) (BIND1 27614 . 28255) (BIND2 28259 . 29530) (BLKBIND 29534 . 30507) (UNBIND 30511 . 30670) (
DEFUNRET 30674 . 31866) (RETENT 31870 . 33495) (MKLCL 33499 . 34032) (FASTCALL 34036 . 34113) (MKENTRY 34117 . 34901) (LAPERROR 
34905 . 34975) (LAPST 34979 . 40703) (LAPFW 40707 . 41152) (LAPPUSH0 41156 . 41201) (LAPRBIT 41205 . 41280) (LAPPOP 41284 . 41313) (
LAPNREF 41317 . 41347) (LAPNSET 41351 . 41395) (NSUBPR 41399 . 42397) (NOUT 42401 . 42680) (OBOUT 42684 . 42750)))))
STOP
STOP
    