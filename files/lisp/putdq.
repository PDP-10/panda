(PROGN
(PRIN1 (QUOTE "11-Jul-84 23:44:47"))(TERPRI)
(PUTD (QUOTE PUTDQ)
      (QUOTE [NLAMBDA (X Y)
		      (PUTD X Y)
		      X]))(PRINT (QUOTE (Functions: LOAD MAKEPDQ 
						    GETPROP MAPC PUT 
						    DEFINEQ DEFINE NEQ 
						    SELECTQ SELECTQ1 
						    CAAR CADR CDDR 
						    CAADR LAPRD BINRD 
						    DOVARLINK FIXP 
						    RPAQQ ADD1 
						    IDIFFERENCE 
						    FILECREATED HELP 
						    VIRGINFN DEFC 
						    MKSWAPP FILEMAP 
						    DEFLIST OSFBSZ OBIN 
						    OSIN LOADUP 
						    PRETTYCOMPRINT 
						    SETPROPLIST SETCV 
						    OPENFILE PUTDQ?)))
(PUTDQ LOAD
[LAMBDA (FILE LDFLG PRINTFLG)                               (* lmm 
							    
"24-FEB-83 20:04")
  (PROG (OLDI LOADA FILECREATEDLST)
        (COND
	  ((OPENP FILE)
	    (CLOSEF FILE)))
        [SETQ OLDI (COND
	    ((INFILE FILE))
	    (T (RETURN (PRINT (CONS FILE (QUOTE (NOT FOUND)))
			      T]
    LC  (COND
	  ((OR (NULL (SETQ LOADA (READ)))
	       (EQ LOADA (QUOTE STOP)))
	    (CLOSEF FILE)
	    (INPUT OLDI)
	    (RETURN)))
        (COND
	  ((NOT (ATOM LOADA))
	    [SETQ LOADA (COND
		((AND (EQ LDFLG (QUOTE PROP))
		      (EQ (CAR LOADA)
			  (QUOTE DEFINEQ)))
		  [MAPC (CDR LOADA)
			(FUNCTION (LAMBDA (XD)
			    (PUT (CAR XD)
				 (QUOTE EXPR)
				 (CADR XD]
		  (QUOTE (DEFS SAVED)))
		(T (EVAL LOADA]
	    (COND
	      (PRINTFLG (PRINT LOADA)))
	    (GO LC)))
        (LAPRD (COND
		 (PRINTFLG (PRINT LOADA))
		 (T LOADA)))
        (COND
	  ((EQ LDFLG (QUOTE PROP))
	    (UNSAVEDEF LOADA)))
        (GO LC])

(PUTDQ MAKEPDQ
[LAMBDA (F)                                                 (* lmm 
							    
"11-Jul-84 23:44")
  (PROG (V FONTCHANGEFLG CHANGECHAR)
        (OUTFILE F)
        (PRIN1 (QUOTE "(PROGN"))
        (TERPRI)
        [PRINTDEF (LIST (QUOTE PRIN1)
			(LIST (QUOTE QUOTE)
			      (DATE]
        (PRINT (QUOTE (TERPRI)))
        [PRINTDEF (QUOTE (PUTD (QUOTE PUTDQ)
			       (QUOTE (NLAMBDA (X Y)
					       (PUTD X Y)
					       X]
        [PRINTDEF (LIST (QUOTE PRINT)
			(LIST (QUOTE QUOTE)
			      (CONS (QUOTE Functions:)
				    (SETQ V
				      (QUOTE (LOAD MAKEPDQ GETPROP MAPC 
						   PUT DEFINEQ DEFINE 
						   NEQ SELECTQ SELECTQ1 
						   CAAR CADR CDDR CAADR 
						   LAPRD BINRD 
						   DOVARLINK FIXP RPAQQ 
						   ADD1 IDIFFERENCE 
						   FILECREATED HELP 
						   VIRGINFN DEFC 
						   MKSWAPP FILEMAP 
						   DEFLIST OSFBSZ OBIN 
						   OSIN LOADUP 
						   PRETTYCOMPRINT 
						   SETPROPLIST SETCV 
						   OPENFILE PUTDQ?]
                                                            (* To add a 
							    new function
							    to PUTDQ, 
							    add its name
							    to this 
							    list.)
        (TERPRI)
        [MAPC V (FUNCTION (LAMBDA (V1)
		  (PRIN1 (QUOTE "(PUTDQ "))
		  (PRINT V1)
		  (PRINTDEF [OR (LISTP (GETPROP V1 (QUOTE EXPR)))
				(LISTP (GETD V1))
				(ERROR (CONS V1 (QUOTE (- UNDEFINED]
			    NIL T)
		  (PRIN1 (QUOTE %)))
		  (TERPRI)
		  (TERPRI]
        [SETQ V
	  (QUOTE ((PRETTYHEADER "FILE CREATED ")
		   (LINKEDFNS)
		   (NOSWAPFNS (QUOTE (LAPRD BINRD FNTYP NOLINKDEF 
					    LISPXPRINT LISPXPRIN1 
					    LISPXPRIN2 LISPXSPACES 
					    LISPXTERPRI ADDSPELLBLOCK 
					    SAVESET DCHCONBLOCK 
					    MKSWAP2BLOCK)))
		   (MKSWAPSIZE 20)
		   (COMPVERSION (QUOTE (2 . 2)))
		   (SPAGHETTIFLG T)
		   (SHALLOWFLG T)
		   (FILERDTBL NIL)
		   (OPENSUBRS OPENSUBRS)
		   (FILELINELENGTH 72]

          (* To add a new global variable to PUTDQ, add it to 
	  the list here. Each item is 
	  (Varname Form) where Form evaluates, AT MAKEPDQ 
	  TIME, to the desired value for initializing the 
	  variable.)


        [MAPC V (FUNCTION (LAMBDA (V1)
		  (PRINTDEF (LIST (QUOTE SETQ)
				  (CAR V1)
				  (LIST (QUOTE QUOTE)
					(EVAL (CADR V1]     (* Finally, 
							    here is the 
							    place for 
							    
miscellaneous quoted expressions (other than PUTDQ, MOVD, or SETQ type 
							    things 
							    handled 
							    above))
        [PRINTDEF (QUOTE (PROGN [PUTD (QUOTE *)
				      (COND
					((SUBRP (QUOTE QUOTE))
					  (GETD (QUOTE QUOTE)))
					(T (QUOTE (NLAMBDA L L]
				(PUTD (QUOTE DECLARE)
				      (GETD (QUOTE QUOTE)))
				(SETCV)
				(PUT (QUOTE PUSHJ)
				     (QUOTE OPD)
				     90112)
				(PUT (QUOTE EXCAL)
				     (QUOTE OPD)
				     6144)
				(PUT (QUOTE SBCAL)
				     (QUOTE OPD)
				     12800)
				(SETQ BYTELISPFLG NIL]
        [SETQ V (QUOTE ((QUOTE DECLARE)
			 (PUTD /PUTD)
			 (PRINT LISPXPRINT)
			 (CDR GETPROPLIST]                  (* Here is 
							    where all 
							    the MOVD 
							    equivalents 
							    go.)
        [MAPC V (FUNCTION (LAMBDA (V1)
		  (PRINTDEF (LIST (QUOTE PUTD)
				  (LIST (QUOTE QUOTE)
					(CADR V1))
				  (LIST (QUOTE GETD)
					(LIST (QUOTE QUOTE)
					      (CAR V1]      (* Close the
							    big progn on
							    output 
							    file.)
        (TERPRI)
        (PRINT (QUOTE (CLOSEF)))
        (PRIN1 (QUOTE %)))
        (TERPRI)
        (PRINT (QUOTE STOP))                                (* Supposed 
							    to make the 
							    thing LOAD 
							    right but 
							    doesn't so 
							    must still 
							    use 
							    
"_EVAL((EVAL(READ]")
        (TERPRI)
        (RETURN (CLOSEF F])

(PUTDQ GETPROP
[LAMBDA (X Y)
  (PROG (Z)
        (SETQ Z (GETPROPLIST X))
    LOOP[COND
	  ((NULL Z)
	    (RETURN NIL))
	  ((EQ (CAR Z)
	       Y)
	    (RETURN (CADR Z]
        (SETQ Z (CDDR Z))
        (GO LOOP])

(PUTDQ MAPC
[LAMBDA (MAPX MAPFN1 MAPFN2)
  (PROG NIL
    LP  (COND
	  ((NULL MAPX)
	    (RETURN)))
        (APPLY* MAPFN1 (CAR MAPX))
        [SETQ MAPX (COND
	    (MAPFN2 (APPLY* MAPFN2 MAPX))
	    (T (CDR MAPX]
        (GO LP])

(PUTDQ PUT
[LAMBDA (X Y Z)
  (PROG (XX)
        (COND
	  ([NULL (LISTP (SETQ XX (GETPROPLIST X]
	    (SETPROPLIST X (LIST Y Z))
	    (GO OUT)))
    LOOP[COND
	  ([NULL (LISTP (SETQ X (CDR XX]
	    (RPLACA (RPLACD XX (LIST Z (CAR XX)))
		    Y))
	  ((EQ (CAR XX)
	       Y)
	    (RPLACA (CDR XX)
		    Z))
	  ((LISTP (SETQ XX (CDR X)))
	    (GO LOOP))
	  (T (RPLACD X (LIST Y Z]
    OUT (RETURN Z])

(PUTDQ DEFINEQ
[NLAMBDA X
  (DEFINE X])

(PUTDQ DEFINE
[LAMBDA (X)
  (COND
    ((NULL X)
      NIL)
    (T
      (CONS
	([LAMBDA (Y CY)
	    [COND
	      [(ATOM Y)
		(HELP (CONS Y (QUOTE (- INCORRECT DEFINING FORM]
	      (T (COND
		   ((GETD CY)
		     (VIRGINFN CY T)))
		 (PUTD CY (COND
			 [(NULL (CDDR Y))
			   (COND
			     [(EQ (CAADR Y)
				  (QUOTE NLAMDA))
			       (CONS (QUOTE NLAMBDA)
				     (CONS (CAADR (CADR Y))
					   (CDDADR Y]
			     (T (CADR Y]
			 (T (CONS (QUOTE LAMBDA)
				  (CDR Y]
	    (CAR Y]
	  (CAR X)
	  (CAAR X))
	(DEFINE (CDR X])

(PUTDQ NEQ
[LAMBDA (X Y)
  (NOT (EQ X Y])

(PUTDQ SELECTQ
[NLAMBDA SELCQ
  (APPLY (QUOTE PROGN)
	 (SELECTQ1 (EVAL (CAR SELCQ)
			 (QUOTE SELECTQ))
		   (CDR SELCQ))
	 (QUOTE SELECTQ])

(PUTDQ SELECTQ1
[LAMBDA (M L)
  (PROG (C)
    LP  (SETQ C L)
        [COND
	  ((NULL (SETQ L (CDR L)))
	    (RETURN C))
	  ([OR (EQ (CAR (SETQ C (CAR C)))
		   M)
	       (AND (LISTP (CAR C))
		    (FMEMB M (CAR C]
	    (RETURN (CDR C]
        (GO LP])

(PUTDQ CAAR
[LAMBDA (X)
  (CAR (CAR X])

(PUTDQ CADR
[LAMBDA (X)
  (CAR (CDR X])

(PUTDQ CDDR
[LAMBDA (X)
  (CDR (CDR X])

(PUTDQ CAADR
[LAMBDA (X)
  (CAR (CADR X])

(PUTDQ LAPRD
[LAMBDA (FN)                                                (* lmm 
							    
"15-SEP-78 05:12")

          (* A note on bootstrap: LAPRD and BINRD are defined 
	  in PUTDQ, but DOLINK is not, so thatLINKED functions
	  calls cannot be employed in BASIC until DOLINK is 
	  defined. Therefore, the initial block in BASIC 
	  defines DOLINK. It also redefines LAPRD and BINRD 
	  because in the case of linked functon calls, the 
	  defnitions for these functions use undefined 
	  functions such as FMEMB. AFter this initial block, 
	  BINRD is redefined so as to use LINKED calls.
	  CGETD, FNTYP, ARGLIST, NARGS, and NCONC1 are 
	  compiled using linked calls to facilitate 
	  (STREQUAL is included in this block because EQUAL 
	  uses it) breaking. Note that they must appear in 
	  cbasic before RELINK, which uses them.
	  also, CGETD must appear before FNTYP and FNTYP 
	  before ARGLIST. Next appears LINKBLOCK containing 
	  RELINK and DOLINK, finally EQUAL as a block.)


  (PROG (LA Z)
        [COND
	  ((EQ (PEEKC)
	       (QUOTE % ))
	    (COND
	      ((EQ (SETQ LA (READ NIL NIL))
		   (QUOTE BINARY))
		(RETURN (BINRD FN NIL LA)))
	      ((SETQ Z (GETPROP LA (QUOTE CODEREADER)))     (* Peters 
							    hook for 
							    interfacing 
							    byte 
							    compiler.)
		(RETURN (APPLY* (CAR Z)
				FN NIL LA]
        (ERROR (QUOTE "Bad compiled function")
	       FN])

(PUTDQ BINRD
[LAMBDA (FN FILE)
  (PROG ([JFN (VAG (OPNJFN (OR FILE (INPUT]
	 LA PLITORG LEN DF ENTRY CVALS VAL PTR)
        (READC FILE)
        (OSFBSZ JFN 36)
        (SETQ LA (OBIN JFN))
        (SETQ PLITORG (OBIN JFN))
        (SETQ LEN (OBIN JFN))
        (SETQ DF (ARRAY LA PLITORG))
        (SETQ ENTRY (VAG (IPLUS (LOC DF)
				2)))                        (* Read the 
							    code.)
        (OSIN ENTRY PLITORG JFN)                            (* Read the 
							    relocation 
							    data.)
        (OSIN (VAG (IPLUS (LOC ENTRY)
			  LEN))
	      (IPLUS LA (MINUS LEN))
	      JFN)
        (FRPLACD DF (VAG (IPLUS 2 LEN)))                    (* Store 
							    relocation 
							    origin.)
        (RELOC DF (LOC ENTRY))
        (OSFBSZ JFN 7)                                      (* Now read 
							    the literals
							    and take 
							    care of 
							    linked 
							    calls.)
        [PROG ((SLOC (VAG (IPLUS (LOC ENTRY)
				 PLITORG)))
	       (PLIT (VAG (IPLUS (LOC ENTRY)
				 LEN)))
	       Z)
	  C   (COND
		((IGREATERP (LOC PLIT)
			    (LOC SLOC))
		  (SETQ Z (READ FILE FILERDTBL))
		  [COND
		    [(LISTP Z)
		      (COND
			[(EQ (CAR Z)
			     (QUOTE LINKED-FN-CALL))
			  (DOLINK SLOC 0 (CDR Z)
				  FN T)
			  (COND
			    ((NULL (FMEMB FN LINKEDFNS))
			      (SETQ LINKEDFNS (CONS FN LINKEDFNS]
			((EQ (CAR Z)
			     (QUOTE VARIABLE-VALUE-CELL))
			  (DOVARLINK ENTRY SLOC Z))
			[(AND (LISTP (CDR Z))
			      (EQ (CADR Z)
				  (QUOTE VARIABLE-VALUE-CELL))
			      (CDDR Z))
			  (DOVARLINK ENTRY SLOC (CDR Z))
			  (FRPLACD SLOC (CAR SLOC))
			  (FRPLACA SLOC (COND
				     ((AND (LISTP (CAR Z))
					   (EQ (CAAR Z)
					       (QUOTE UNBOXED-NUM)))
				       (VAG (CDAR Z)))
				     (T (CAR Z]
			(T (FRPLACA SLOC (CAR Z))
			   (FRPLACD SLOC (COND
				      ((EQ (CDR Z)
					   0)
					(VAG 0))
				      (T (CDR Z]
		    (T (CLOSER (LOC SLOC)
			       (LOC Z]
		  [SETQ SLOC (VAG (ADD1 (LOC SLOC]
		  (GO C]
        (SETQ CVALS (READ FILE FILERDTBL))                  (* CVALS is 
							    always a 
							    list, so 
							    there cannot
							    be a c/r 
							    hanging in 
							    anyone's 
							    input buffer
							    at this 
							    point.)
        (OSFBSZ JFN 18)
    L1  (OR CVALS (GO OUT))
        (OR (SETQ VAL (GETPROP (CAR CVALS)
			       (QUOTE COREVAL)))
	    (ERROR (QUOTE "No COREVAL")
		   (CAR CVALS)))
        (SETQ VAL (VAG (LOGAND VAL 262143)))
    L2  [SETQ PTR (VAG (IPLUS (LOC DF)
			      (OBIN JFN]
        (COND
	  ((EQ PTR DF)                                      (* I.E. WAS 
							    0 READ)
	    (SETQ CVALS (CDR CVALS))
	    (GO L1)))
        [FRPLACA PTR (VAG (IPLUS (OPENR (LOC PTR))
				 (LOC VAL]
        (GO L2)
    OUT (OSFBSZ JFN 7)
        (DEFC FN ENTRY])

(PUTDQ DOVARLINK
[LAMBDA (ENTRY SLOC LIT)                                    (* dcl: 17 
							    DEC 75 
							    00:37)
  (PROG [(X (VAG (CDDR LIT]
        [CLOSER (LOC SLOC)
		(LOC (SETQ LIT (AT2VC (CADR LIT]
    L1  (AND (EQ X (VAG 0))
	     (RETURN))
        [SETQ X (CAR (SETQ SLOC (VAG (IPLUS (LOC ENTRY)
					    (LOC X]
        (FRPLACA SLOC LIT)
        (GO L1])

(PUTDQ FIXP
[LAMBDA (X)
  (AND (NUMBERP X)
       (NOT (FLOATP X))
       X])

(PUTDQ RPAQQ
[NLAMBDA (X Y)
  (SETTOPVAL X Y)
  X])

(PUTDQ ADD1
[LAMBDA (X)
  (IPLUS X 1])

(PUTDQ IDIFFERENCE
[LAMBDA (A B)
  (IPLUS A (MINUS B])

(PUTDQ FILECREATED
[NLAMBDA (X)
  (PRIN1 PRETTYHEADER T)
  (PRIN1 X T)
  (TERPRI T])

(PUTDQ HELP
[LAMBDA (HELPX HELPY)
  (PROG NIL
        (PRIN1 (QUOTE "
HELP:
")
	       T)
        (PRIN1 HELPX T)
        (TERPRI T)
        (PRIN1 HELPY T)
    LOOP(NLSETQ (PROGN (PRIN1 (QUOTE "
:")
			      T)
		       (PRINT (EVAL (READ T))
			      T)))
        (GO LOOP])

(PUTDQ VIRGINFN
[LAMBDA (FN)
  (GETD FN])

(PUTDQ DEFC
[LAMBDA (NM DF)
  (PUTD NM DF])

(PUTDQ MKSWAPP
[LAMBDA NIL NIL])

(PUTDQ FILEMAP
[NLAMBDA NIL])

(PUTDQ DEFLIST
[LAMBDA NIL NIL])

(PUTDQ OSFBSZ
[LAMBDA (JFN N)
  (JSYS 46Q (LOC JFN)
	N)])

(PUTDQ OBIN
[LAMBDA (JFN)
  (JSYS 50Q (LOC JFN)
	0 0 2)])

(PUTDQ OSIN
[LAMBDA (ORG N JFN)
  (COND
    ((IGREATERP N 0)
      (JSYS 52Q (LOC JFN)
	    (LOGOR (LOC ORG)
		   -333400000000Q)
	    (MINUS N))])

(PUTDQ LOADUP
[LAMBDA (NOSWAP)
  (SETQ NOSWAPFLG T)

          (* Do NOT make anything swapped yet.
	  However reset NOSWAPFLG to normal setting 
	  (NIL) when done. Should be no other references to 
	  NOSWAPFLG in any place in the bootstrap, including 
	  the file SWAP. JWG 9/74)


  (MINFS 10000 1)
  [MAPC (QUOTE ((BOOTSTRAPCOMS BOOTSTRAP.COM <NEWLISP>BOOTSTRAP.COM 
			       <LISP>BOOTSTRAP.COM)
		 (CODEFORMATCOMS CODEFORMAT.COM <NEWLISP>CODEFORMAT.COM 
				 <LISP>CODEFORMAT.COM)
		 (BASICCOMS BASIC.COM <NEWLISP>BASIC.COM 
			    <LISP>BASIC.COM)
		 (MISCCOMS MISC.COM <NEWLISP>MISC.COM <LISP>MISC.COM)
		 (SWAPCOMS SWAP.COM <NEWLISP>SWAP.COM <LISP>SWAP.COM)
		 (ASSEMBLECOMS ASSEMBLE.COM <NEWLISP>ASSEMBLE.COM 
			       <LISP>ASSEMBLE.COM)
		 (LOADUPCOMS LOADUP.COM <NEWLISP>LOADUP.COM 
			     <LISP>LOADUP.COM)
		 (MACHINEDEPENDENTCOMS MACHINEDEPENDENT.COM 
				      <NEWLISP>MACHINEDEPENDENT.COM 
				       <LISP>MACHINEDEPENDENT.COM)
		 (MACHINEINDEPENDENTCOMS MACHINEINDEPENDENT.COM 
				    <NEWLISP>MACHINEINDEPENDENT.COM 
				       <LISP>MACHINEINDEPENDENT.COM)))
	(FUNCTION (LAMBDA (FL)
	    (PROG NIL
	          (COND
		    ((LISTP (GETTOPVAL (CAR FL)))           (* CAR of FL
							    is the 
							    fileCOMS 
							    atom.)
		      (TERPRI T)
		      (PRIN2 (CAR FL)
			     T)
		      (PRIN1 (QUOTE 
			      " is already a list, so not loading ")
			     T)
		      (PRINT (CADR FL)
			     T)
		      (RETURN)))
	          (MAPC (CDR FL)
			(FUNCTION [LAMBDA NIL NIL])
			(FUNCTION (LAMBDA (FL1)             (* In lieu 
							    of SOME 
							    being 
							    defined...)
			    (COND
			      ((INFILEP (CAR FL1))
				(PRIN1 (QUOTE "
Loading ")
				       T)
				(PRINT (LOAD (PRINT (CAR FL1)
						    T)
					     T)
				       T)
				NIL)
			      ((CDR FL1))
			      ((ERROR (CONS (CADR FL)
					    (QUOTE (- NOT FOUND!]
  (PRIN1 (QUOTE "
Relinking world...")
	 T)
  (RELINK (QUOTE WORLD))
  (TERPRI T)
  (OR NOSWAP (PROGN (SETSBSIZE 64)
		    (SETQ NOSWAPFLG)))
  (QUOTE "LOADUP in PUTDQ finished."])

(PUTDQ PRETTYCOMPRINT
[NLAMBDA (X)
  (PRINT X T T])

(PUTDQ SETPROPLIST
[LAMBDA (X Y)
  (CDR (FRPLACD X Y])

(PUTDQ SETCV
[LAMBDA NIL                                                 (* lmm 
							    
"26-AUG-78 02:58")
  (PROG (Z)
        (SETQ Z 0)
        (MAPC OPENSUBRS (FUNCTION (LAMBDA (E)
		  (PUT E (QUOTE COREVAL)
		       (LOC (CDR (GETD E])

(PUTDQ OPENFILE
[LAMBDA (FILE ACCESS)
  (COND
    ((EQ ACCESS (QUOTE OUTPUT))
      (OUTPUT (OUTFILE FILE)))
    (T (INPUT (INFILE FILE])

(PUTDQ PUTDQ?
[NLAMBDA (X Y)                                              (* lmm 
							    
"11-Jul-84 23:43")
  (OR (GETD X)
      (PUTD X Y))
  X])

(SETQ PRETTYHEADER (QUOTE "FILE CREATED "))(SETQ LINKEDFNS
						 (QUOTE NIL))(SETQ
  NOSWAPFNS
  (QUOTE (LAPRD BINRD FNTYP NOLINKDEF LISPXPRINT LISPXPRIN1 LISPXPRIN2 
		LISPXSPACES LISPXTERPRI ADDSPELLBLOCK SAVESET 
		DCHCONBLOCK MKSWAP2BLOCK)))(SETQ MKSWAPSIZE
						 (QUOTE 20))(SETQ
  COMPVERSION
  (QUOTE (2 . 2)))(SETQ SPAGHETTIFLG (QUOTE T))(SETQ SHALLOWFLG
						     (QUOTE T))(SETQ
  FILERDTBL
  (QUOTE NIL))(SETQ OPENSUBRS
		    (QUOTE (EQUAL STREQUAL EQP SET INTERRUPTABLE CONS 
				  OPENP INTERRUPTABLEP)))(SETQ
  FILELINELENGTH
  (QUOTE 72))(PROGN [PUTD (QUOTE *)
			  (COND ((SUBRP (QUOTE QUOTE))
				 (GETD (QUOTE QUOTE)))
				(T (QUOTE (NLAMBDA L L]
		    (PUTD (QUOTE DECLARE)
			  (GETD (QUOTE QUOTE)))
		    (SETCV)
		    (PUT (QUOTE PUSHJ)
			 (QUOTE OPD)
			 90112)
		    (PUT (QUOTE EXCAL)
			 (QUOTE OPD)
			 6144)
		    (PUT (QUOTE SBCAL)
			 (QUOTE OPD)
			 12800)
		    (SETQ BYTELISPFLG NIL))(PUTD (QUOTE DECLARE)
						 (GETD (QUOTE QUOTE)))(
  PUTD (QUOTE /PUTD)
       (GETD (QUOTE PUTD)))(PUTD (QUOTE LISPXPRINT)
				 (GETD (QUOTE PRINT)))(PUTD
  (QUOTE GETPROPLIST)
  (GETD (QUOTE CDR)))
(CLOSEF)
)
STOP

