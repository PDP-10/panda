                                 SYSJOB

SYSJOB is a program which  starts  and  controls  a  number  of
programs  which  perform  system functions.  These programs run
continuously  and  do  not   usually   require   any   terminal
interaction.  SYSJOB is also responsible for initiating the job
which controls the set of "operator" jobs and  for  maintaining
control over that job in the absence of an actual operator.

SYSJOB is started automatically by the monitor and is run under
job  0  along  with other monitor background functions.  SYSJOB
resides in its own process and creates other  processs  to  run
the  various  programs.   When  SYSJOB is started, it reads the
file <SYSTEM>SYSJOB.RUN  which  contains  the  initial  set  of
commands.   These commands cause the normal background programs
and the operator job to  be  started.   Thereafter,  SYSJOB  is
dormant except in the following events:

    1.  One  of  the  background  programs  halts  or  crashes.
        SYSJOB  will report the status of the halted process on
        the CTY.

    2.  The operator wishes to communicate with or control  one
        of the background programs.

Both of these events are relatively  unusual.   The  background
programs  will not halt under ordinary circumstances.  The only
normal occurrance of case 2 is when the operator is  going  off
duty  and  the  system  is changing from attended to unattended
status.  In this case, the operator will cause SYSJOB to assume
control of the operator job which had been running on the CTY.

COMMUNICATING WITH SYSJOB

Commands may be given to SYSJOB at any time via the CTRL-ESPEAK
command.  All text beginning on the next line and continuing to
the next  CTRL-Z  will  be  taken  as  input  to  SYSJOB.   The
CTRL-ESPEAK   command   writes   this   text   into   the  file
<SYSTEM>SYSJOB.COMMANDS and issues a wakeup request to  SYSJOB.
Upon  waking  up,  SYSJOB  reads  the  file  and  performs  the
commands.

SYSJOB COMMANDS

SYSJOB commands are in the form of a keyword possibly  followed
by  arguments.   The  same  command  set  is  recognized in the
SYSJOB.RUN and SYSJOB.COMMANDS files.  Several of the  commands
affect  an  inferior  process;   these  are  RUN, KILL, RESUME,
FREEZE.  Certain other commands affect a job  being  controlled
via  a PTY;  these are JOB, KILLJOB, CCJOB.  Other commands are
STATUS AND RELOAD described below.

PROCESS COMMANDS

RUN filespec

        This command creates an inferior process and  runs  the
        specified   program   in   it.   The  process  will  be
        identified by a name which consists of  the  first  six
        characters of the name portion of the filespec.

KILL name

        This command kills the process of the specified name.

FREEZE name

        This command executes a freeze on the  process  of  the
        specified name;  this may later be undone by the RESUME
        command.

RESUME name

        This command executes a resume on the  process  of  the
        specified  name  thus  undoing the effect of a previous
        FREEZE.

JOB COMMANDS

JOB ident textstring

        This command transmits text to a job via  a  PTY.   The
        ident  is an arbitrary small integer not related to the
        system job number of the  job  being  controlled.   The
        operator  should  choose the smallest number (beginning
        with 0) not presently in use when a new job is desired.
        Thereafter, that number will identify that job.

        The textstring is an arbitrary string surrounded by any
        character  not  occuring  within  the  string, e.g., /a
        string of characters/.  The string may include carriage
        returns  and  other  control  characters,  and specific
        control characters may be indicated by the sequence  ^g
        (up-arrow  followed  by  the  printing equivalent).  If
        there is no job in existence  when  a  JOB  command  is
        executed,  a CTRL-C is sent ahead of the specified text
        to create one.   Note  however  that  the  job  is  not
        automatically  logged  in,  so  a LOGIN command must be
        given via the JOB command.

        Any output from the job will be fielded by  SYSJOB  and
        typed  on the CTY.  Each line will be prefixed with the
        ident number of the  job  which  produced  the  output.
        Output  will only be typed at the conclusion of a line,
        so prompt characters coming from a job will not be seen
        until the remainder of the line has been typed in.

KILLJOB ident

        This forces a LOGOUT of the specified job.

CCJOB ident

        This transmits two CTRL-Cs to  the  specified  job  and
        holds  any  further  input  until the CTRL-Cs have been
        handled.


OTHER COMMANDS

STATUS

        This command generates a printout on  the  CTY  of  the
        status  of  all existing subprocesss and jobs presently
        known to SYSJOB.

RELOAD

        This  command  causes  SYSJOB  to  reload  and  restart
        itself.   This  should be used with great caution since
        it will cause an abrupt  termination  of  all  inferior
        processs  and the detaching of any controlled jobs.  If
        possible, all processes should be killed and  all  jobs
        logged out before the RELOAD is executed.  This command
        is intended to allow a new version of SYSJOB to be  put
        into  operation  during  timesharing  and  to provide a
        possibility   of   recovery   after    severe    SYSJOB
        malfunction.

(End of SYSJOB.HLP)
