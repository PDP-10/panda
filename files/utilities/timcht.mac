	TITLE TIMCHK TTY style
	SEARCH MACSYM,MONSYM
	.TEXT "TIMCHK/SAVE"
	.REQUIRE SYS:MACREL
	STDAC.

COMMENT %
                             DESCRIPTION OF THE
                 AUTOMATED COMPUTER TELEPHONE SERVICE (ACTS)
			       (303) 494-4774
 
 
The following is transmitted (at 1200 baud) following completion of the
telephone connection.
 
             ? = HELP
             National Bureau of Standards
             Telephone Time Service
 
                                     D  L D
              MJD  YR MO DA H  M  S  ST S UT1 msADV         OTM
             47222 88-03-02 21:39:15 83 0 +.3 045.0 UTC(NBS) *
             47222 88-03-02 21:39:16 83 0 +.3 045.0 UTC(NBS) *
             47222 88-03-02 21:39:17 83 0 +.3 045.0 UTC(NBS) *
             47222 88-03-02 21:39:18 83 0 +.3 045.0 UTC(NBS) *
             47222 88-03-02 21:39:19 83 0 +.3 037.6 UTC(NBS) #
             47222 88-03-02 21:39:20 83 0 +.3 037.6 UTC(NBS) #
             etc..etc...etc.......
 
 
UTC = Universal Time Coordinated, the official world time referred to the
zero meridian.
_________________________________________________________________________
 
DST = Daylight savings time characters, valid for the continental U.S., are
set as follows:                                                             
  00 = We are on standard time (ST).    50 = We are on DST.
  99 to 51 = Now on ST, go to DST when your local time is 2:00 am and the
    count is 51.  The count is decremented daily at 00 (UTC).
  49 to 01 = Now on DST, go to ST when your local time is 2:00 am and the
    count is 01.  The count is decremented daily at 00 (UTC).
The two DST characters provide up to 48 days advance notice of a change in
time.  The count remains at 00 or 50 at other times.
_________________________________________________________________________
 
LS = Leap second flag is set to "1" to indicate that a leap second is to be
added as 23:59:60 (UTC) on the last day of the current UTC month.  The LS
flag will be reset to "0" starting with 23:59:60 (UTC).  The flag will
remain on for the entire month before the second is added.  Leap seconds
are added as needed at the end of any month.  Usually June and/or December
are chosen.
 
 The leap second flag will be set to a "2" to indicate that a leap second
is to be deleted at 23:59:58--00:00:00 on the last day of the current
month. (This latter provision is included per international recommendation
however it is not likely to be required in the near future.)
__________________________________________________________________________
 
DUT1 = Approximate difference between earth rotation time (UT1) and UTC, in
steps of 0.1 second.         DUT1 = UT1 - UTC
___________________________________________________________________________
 
MJD = Modified Julian Date, often used to tag certain scientific data.
___________________________________________________________________________
 
The full time format is sent at 1200 baud, 8 bit, 1 stop, no parity.
The HH:MM:SS msADV time format at 300 baud is also 8 bit, 1 stop, no parity. 
___________________________________________________________________________
 
Maximum on line time will be 55 seconds.  If all lines are busy at any time,
the oldest call will be terminated if it has been on line more than 15
seconds, otherwise, the call that first reaches 15 seconds will be
terminated. 
___________________________________________________________________________
 
Current time is valid at the "on-time" marker (OTM), either "*" or "#". 
The nominal on-time marker (*) will be transmitted 45 ms early to account
for the 8 ms required to send 1 character at 1200 baud, plus an additional
7 ms for delay from NBS to the user, and approximately 30 ms "scrambler"
delay inherent in 1200 baud modems.  If the caller echoes all characters,
NBS will measure the round trip delay and advance the on-time marker so
that the midpoint of the stop bit arrives at the user on time.  The amount
of msADV will reflect the actual required advance in milliseconds and the
OTM will be a "#".  The NBS system requires 4 consecutive delay
measurements which are consistent before switching from "*" to "#".
If the user has a 1200 baud modem with the same internal delay as that used
by NBS, then the "#" OTM should arrive at the user within +-2 ms of the
correct time.  However, NBS has studied different brands of 1200 baud
modems and found internal delays from 24 ms to 40 ms and offsets of the
"#" OTM of +-10 ms.  For many computer users, +-10 ms accuracy should be
more than adequate since many computer internal clocks can only be set with
granularity of 20 to 50 ms.  In any case, the repeatability of the offset
for the "#" OTM should be within +-2 ms, if the dial-up path is reciprocal
and the user doesn't change the brand or model of modem used. This should
be true even if the dial-up path on one day is a land-line of less than
40 ms (one way) and on the next day is a satellite link of 260 to 300 ms.
In the rare event that the path is one way by satellite and the other way
by land line with a round trip measurement in the range of 90 to 260 ms,
the OTM will remain a "*" indicating 45 ms advance.  For the user who wants
the best possible accuracy at the OTM, NBS offers an alternate 300 baud
service with only HH:MM:SS MSADV and OTM. To use the alternate service,
simply call at 300 baud.  Because of the simple FSK modulation scheme used
at 300 baud, all modems tested had the same delay within about 1 ms.
___________________________________________________________________________
 
The full time format will be sent at 1200 baud, 8 bit, 1 stop, no parity. The
HH:MM:SS MSADV time format at 300 baud will also be 8b, 1s, np.
 
For user comments write:
NBS-ACTS
Time and Frequency Division
Mail Stop 524
325 Broadway
Boulder, CO  80303
 
Software for setting DOS compatable machines is available on a
360-kbyte diskette for $35.00 from:
NBS Office of Standard Reference Materials
B311-Chemistry Bldg, NBS, Gaithersburg, MD, 20899, (301) 975-6776
%

EVEC:	JRST TIMCHK
	JRST TIMCHK
EVECL==.-EVEC

TIMCHK:	RESET%
	MOVE P,[IOWD PDLLEN,PDL]
	MOVX T1,.DBUGSW		; check state of debugging
	GETAB%
	 EJSHLT
	CAILE T1,2		; ignore if DBUGSW .GT. 2
	 HALTF%			; no, stop now then
	MOVX T1,.FHSLF
	SETOB T2,T3
	EPCAP%
	MOVX T1,GJ%SHT		; grab the link
	HRROI T2,[ASCIZ/TTY2:/]
	GTJFN%
	 JSHLT
	MOVEM T1,DIALER		; note dialer JFN
	MOVX T2,<<FLD 8,OF%BSZ>!OF%WR!OF%RD> ; now open it
	OPENF%
	 JSHLT
	MOVX T2,.CHCNQ
	BOUT%
	CFIBF%			; flush whatever may have been there before
	MOVX T1,^D1000
	DISMS%
	MOVX T3,^D10
	DO.
	  MOVE T1,DIALER
	  CFIBF%		; flush whatever may have been there before
	  MOVX T2,.CHCRT
	  BOUT%
	  MOVE T1,[15,,[ASCIZ/ogin:/]] ; get expected login response
	  CALL GETRSP
	  IFNSK.
	    SOJG T3,TOP.
	    HALTF%
	  ENDIF.
	ENDDO.
	MOVE T1,DIALER		; send user name
	HRROI T2,[BYTE (7) "n","b","s",.CHCRT]
	SETZ T3,
	SOUT%			; init the modem
	MOVE T1,[15,,[ASCIZ/assword:/]] ; get expected password response
	CALL GETRSP
	 HALTF%
	MOVE T1,DIALER		; send user name
	HRROI T2,[BYTE (7) "t","i","c","k","t","o","c","k",.CHCRT]
	SETZ T3,
	SOUT%			; init the modem
	MOVE T1,[^D120,,[ASCIZ/*/]] ; wait for first time to pass
	CALL GETRSP
	IFSKP.
	  MOVSI T3,100		; timeout this way
	  DO.
	    MOVE T1,DIALER
	    SIBE%
	    IFSKP.
	      SOJG T3,TOP.	; zzz...
	    ELSE.
	      CALL GETCHR
	      CAIE T2,.CHSPC	; saw the first space?
	        LOOP.		; keep looking
	    ENDIF.
	  ENDDO.
	ANDG. T3		; timeout better not have expired
	  TIME%			; get current uptime
	  MOVEM T1,BASE		; save as base
	  MOVE Q1,[POINT 7,STRING] ; read in daytime string into buffer
	  MOVX Q2,<STRBSZ*5>-1	; limit
	  MOVSI T3,100		; timeout
	  DO.
	    MOVE T1,DIALER
	    SIBE%
	    IFSKP.
	      SOJG T3,TOP.	; zzz...
	    ELSE.
	      CALL GETCHR
	      CAIN T2,"*"	; at the end?
	       EXIT.		; done
	      IDPB T2,Q1	; store this byte
	      SOJG Q2,TOP.	; keep looking
	    ENDIF.
	  ENDDO.
	ANDG. Q2		; check for overflow
	ANDG. T3		; timeout better not have expired...
	  LDB T1,[POINT 14,STRING,13] ; get year
	  LDB T2,[POINT 14,STRING+1,20] ; get day
	  DPB T2,[POINT 14,STRING,13] ; set year
	  DPB T1,[POINT 14,STRING+1,20] ; set day
	  MOVE T1,[POINT 22,STRING+3,35]
	  MOVX T2,ASCII/  -GM/ ; terminate with "-GMT"
	  DPB T2,T1
	  MOVX T1,ASCIZ/T/
	  MOVEM T1,STRING+4
	  HRROI T1,STRING	; parse the date returned
	  MOVX T2,IT%SNM!IT%ERR!IT%AIS!IT%AAC!IT%NTM
	  IDTIM%
	..TAGF (ERJMP,)		; I sure wish ANNJE. existed!
	  MOVEM T2,NETIME
	  TMSG <
The time from NBS-ACTS is >
	  MOVX T1,.PRIOU
	  MOVE T2,NETIME
	  SETZ T3,
	  ODTIM%
	  TMSG <.
>
	  GTAD%			; see if time now is set
	  MOVEM T1,OLDTIM
	  IFG. T1		; well?
	    DO.
	      TMSG <Is this correct? (Y,N) >
	      PBIN%		; get answer
	      MOVEI T2,(T1)
	      ANDX T2,177
	      TXZ T2,"a"-"A"	; force uppercase
	      CAIE T2,"Y"
	       CAIN T2,"N"
		EXIT.
	      TMSG < ??? Please answer Y or N
>
	      LOOP.
	    ENDDO.
	    TMSG <
>
	    CAIE T2,"Y"		; user said "Y"?
	     EXIT.		; no, don't set time
	  ENDIF.
	  TIME%
	  SUB T1,BASE		; get time spent doing this
	  LSH T1,^D18
	  IDIV T1,[^D<1000*24*60*60>] ; convert to GTAD% format
	  ADD T1,NETIME
	  STAD%
	   EJSHLT
	  SKIPG OLDTIM		; report iff there was an old time
	  IFSKP.
	    MOVE T2,T1
	    TMSG <Time set to >
	    MOVX T1,.PRIOU
	    SETZ T3,
	    ODTIM%
	  ENDIF.
	ENDIF.
	DO.
	  MOVE T1,DIALER	; flush the dialer's JFN
	  SIBE%
	  IFSKP. <EXIT.>
	  MOVX T2,.CHCBS
	  BOUT%
	  MOVX T2,"C"
	  BOUT%
	  MOVX T1,^D1000	; dally a second
	  DISMS%
	  MOVE T1,DIALER	; try again
	  CFIBF%
	  MOVX T1,^D1000	; dally a second
	  DISMS%
	  LOOP.
	ENDDO.
	CLOSF%
	 ERJMP .+1
	HALTF%
	JRST TIMCHK

GETRSP:	STKVAR <RSPPTR,RSPSAV,WATCNT>
	HLRZM T1,WATCNT		; set maximum wait time
	HRLI T1,<(POINT 7,)>	; make byte pointer
	MOVEM T1,RSPPTR
	MOVEM T1,RSPSAV
	SETO T2,		; init "last character seen"
	DO.
	  ILDB T4,RSPPTR	; get character we're expecting
	  JUMPE T4,RSKP		; if null then done!
	  CAME T2,T4		; did it match the "last character"
	  IFSKP.
	    SETO T2,		; yes, then move to next character
	    LOOP.
	  ENDIF.
	  DO.
	    MOVE T1,DIALER	; anything in input stream?
	    SIBE%
	    IFSKP.
	      SOSGE WATCNT	; has timeout expired yet?
	      IFSKP.
		MOVX T1,^D1000	; else wait a second
		DISMS%
		LOOP.		; and try again
	      ELSE.
		SKIPN DEBUGP
		IFSKP.
		  TMSG <%Gave up waiting for: >
		  MOVE T1,RSPSAV
		  PSOUT%
		  TMSG <
>
		ENDIF.
		RET
	      ENDIF.
	    ENDIF.
	  ENDDO.
	  CALL GETCHR
	  CAME T2,T4		; does it match?
	  IFSKP.
	    SETO T2,
	  ELSE.
	    MOVE T1,RSPSAV	; reset pointer
	    MOVEM T1,RSPPTR
	  ENDIF.
	  LOOP.
	ENDDO.

	ENDSV.

GETCHR:	BIN%			; get character from line
	ANDX T2,177
	SKIPN DEBUGP
	IFSKP.
	  MOVX T1,.PRIOU
	  BOUT%
	ENDIF.
	RET

	LIT

DEBUGP:	BLOCK 1			; non-zero if debugging
DIALER:	BLOCK 1			; JFN of dialer
BASE:	BLOCK 1			; uptime base
NETIME:	BLOCK 1			; time from the "net"
OLDTIM:	BLOCK 1			; old time
	STRBSZ==100
STRING:	BLOCK STRBSZ		; string readin area
	PDLLEN==100
PDL:	BLOCK PDLLEN+1

	END <EVECL,,EVEC>
