	TITLE MHALT - Downtime support program
	SUBTTL MRC 10/86

	SEARCH MACSYM,MONSYM
	STDAC.
	DEFINE ANNJE. <..TAGF (ERJMP,)>

	DWNSTL==^D16

EVEC:	JRST MHALT
	JRST MHALT
	JRST MHALT		; used by EXEC (sigh)
EVECL==.-EVEC			; length of entry vector

MHALT:	MOVX T1,<GJ%OLD!GJ%SHT>	; get JFN on the downtime queue
	HRROI T2,[ASCIZ/SYSTEM:DOWNTIME.QUEUE/]
	GTJFN%
	IFNJE.
	  MOVEM T1,DWNJFN	; save JFN
	  MOVX T2,<<FLD ^D36,OF%BSZ>!OF%RD> ; open the queue
	  OPENF%
	ANNJE.
	  BIN%			; get first entry
	ANNJE.
	  MOVE T4,T2		; save shutdown time
	  TMSG <Shutdown Time:			Up Again:
>
	  DO.
	    MOVX T1,.PRIOU	; output shutdown time
	    SETZ T3,
	    ODTIM%
	    TMSG <		>
	    MOVE T1,DWNJFN	; get restart time
	    BIN%
	    IFE. T2
	      TMSG <unknown>
	    ELSE.
	      MOVX T1,.PRIOU
	      SUBM T2,T4	; T4/ UP - DOWN
	      CAML T4,[1,,0]	; if less than a day...
	       TDZA T3,T3	; print date&time if more than one day
		MOVX T3,OT%NDA	; else output time only
	      ODTIM%
	    ENDIF.
	    TMSG <
   >
	    MOVE T1,DWNJFN	; get downtime reason string
	    MOVE T2,[POINT 36,DWNSTR]
	    MOVX T3,-DWNSTL
	    SIN%
	    SETZM (T2)		; just paranoia, mostly
	    HRROI T1,DWNSTR	; output reason string
	    PSOUT%
	    TMSG <
>
	    MOVE T1,DWNJFN	; get shutdown time
	    BIN%
	    IFNJE.
	      MOVE T4,T2	; save shutdown time
	      LOOP.
	    ENDIF.
	  ENDDO.
	ELSE.
	  TMSG <No downtime scheduled
>
	ENDIF.
	SKIPE T1,DWNJFN		; finally close the file
	 CLOSF%
	  ERJMP .+1
	HALTF%			; all done
	JRST .-1		; no CONTINUE

DWNJFN:	BLOCK 1			; JFN on downtime queue
DWNSTR:	BLOCK DWNSTL+1		; downtime reason string

	END <EVECL,,EVEC>
