;<UTILITIES>TIMCHK.MAC.39,  9-Dec-2002 20:32:00, Edit by MRC
; Do GTDOM% before GTHST%; don't try to connect to host 0

	TITLE TIMCHK - Check day/time of various systems
	SUBTTL /Rcc
;
;Written October/November 1981 by Robert C Clements, at
; Bolt Beranek and Newman, Inc.
;
; Copyright (c) 1981 Bolt Beranek and Newman, Inc., Cambridge MA 02238
;
; This software may be copied freely for use within the Internet
; community, but may not be sold or used for profit without permission
; of the author and copyright holder.
;

	SEARCH MACSYM,MONSYM,CMD
	.REQUIRE SYS:MACREL
	.REQUIRE SYS:CMD

F==0
A=1
B=2
C=3
D=4
E=5

Q1=6
Q2=7
Q3=10

X=11
Y=12
TCBH=13

P=17

DEFINE MSG(MESS)<
	HRROI B,[ASCIZ \MESS\]
	CALL DOSOUT
>

PDLL==100			;STACK LENGTH

SCNTIM==^D250			;1/4 SECOND SLEEP BETWEEN SCANS
NCHECK==^D<10000/SCNTIM>	;TEN SECONDS MAX

;FLAGS IN AC F

L.ACTV==1			;SOME ACTIVITY YET IN CONNECTION SCAN
L.LAST==2			;LAST TIME THRU IN CONNECTION SCAN
L.REE==4			;REENTER

;MISC PARAMS

RCVLEN==100			;SPACE FOR RCV BUFFER
TSPORT==^D37			;TIME SERVER PORT NUMBER
UDPPRN==^D17			;USER DATAGRAM PROTOCOL

; LAYOUT OF INET BUFFER FOR UDP PROTOCOL

.UDPPO==5			;PORT NUMBERS
.UDPLN==6			;LENGTH, CHECKSUM
.TSVCK==7			;TIME SERVER CLOCK
TXLEN==.TSVCK+1+1		;ONE FOR HEADER

;TCP JSYS DEFINITIONS

TCBHSZ==3			;SIZE OF RING HEADERS

;START OF PROGRAM

EVEC:	JRST GO
	JRST GOREE

GO:	TDZA F,F		;START
GOREE:	 TLO F,L.REE		;REENTER
	RESET%			;CLEAR THE WORLD
	MOVE P,PDP		;SET UP A STACK
	TLNE F,L.REE		;INVOKED VIA REENTER?
	 SKIPA A,[.NULIO]	;YES, DISCARD OUTPUT
	  MOVX A,.PRIOU		;NO, OUTPUT TO PRIMARY
	MOVEM A,OJFN		;SET OUTPUT
	CALL SETUP		;GET STUFF ABOUT THIS SITE
	CALL HELLO		;SEND HELLO'S TO ALL SITES
	CALL POLL		;POLL ALL SITES
	CALL TOTALS		;PRINT SUMMARY INFO
	MOVX A,.FHSLF		;SEE IF WE'RE A WHOPR
	RPCAP%			; AND ENABLED
	TXNE C,SC%WHL!SC%OPR	; ..
	 CALL SETTIM		;IFF SO, OFFER TO SET THE TIME
	HALTF%			;DONE
	JRST GO			;RESTART IF CONTINUED

SETUP:	MOVNI A,1		;CURRENT JOB
	HRROI B,D		;ANSWER INTO D
	MOVEI C,.JIJNO		;JOB NUMBER
	GETJI%			;GET IT
	 SETO D,0		;FAIL?
	MOVEM D,MYJOBN		;REMEMBER IT
	MOVEI A,.BLDTD		;GET SYSTEM BUILD TIME
	GETAB%
	 EJSHLT
	MOVEM A,BLDTAD		;SAVE IT FOR LATER
	TIME%			;GET NOW IN MILLISECONDS
	MOVEM A,TMSTRT		; ..
	GTAD%			;GET NOW IN GTAD FORM
	IFL. A			;DO WE KNOW THE TIME?
	  MOVX A,GJ%SHT!GJ%OLD	;NO, TRY TO GET BASE TIME FROM FILE
	  HRROI B,[ASCIZ/SYSTEM:EXEC.EXE/]
	  GTJFN%
	   EJSHLT		;NO EXEC??
	  MOVE B,[1,,.FBREF]	;GET READ DATE OF THIS FILE
	  MOVEI C,A		;STORE IT HERE
	  GTFDB%		;GET EXEC READ DATE
	  CAMGE A,BLDTAD	;TRIM IT TO MONITOR BUILD DATE
	   MOVE A,BLDTAD
	ELSE.
	  CAMLE A,BLDTAD	;THIS TIME MUST BE .GT. MONITOR BUILD
	ANSKP.
	   PUSH P,A
	   HRROI A,[ASCIZ/System time /]
	   ESOUT%
	   MOVX A,.PRIOU	;OUTPUT CURRENT SYSTEM TIME
	   MOVE B,(P)
	   SETZ C,
	   ODTIM%
	   TMSG < is EARLIER than monitor build time >
	   MOVX A,.PRIOU	;OUTPUT MONITOR BUILD TIME
	   MOVE B,BLDTAD
	   SETZ C,
	   ODTIM%
	   TMSG <
[Type CONTINUE to proceed ignoring the monitor build time]
>
	   HALTF%
	   POP P,A
	ENDIF.
	MOVEM A,STARTT		;AND SET IT AS THE BASE TIME
	MOVX A,.FHSLF		;WE WILL NEED NETWIZ CAPABILITY
	RPCAP%
	TXO B,SC%NWZ		; ..
	TXO C,SC%NWZ		; ..
	EPCAP%			;SO TRY FOR IT
	SETO A,0		;RELEASE ANY IQ'S
	RELIQ%			; ..
	 ERJMP .+1		;WE TRIED
	CALL GETIQ		;GET THE IQ HANDLE
	 SETZM IQH		;COULDN'T GET IT
	MOVEI A,0		;ASK FOR LOCAL HOST
	GTHST%			;AND TABLE SIZES
	 EJSHLT
	MOVEM B,MNHSTN		;MINUS N HOST NAMES
	MOVEM C,MNHSTS		;MINUS N HSTSTS TABLE
	MOVEM D,MYADDR		;MY INTERNET ADDRESS

	CALL GETSRV		; get the server list
	MOVE X,NHOSTS		; AOBJN pointer

	DO.
	  MOVEI A,.GTHSN	;ELSE, CONVERT STRING TO NUMBER
	  HRR B,HNAMES(X)	;THIS GUY'S NAME
	  HRLI B,(POINT 7,0)
IFDEF GTDOM%,<
	  GTDOM%
	  IFJER.
	    MOVEI A,.GTHSN	;ELSE, CONVERT STRING TO NUMBER
	    HRR B,HNAMES(X)	;THIS GUY'S NAME
	    HRLI B,(POINT 7,0)
	    GTHST%		;CONVERT IT
	     MOVEI C,0		;UNKNOWN BY SYSTEM?
	  ENDIF.
>;IFDEF GTDOM%
IFNDEF GTDOM%,<
	  GTHST%		;CONVERT IT
	   MOVEI C,0		;UNKNOWN BY SYSTEM?
>;IFNDEF GTDOM%
	  MOVEM C,HNMBR(X)	;SAVE IN TABLE
	  SETZM HERR(X)		;ASSUME NO ERROR
	  SETZM HJFN(X)		;NO JFN YET
	  SETZM HTIMES(X)	;TIME NOT YET KNOWN
	  AOBJN X,TOP.		;LOOP OVER NAME LIST
	ENDDO.

	HRROI B,[ASCIZ /
Site		Greenwich Mean Time ->  Local Time Zone
						Difference	Delay
/]
	CALL DOSOUT
	MOVEI A,.GTHNS		;GET MY NAME STRING
	MOVE C,MYADDR
	MOVE B,[POINT 7,TBLOCK]	;INTO THIS TEMP TEXT BLOCK
	GTHST%
	 EJSHLT
	HRROI B,TBLOCK		;TYPE IT OUT
	CALL DOSOUT
	MSG <    	>	;4 SPACES AND A TAB
	SETO B,0		;INIT TIME PRINTER
	CALL PRTIM		; AND TYPE LOCAL TIME
	CALL CRLF		;END THAT LINE
	RET			;GOT THAT STUFF

;FIRST PHASE SENDS OUT A DATAGRAM OR TCP OPEN

HELLO:	MOVE X,NHOSTS		;LOOK THRU TABLE FOR ALL HOSTS
	DO.
	  SETZM HJFN(X)		;NO JFN YET
	  SETZM HERR(X)		;NO ERROR YET
	  HLRZ A,HNAMES(X)	;GET THE TYPE CODE
	  CAIL A,NTYPES		;IN RANGE?
	  IFSKP.
	    MOVE B,HNMBR(X)	;MAKE SURE NOT TALKING TO SELF
	    CAME B,MYADDR	;SELF?
	     XCT HLOTBL(A)	;DO THE RIGHT SETUP FOR THIS HOST
	  ENDIF.
	  AOBJN X,TOP.		;LOOP OVER ALL HOSTS
	ENDDO.
	RET			;DONE SETUPS

HLOTBL:	NOP			;NO TYPE ZERO
	CALL UDPHLO		;UDP PART OF IEN 142
	CALL TCPHLO		;TCP PART OF IEN-142
NTYPES==.-HLOTBL

; For UDP sites

UDPHLO:	CALL IQSEND		;SEND THE IEN-142 UDP REQUEST
	 JRST UDPHL1		;FAILED
	SETOM HJFN(X)		;FLAG IN JFN WORD WE SUCCEEDED
	RET			;RETURN, OK

UDPHL1:	HRRZM A,HERR(X)		;MARK THE ERROR, FOR POLL ROUTINE
	SETZM HJFN(X)		;NO PENDING PACKET
	RET			;RETURN FROM HELLO ROUTINE

;HELLO ROUTINE FOR TCP STYLE SERVERS

TCPHLO:	MOVE A,[TCBPRO,,TCB]	;COPY THE PROTOTYPE TCB
	BLT A,TCBE		; ..
	SKIPE A,HNMBR(X)	;FILL IN HOST NUMBER
	IFSKP.
	  HRROI B,[ASCIZ /Unknown host name/]
	  MOVEM B,HERR(X)
	  RET
	ENDIF.
	MOVEM A,TCB+1		; ..
	MOVE A,MYJOBN		;BUILD LOCAL PORT
	LSH A,10		; ..
	TRO A,TSPORT		; ..
	MOVEM A,TCB+0		; ..
	MOVEI A,TCB		;POINT AT BLOCK FOR TCP CONN
	MOVEI B,0		;NO PERSISTENCE
	MOVEI C,0		;NO BACKOFF PARAMS
	TXO A,TCP%FS		;FORCE SENDING A SYNC
	OPEN%			;OPEN THAT TCP CONNECTION
	 ERJMP TCPOPF		;FAILED
	HRRZM A,HJFN(X)		;REMEMBER THE JCN
	MOVEI TCBH,(X)		;COMPUTE ADDR OF RING HEADER
	IMULI TCBH,TCBHSZ	; ..
	ADDI TCBH,TCBH0		;INTO THIS AREA
	MOVEI A,TCPBUF(X)	;BUFFER WORD FOR THIS HOST
	MOVEM A,1(TCBH)		;SET IT UP
	SETZM 0(TCBH)		;FLAGS ALL OFF
	MOVEI A,4		;LENGTH OF BUFFER IN BYTES
	MOVEM A,2(TCBH)		; ..
	HRRZ A,HJFN(X)		;GET JCN
	TXO A,TCP%JS		;SUPPLIED TO RECEIVE
	MOVEI B,(TCBH)		;POINT AT HEADER
	RECV%			;RECEIVE, DON'T WAIT
	 ERJMP TCPRCF		;RECEIVE FAILED
	RET			;READY TO WAIT FOR DATA

TCPRCF:	HRRZ A,HJFN(X)		;RECEIVE FAILURE
	TXO A,TCP%JS		;GET RID OF JCN
	ABORT%			; ..
	 ERJMP .+1
TCPOPF:	SETZM HJFN(X)
	HRROI B,[ASCIZ /Can't open TCP connection/]
	MOVEM B,HERR(X)
	RET

TCBPRO:	EXP .-.			;LOCAL PORT
	EXP .-.			;REMOTE SITE
	EXP TSPORT		;REMOTE PORT IS TIME SERVER
 NTCB==.-TCBPRO			;SIZE OF BLOCK

;POLL ROUTINE, WAITS FOR NCP CONNECTIONS TO OPEN, OR UDP PACKETS
; TO RETURN, AND PROCESSES THE ANSWERS.

POLL:	MOVSI Y,-NCHECK		;HOW MANY TIMES TO CHECK STATE
POLL1:	CALL IQPOLL		;ALWAYS CHECK THE INET Q
	MOVE X,NHOSTS		;SCAN OVER HOSTS
	TLZ F,L.ACTV		;ASSUME NOBODY STILL WAITING
POLL2:	SKIPE A,HJFN(X)		;A JFN (OR PACKET OUTSTANDING)?
	 CALL POLLCK		;YES, CHECK IT
	SKIPE Q1,HERR(X)	;ANY ERROR TO REPORT?
	 CALL POLLER		;YES, GO REPORT THE ERROR
	AOBJN X,POLL2		;LOOP OVER HOSTS
	TLNN F,L.ACTV		;ANY ACTIVITY?
	 JRST POLDUN		;NO, ALL DONE, BREAK TIMER LOOP
	MOVEI A,SCNTIM		;STILL PENDING, SLEEP A LITTLE
	DISMS%
	AOBJN Y,POLL1		;TRY AGAIN
	TLO F,L.LAST		;LAST PASS, FORCE CLOSES
	JRST POLL1		; ..

POLDUN:	RET			;ALL POLLING DONE

POLLER:	HRRO B,HNAMES(X)	;LIST ITS NAME
	CALL DOSOUT
	MSG <    	>	;4 SPACES AND A TAB
	JUMPL Q1,[MOVE B,Q1	;IF STRING, GET IT
		CALL DOSOUT	;WRITE IT
		JRST POLER1]	;FINISH ERROR
	MOVEI B,0		;ASSUME NO STRING
	CAIN Q1,OPNX20		;MAKE A COUPLE SPECIFIC MESSAGES
	 HRROI B,[ASCIZ /is down/]
	CAIN Q1,OPNX21
	 HRROI B,[ASCIZ /is refusing/]
	CAIN Q1,OPNX10
	 HRROI B,[ASCIZ /can't be reached/]
	JUMPN B,[CALL DOSOUT
		JRST POLER1]
	HRROI B,[ASCIZ / - /]
	CALL DOSOUT
	MOVE B,Q1
	HRLI B,.FHSLF
	MOVEI C,0
	ERSTR%
	 NOP
	 JRST [	HRROI B,[ASCIZ /unknown error/]
		CALL DOSOUT
		JRST POLER1]
POLER1:	HRROI B,[ASCIZ /.
/]
	CALL DOSOUT
	SETZM HERR(X)		;ERROR HAS BEEN HANDLED
	RET			; ..

POLLCK:	HLRZ A,HNAMES(X)	;GET HOST TYPE CODE
	CAIL A,NTYPES		;RANGE CHECK
	 JRST POLCK1		;BAD??
	XCT POLTBL(A)		;DO THE RIGHT CHECKING
POLCK1:	RET			;DONE THIS HOST FOR NOW


POLTBL:	NOP			;NO TYPE ZERO
	CALL UDPPOL		;UDP PART OF IEN 142
	CALL TCPPOL		;TCP PART OF IEN-142

UDPPOL:	TLNE F,L.LAST		;FORCING COMPLETION?
	 JRST TIMOU1		;DO TIMEOUT STUFF
	MOVE Q2,HTIMES(X)	;ANYTHING REPORTED YET?
	JUMPE Q2,UDPWAT		;GO IF NOT. STILL WAITING
	CALL REPORT		;REPORT THIS ONE
	SETZM HJFN(X)		;DON'T CHECK IT AGAIN
	RET			;THAT'S IT

UDPWAT:	TLO F,L.ACTV		;STILL WAITING
	RET

TIMOU1:	SETZM HJFN(X)		;FORGET JFN
	HRROI Q1,[ASCIZ /timed out/]
	MOVEM Q1,HERR(X)	;PRINT THIS ERROR
	RET			;DONE


TCPPOL:	TLNE F,L.LAST		;GIVING UP?
	 JRST TCPLST		;YES

	MOVEI TCBH,(X)		;FIND RING HEADER
	IMULI TCBH,TCBHSZ	; ..
	ADDI TCBH,TCBH0		; ..
	MOVE A,0(TCBH)		;GET FLAGS
	TLNN A,(1B12)		;DONE YET?
	 JRST TCPPOW		;NO, WAIT SOME MORE
	JUMPL A,TCPPOE		;ERROR BIT?
	SKIPE 2(TCBH)		;LESS THAN 4 BYTES?
	 JRST TCPPOE		;YES, TRASH.
	MOVE Q2,TCPBUF(X)	;NO, GOT A DATUM
	LSH Q2,-4		;AS IF FROM BIN
	MOVEM Q2,HTIMES(X)	;HERE IT IS
	CALL REPORT		;REPORT THIS ONE
	MOVX A,TCP%JS		;(HAD BEEN !TCP%WT, BUT...)
TCPPO2:	HRR A,HJFN(X)		;GET RID OF JCN
	CLOSE%			; ..
	 ERJMP .+1
	SETZM HJFN(X)		;FORGET THE JCN
	RET

TCPPOW:	TLO F,L.ACTV		;STILL WAITING
	RET			;NOT THERE YET

TCPPOE:	HRROI B,[ASCIZ /Error in TCP receive/]
	MOVEM B,HERR(X)		;GIVE AN ERROR
	MOVX A,TCP%JS		;CLOSE WITHOUT WAIT
	JRST TCPPO2		;FLUSH CONNECTION

TCPLST:	HRRZ A,HJFN(X)		;GET JCN
	TXO A,TCP%JS		;SUPPLY IT
	CLOSE%			;CLOSE IT
	 ERJMP .+1
	HRRZ A,HJFN(X)		;AND ABORT IT
	TXO A,TCP%JS
	ABORT%
	 ERJMP .+1
	JRST TIMOU1		;REPORT FAILURE

REPORT:	TIME%			;GET CURRENT REAL-TIME
	MOVEM A,CHKRLT		;HOLD IT
	HRRO B,HNAMES(X)	;NAME OF THIS HOST
	CALL DOSOUT
	MSG <    	>	;4 SPACES AND A TAB
	MOVE B,Q2
	CALL PRTIM
	JRST CRLF

IQPOLL:	MOVEI A,RCVLEN		;PREPARE TO RECEIVE A PACKET
	MOVEM A,RCVHDR		;TELL SYSTEM SIZE OF BUFFER
	HRRZ A,IQH		;Q TO LISTEN ON
	TLO A,(1B0)		;DON'T WAIT
	MOVEI B,RCVHDR		;POINT AT IT
	MOVEI C,0		;MBZ BITS
	RCVIN%			;GET IT
	 ERJMP R		;FAILED OR NOTHING ON Q
	PUSH P,X		;SAVE HOST INDEX
	MOVE X,NHOSTS		;SEARCH FOR GUY WHO SENT THIS
	MOVE A,RCVBUF+.IPKSH	;WHERE DID IT COME FROM?
	LSH A,-4		; ..
	CAME A,HNMBR(X)		;RIGHT GUY?
	 AOBJN X,.-1		;NO, LOOP TO FIND IT
	JUMPGE X,IQPOL1		;NOT FOUND, JUNK IT
	MOVE Q2,RCVBUF+.TSVCK	;THIS ONE. GET THE CLOCK VALUE
	LSH Q2,-4		; ..
	MOVEM Q2,HTIMES(X)	;SAVE FOR REPORTING
IQPOL1:	POP P,X			;RESTORE HOST INDEX
	JRST IQPOLL		;LOOP UNTIL NONE ON Q

GETIQ:	MOVE A,[QDBPRO,,QDBLK]	;COPY PROTOTYPE TO QDB
	BLT A,QDBLKE		; ..
	MOVE A,MYJOBN		;GET MY JOB NUMBER
	ANDI A,377		;JUST 8 BITS
	SKIPN A			;IN CASE JOB 256
	 SETO A,0		; ..
	LSH A,10		;SHIFT OVER
	TRO A,TSPORT		;ADD IN TIME PORT
	DPB A,[POINT 16,QDBLK+.IQPTV,15]
	MOVEI A,QDBLK		;POINT AT QDB
	SETZB B,C		;MBZ AC'S
	ASNIQ%			;TRY FOR IT
	 ERJMP R		;FAILED
	MOVEM A,IQH
CPOPJ1:	AOS 0(P)
CPOPJ:	RET

IQSEND:	MOVE A,[SNDPRO,,SNDBUF]	;SEND THIS CANNED MESSAGE
	BLT A,SNDBUF+TXLEN
	MOVE A,MYJOBN		;GET MY JOB NUMBER
	ANDI A,377		;JUST 8 BITS
	SKIPN A			;IN CASE JOB 256
	 SETO A,0		; ..
	LSH A,10		;SHIFT OVER
	TRO A,TSPORT		;ADD IN TIME PORT
	DPB A,[POINT 16,SNDBUF+.UDPPO,15]
	MOVEI A,TXLEN
	MOVEM A,SNDHDR		;THIS MANY WORDS, PLEASE
	MOVE A,HNMBR(X)		;INTERNET ADDR
	LSH A,^D<36-32>
	MOVEM A,SNDBUF+.IPKDH	;DEST HOST
	MOVE A,IQH		;HANDLE FOR QUEUE
	MOVEI B,SNDHDR		;HEADER FOR THE BUFFER
	MOVEI C,0		;MBZ
	SNDIN%			;SEND IT
	 ERJMP R		;FAILED
	JRST CPOPJ1		;OK

SNDPRO:	BYTE (4)4,5(8)0(16)^D28
	BYTE (32)0
	BYTE (8)100,UDPPRN,0,0
	BYTE (32)0
	BYTE (32)0
	BYTE (16).-.,TSPORT
	BYTE (16)10,0
	EXP 0

CRLF:	HRROI B,[ BYTE (7).CHCRT,.CHLFD,0]
DOSOUT:	MOVE A,OJFN
	MOVEI C,0
	SOUT
	RET

DOBOUT:	MOVE A,OJFN
	BOUT%
	RET


;GIVEN 32-BIT TIME IN RFC738 FORMAT, OUTPUT IT ON A LINE.
; INIT THIS ROUTINE BY CALLING WITH B/ -1

PRTIM:	JUMPGE B,PRTM20		;GO IN NORMAL CASE
	TIME%			;INITIAL CASE. GET REALTIME
	MOVEM A,BEGRLT		; ..
	GTAD%			;AND CURRENT SYSTEM TIME
	SKIPGE A		;HAVE SYSTEM TIME?
	 MOVE A,STARTT		;NO, USE FILE TIME
	MOVE B,A		;CONVERT IT TO RFC738 TIME
	CALL CVINET		; ..
	MOVEM B,LOCTIM		;SAVE FOR COMPARISONS
	SETZM CHKRLT		;INIT THESE
	SETZM ADJRLT		; ..
	SETZM DIFSUM		; ..
	SETZM DIFCNT		; ..
PRTM20:	MOVE A,OJFN		;OUTPUT TO HERE
	SAVEAC <E>		;DON'T SMASH THIS AC
	STKVAR <NTTIM,ABSTIM,DELTA>
	MOVEM B,NTTIM
	CALL CVNETI		;CONVERT TO GTAD FORM
	MOVEM B,ABSTIM		;SAVE IT
	MOVX D,IC%DSA+IC%UTZ	;MAKE GMT, NON-DAYLIGHT
	ODCNV%			;SHUFFLE THOSE NUMBERS
	SETZ E,0		;AND OUTPUT THEM
	ODTNC%			; ..
	HRROI B,[ASCIZ /  ->  /]
	CALL DOSOUT
	SKIPE D,CHKRLT		;WHEN DID WE GET THIS ONE?
	IFSKP.
	  MOVE B,ABSTIM		;INIT CASE, RESTORE TIME
	  SETZ D,0		;SPLIT AGAIN, IN LOCAL ZONE
	  ODCNV%		; ..
	  MOVX E,OT%TMZ		;OK TO USE DAYLIGHT SAV TIME
	  ODTNC%		; ..
	  RET			;RETURN
	ENDIF.
	SUB D,BEGRLT		;REALTIME SINCE STARTED
	IDIVI D,^D1000		;MAKE SECONDS
	MOVEM D,ADJRLT		;ADJUSTMENT TO REAL TIME
	MOVE B,NTTIM		;TIME IN NET FORMAT
	SUB B,LOCTIM		;DIFFERENCE IN SECONDS
	SUBI B,(D)		;FUDGE BY REALTIME CHANGE
	MOVEM B,DELTA		;SAVE DIFFERENCE
	MOVM D,B		;GET MAGNITUDE
	CAML D,[EXP ^D<60*60*24>] ;OVER A DAY?
	IFSKP.
	  CALL PRELTM		;NO, PRINT RELATIVE TIME
	ELSE.
	  MOVE B,ABSTIM		;YES, GET ABSOLUTE TIME
	  SETZ D,0		;SPLIT AGAIN, IN LOCAL ZONE
	  ODCNV%		; ..
	  MOVX E,OT%TMZ		;OK TO USE DAYLIGHT SAV TIME
	  ODTNC%		; ..
	ENDIF.
	SKIPN B,ADJRLT		;ANY ADJUSTMENT?
	IFSKP.
	  MOVX C,<NO%SGN+NO%LFL+NO%OOV+<4,,12>> ;YES
	  NOUT%
	   ERJMP .+1
	ENDIF.
	MOVM D,DELTA		;GET MAGNITUDE
	CAMLE D,MAXDIF		;IS THIS TOO FAR OFF?
	IFSKP.
	  MOVE D,DELTA		;NO, GET REAL DELTA
	  ADDM D,DIFSUM		;ADD TO SUM OF DIFFERENCES
	  AOS DIFCNT		;COUNT SAMPLES
	ELSE.
	  MSG < ** rejected **>
	ENDIF.
	RET			;DONE, TIME HAS BEEN PRINTED

	ENDSV.

MAXDIF:	EXP ^D<14*24*60*60>	;MAXIMUM TIME DIFFERENCE -- 2 WEEKS


PRELTM:	MOVE E,B		;PRINT RELATIVE TIME
	MSG <         >		;9 SPACES, = DD-MMM-YY
	SKIPN E			;ANY DIFFERENCE?
	 MOVEI B,.CHSPC		;NO, JUST SPACE
	SKIPLE E
	 MOVEI B,"+"
	SKIPGE E
	 MOVEI B,"-"
	BOUT%
	MOVM D,E		;MAGNITUDE OF DIFFERENCE
	CAIGE D,^D60		;ONLY SECONDS?
	 JRST [	MSG <     :>
		JRST PRTM35]
	CAIGE D,^D<60*60>	;ONLY MINS AND SECS?
	 JRST [	MSG <   >
		JRST PRTM34]
	IDIVI D,^D<60*60>	;FIND HOURS
	MOVEI B,(D)
	MOVE C,[NO%LFL+NO%ZRO+NO%OOV+<2,,12>]
	NOUT%
	 ERJMP .+1
	MOVEI B,":"
	BOUT%
	MOVEI D,(E)
PRTM34:	IDIVI D,^D60
	MOVEI B,(D)
	MOVX C,<NO%LFL+NO%ZRO+<2,,12>>
	NOUT%
	 ERJMP .+1
	MOVEI B,":"
	BOUT%
	SKIPA B,E
PRTM35:	 MOVEI B,(D)
	MOVX C,<NO%LFL+NO%ZRO+<2,,12>>
	NOUT%
	 ERJMP .+1
	MSG <    >		;FOR -ZON
	RET

TMBDIF==^D<365*41>+^D55		;1858 BASE VS 1900 BASE, IN DAYS

CVINET:	PUSH P,C		;PRESERVE A COUPLE REGS
	PUSH P,D		; ..
	MOVEI C,(B)		;TOPS20 FRACTION OF A DAY
	HLRZS B			;DAYS SINCE NOV 1858
	SUBI B,TMBDIF		;BRING DOWN TO 1900
	MULI C,^D<24*60*60>	;CONVERT TO SECONDS FROM 1/3 SEC
	DIV C,[1,,0]		; ..
	CAIL D,400000		;ROUND TO NEAREST SECOND
	ADDI C,1		;ROUND UP
	CAIL C,^D<24*60*60>	;WENT TO WHOLE DAY?
	 JRST [	MOVEI C,0	;YES, COUNT A DAY
		AOJA B,.+1]
	IMULI B,^D<24*60*60>	;SECONDS FROM DAYS
	ADDI B,(C)		;SECONDS WITHIN TODAY
	POP P,D			;RESTORE REGS
	POP P,C			; ..
	RET			;RETURN RFC738 FORMAT TIME IN B

CVNETI:	SAVEAC <C,D>		;PRESERVE REGISTERS
	IDIVI B,^D<24*60*60>	;GET DAYS AND SECONDS IN TODAY, GMT
	ADDI B,TMBDIF		;ADD OFFSET FOR MJD 0
	MUL C,[1,,0]		;CONVERT SECONDS TO FRACTION OF DAY
	DIVI C,^D<24*60*60>	; FOR TOPS20 FORMAT GTAD
	CAIL D,^D<24*60*60>/2	;ROUND IT
	ADDI C,1		; ..
	MOVSI B,(B)		;DAYS TO LH OF GTAD
	HRRI B,(C)		;FRACTION OF DAY TO RH
	RET			;GTAD FORMAT IN B

TOTALS:	SKIPN DIFCNT		;GET NUMBER OF SAMPLES
	 JRST TOTAL1		;GO IF NONE
	MSG <
		Average difference      >
	MOVE B,DIFSUM
	IDIV B,DIFCNT		;HERE'S THE AVERAGE
	ADDM B,LOCTIM		;ADJUST LOCAL TIME, IN CASE SETTING
	CALL PRELTM		;PRINT OUT THE AVERAGE DIFFERENCE
	MSG <
		Average clock time      >
	MOVE B,LOCTIM		;THIS IS THE AVERAGE TIME, RFC738 FORM
	CALL CVNETI		;CONVERT TO GTAD
	MOVEI D,0		;PRINT WITH TIME ZONE
	ODCNV%
	MOVX E,OT%TMZ
	ODTNC%
	CALL CRLF
TOTAL1:	MSG <		Time spent surveying = >
	TIME%
	MOVE B,A
	SUB B,TMSTRT
	IDIVI B,^D1000
	PUSH P,C
	MOVE A,OJFN
	MOVX C,^D10
	NOUT%
	 ERJMP +1
	MOVEI B,"."
	CALL DOBOUT
	POP P,B
	MOVX C,<NO%LFL+NO%ZRO+<3,,12>>
	NOUT%
	 ERJMP .+1
	MSG < seconds.
>
	RET

; SETTIM ROUTINE, OFFERS TO SET TIME TO THE AVERAGE OF THOSE FROM NET

SETTIM:	SKIPG DIFCNT		;ANYTHING FOUND FROM NET?
	 RET			;NO, CAN'T DO IT
	TLNE F,L.REE		;INVOKED VIA REENTER?
	IFSKP.			; IF NOT THEN ASK
	  HRROI A,[ASCIZ /Set system time to average? (Y or N) :/]
	  PSOUT%
	  PBIN%
	  TRZ A,40		;RAISE ANSWER
	  CAIE A,"Y"
	   RET			;NOPE
	  HRROI A,[ASCIZ /
OK, Setting time to /]
	  PSOUT%
	ELSE.
	  TMSG <
Time from network is >
	ENDIF.
	TIME%
	SUB A,BEGRLT		;ACCOUNT FOR TIME WAITING FOR ANSWER
	ADDI A,^D500		;ROUND OFF
	IDIVI A,^D1000
	ADD A,LOCTIM		;UPDATE LOCAL TIME
	MOVE B,A		;CONVERT TO GTAD TIME
	CALL CVNETI
	MOVE A,B
	STAD%			;SET IT!
	 ERJMP SETTME		;ERROR
	MOVX A,.PRIOU
	SETO B,0
	SETZ C,0
	ODTIM%			;REPORT IT
	TMSG <
>
	RET

SETTME:	HRROI A,[ASCIZ /--- Error. Time not set!
/]
	PSOUT%
	RET

;CONSTANTS

QDBPRO:	BYTE (8)0,0,0,UDPPRN	;UDP PROTOCOL NUMBER
	EXP 0			;WILD FOREIGN HOST
	EXP 0			;WILD SOURCE HOST
	BYTE (16).-.,TSPORT	;MY PORT,,SERVER PORT
	BYTE (8)0,0,0,377	;PROTOCOL NUMBER MASK
	EXP 0			;HOST MASK
	EXP 0			;SOURCE MASK
	BYTE (16)-1,-1		;PORT NUMBER MASK
NQDB==.-QDBPRO

PDP:	XWD -PDLL,PDL


; GETSRV - Read the list of servers from a file
GETSRV:	MOVX A,GJ%SHT!GJ%OLD
	HRROI B,[ASCIZ /SYSTEM:TIMCHK.SERVERS/]
	GTJFN%
	 EJSHLT
	MOVX B,7B5!OF%RD
	OPENF%
	 EJSHLT
	MOVEM A,SRVJFN

	CALL CMDINI		;INIT FOR COMND
	
	SETZ X,			; INITIAL INDEX TO TABLES
	MOVEI Y,HSTRNG		; INDEX TO STRING SPACE
	MOVE A,SRVJFN
	HRLM A,SBK+.CMIOJ	; BUT USE THIS JFN
	DO.
	  HRROI A,[0]
	  CALL DPROMPT		; NO PROMPT
	  MOVEI A,[FLDDB. .CMKEY,,TYPTAB]
	  CALL RFIELD
	  HRRZ A,(B)		; GET CODE
	  JUMPE A,ENDLP.	; DONE
	  HRLM A,HNAMES(X)	; SET PROTOCOL TYPE
	  HRRM Y,HNAMES(X)	; WHERE STRING WILL GO	  
	  MOVEI A,[FLDDB. .CMTXT]
	  CALL RFIELD
	  HRLI Y,(POINT 7,0)
	  MOVE A,SBK+.CMABP	; ATOM BUFFER
	  DO.
	   ILDB B,A
	   IDPB B,Y
	   JUMPN B,TOP.
	  ENDDO.
	  MOVEI Y,1(Y)		; WORD ALIGN
	  CONFRM		; EAT THE CR
	  AOS X			; INCREMENT INDEX
	  CAIGE X,MAXHST	; OVERFLOW?
	   LOOP.		; NO
	ENDDO.
	MOVNS X			; CREATE AN AOBJN POINTER
	HRLZM X,NHOSTS		; ...
	MOVE A,SRVJFN
	CLOSF%			; GET RID OF FILE
	 ERJMP .+1		; SHOULDN'T FAIL
	RET

;VARIABLES

CMDSTG

; SITE TABLES AND TYPES

	TYP0==0			;PLACE HOLDER. DON'T PROBE.
	TYPUDP==1		;IEN 142 DATAGRAM TO PORT 37.
	TYPTCP==2		;IEN 142 TCP TO PORT 37.

; TBLUK format table of protocol types
TYPTAB:	3,,3
	T EOF,0			; END OF FILE
	T TCP,TYPTCP
	T UDP,TYPUDP

MAXHST==^D50				; maximum size of following tables
NHOSTS:	EXP	0			; size of following tables
; Table of protocol,,name
HNAMES:	BLOCK	MAXHST

; Table of primary addresses
HNUMS:	BLOCK	MAXHST

; Space for host name strings
HSTRNG:	BLOCK	5*MAXHST	; hopefully plenty


SRVJFN:	BLOCK 1			; JFN for server file
BLDTAD:	BLOCK 1			;MONITOR BUILD DATE
STARTT:	BLOCK 1			;STARTING TAD
MYADDR:	BLOCK 1			;MY ADDRESS, INTERNET 32-BIT FORM
MYJOBN:	BLOCK 1			;THIS JOB'S JOB NUMBER
MNHSTS:	BLOCK 1			;LENGTHS FROM GTHST
MNHSTN:	BLOCK 1			; ..
OJFN:	BLOCK 1			;OUTPUT DATA TO THIS JFN
IQH:	BLOCK 1			;INTERNET Q HANDLE FOR UDP
QDBLK:	BLOCK NQDB		;FOR UDP Q DESCRIPTOR
 QDBLKE==.-1			;END OF SAME
HNMBR:	BLOCK MAXHST		;INTERNET ADDRESSES OF HOSTS
HERR:	BLOCK MAXHST		;ERROR, IF ANY
HJFN:	BLOCK MAXHST		;JFN IF NCP TYPE CONNECTION
HTIMES:	BLOCK MAXHST		;NET FORMAT TIME, PER HOST
CHKRLT:	BLOCK 1			;REALTIME WHEN A BIN COMPLETES
ADJRLT:	BLOCK 1
BEGRLT:	BLOCK 1
DIFCNT:	BLOCK 1
DIFSUM:	BLOCK 1
LOCTIM:	BLOCK 1
TMSTRT:	BLOCK 1			;INITIAL MILLISECOND TIME
TBLOCK:	BLOCK 40		;TEXT BLOCK FOR NAME STRINGS
RCVHDR:	BLOCK 1			;HEADER FOR UDP RECEIVES
RCVBUF:	BLOCK RCVLEN+2		;BUFFER SIZE PLUS SLOP
SNDHDR:	BLOCK 1			;HEADER FOR UDP SENDS
SNDBUF:	BLOCK RCVLEN+2		;BUFFER SIZE PLUS SLOP
TCB:	BLOCK NTCB		;ADDRESS/PORT BLOCK
 TCBE==.-1
TCPBUF:	BLOCK MAXHST		;ONE WORD BUFFER FOR EACH HOST
TCBH0:	BLOCK <MAXHST*TCBHSZ>	;ONE RING HEADER PER HOST
TCBSTS:	BLOCK 100		;FOR STATUS CALL

PDL:	BLOCK PDLL+1

	END 2,,EVEC
  