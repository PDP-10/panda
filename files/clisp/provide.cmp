
;COMPARISON OF SS:<CLISP.NEW.UPSALA>PROVIDE.CLISP.13 AND SS:<CLISP.UPSALA>PROVIDE.CLISP.5
;OPTIONS ARE    /B /E /Y /3

**** FILE SS:<CLISP.NEW.UPSALA>PROVIDE.CLISP.13, 1-53 (2432) AFTER "(defun require (modu"
  <Module-name>.clisp.  Tell which files are loaded if
  *require-verbose* is non-NIL. Returns whether the module was
  loaded."
  (unless (member module-name *modules* :test #'string=)
**** FILE SS:<CLISP.UPSALA>PROVIDE.CLISP.5, 1-53 (2432) AFTER "(defun require (modu"
  <Module-name>.Clisp or .Lap, whichever is youngest, or on CLISP:.
  Tell which files are loaded if *require-verbose* is non-NIL. Returns
  whether the module was loaded."
  (unless (member module-name *modules* :test #'string=)
***************

**** FILE SS:<CLISP.NEW.UPSALA>PROVIDE.CLISP.13, 1-66 (3057) AFTER "(defun require (modu"
      (rplaca f (pathname (car f)))
      (unless (pathname-type (car f))
	(rplaca f (modify-pathname-type (car f) "clisp"))))
    ;; If pathname arg is non-NIL, load those files.
**** FILE SS:<CLISP.UPSALA>PROVIDE.CLISP.5, 1-66 (3101) AFTER "(defun require (modu"
      (rplaca f (pathname (car f))))
    ;; If pathname arg is non-NIL, load those files.
***************

**** FILE SS:<CLISP.NEW.UPSALA>PROVIDE.CLISP.13, 1-73 (3329) AFTER "(defun require (modu"
	    (if (not (load p :if-does-not-exist nil))
		(if *require-verbose*
		    (format t "Could not find file ~S.~%" p)))))
	;; Get the list of files and load them in the right order.  Tell
**** FILE SS:<CLISP.UPSALA>PROVIDE.CLISP.5, 1-71 (3281) AFTER "(defun require (modu"
	    (if (not (load p :if-does-not-exits nil))
		(if (not (load (make-clisp-device-pathname p)
			       :if-does-not-exist nil))
		    (if *require-verbose*
			(format t "Could not find file ~S.~%" p))))))
	;; Get the list of files and load them in the right order.  Tell
***************

**** FILE SS:<CLISP.NEW.UPSALA>PROVIDE.CLISP.13, 1-84 (3758) AFTER "(defun require (modu"
	    (unless (pathname-type f)
	      (setq f (modify-pathname-type f "clisp")))
	    (if (not (load f :if-does-not-exist nil))
		(if *require-verbose*
		    (format t "Could not find file ~S.~%" f))))))
    t))
**** FILE SS:<CLISP.UPSALA>PROVIDE.CLISP.5, 1-84 (3797) AFTER "(defun require (modu"
	    (if (not (load f :if-does-not-exist nil))
		(if (not (load (make-clisp-device-pathname f)
			       :if-does-not-exist nil))
		    (if *require-verbose*
			(format t "Could not find file ~S.~%" f)))))))
    t))
***************

**** FILE SS:<CLISP.NEW.UPSALA>PROVIDE.CLISP.13, 1-102 (4375) AFTER "(defun modify-pathna"
**** FILE SS:<CLISP.UPSALA>PROVIDE.CLISP.5, 1-102 (4418) AFTER "(defun modify-pathna"
(defun make-clisp-device-pathname (pathname)
  "Make a pathname just like the argument, but on logical device CLISP:"
  (let ((pathname (if (pathnamep pathname) pathname
		      (parse-namestring pathname))))
    (make-pathname :host (pathname-host pathname)
		   :device "Clisp"
		   :directory nil
		   :name (pathname-name pathname)
		   :type (pathname-type pathname)
		   :version :newest)))
***************
