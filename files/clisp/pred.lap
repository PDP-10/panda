
;;; CLC vP.U.V.1(2) compiling CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13

(IN-PACKAGE (QUOTE LISP)) 
(EXPORT (QUOTE (TYPEP COMPLEXP EQUALP TYPE-OF SIMPLE-ARRAY-P INSTANCE ARRAY ATOM BIGNUM BIT BIT-VECTOR CHARACTER COMMON COMPILED-FUNCTION COMPLEX CONS DOUBLE-FLOAT FIXNUM FLOAT FUNCTION HASH-TABLE INTEGER KEYWORD LIST LONG-FLOAT NIL NULL NUMBER RATIO RATIONAL SEQUENCE SHORT-FLOAT SIGNED-BYTE SIMPLE-ARRAY SIMPLE-BIT-VECTOR SIMPLE-STRING SIMPLE-VECTOR SINGLE-FLOAT STANDARD-CHAR STREAM STRING STRING-CHAR SYMBOL T UNSIGNED-BYTE VECTOR STRUCTURE SATISFIES))) 
(DEFCONSTANT TYPE-PRED-ALIST (QUOTE ((COMMON . COMMONP) (NULL . NULL) (CONS . CONSP) (LIST . LISTP) (SYMBOL . SYMBOLP) (ARRAY . ARRAYP) (VECTOR . VECTORP) (BIT-VECTOR . BIT-VECTOR-P) (STRING . STRINGP) (SEQUENCE . SEQUENCEP) (SIMPLE-ARRAY . SIMPLE-ARRAY-P) (SIMPLE-VECTOR . SIMPLE-VECTOR-P) (SIMPLE-STRING . SIMPLE-STRING-P) (SIMPLE-BIT-VECTOR . SIMPLE-BIT-VECTOR-P) (FUNCTION . FUNCTIONP) (COMPILED-FUNCTION . COMPILED-FUNCTION-P) (CHARACTER . CHARACTERP) (NUMBER . NUMBERP) (RATIONAL . RATIONALP) (FLOAT . FLOATP) (STRING-CHAR . STRING-CHAR-P) (INTEGER . INTEGERP) (RATIO . RATIOP) (SHORT-FLOAT . SHORT-FLOATP) (STANDARD-CHAR . STANDARD-CHARP) (FIXNUM . FIXNUMP) (COMPLEX . COMPLEXP) (SINGLE-FLOAT . SINGLE-FLOATP) (BIGNUM . BIGNUMP) (DOUBLE-FLOAT . DOUBLE-FLOATP) (BIT . BITP) (LONG-FLOAT . LONG-FLOATP) (STRUCTURE . STRUCTUREP) (STREAM . STREAMP) (HASH-TABLE . HASH-TABLE-P) (ATOM . ATOM) (KEYWORD . KEYWORDP)))) 
(%PUT (QUOTE TYPE-OF) (QUOTE %FUN-DOCUMENTATION) (QUOTE "Returns the type of OBJECT as a type-specifier.
  Since objects may be of more than one type, the choice is somewhat
  arbitrary and may be implementation-dependent.")) 

#_(LAP #0_TYPE-OF EXPR
       (ENTRY-POINTS (2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(0 RANDOM 1 SIMPLE-BIT-VECTOR 2 3 SIMPLE-STRING 4 BIGNUM 5 DOUBLE-FLOAT 6 COMPLEX 7 RATIO 8 9 COMPILED-FUNCTION 10 11 SYMBOL 12 CONS 13 STREAM 14 HASH-TABLE (16 17) :TEST EQL FIXNUM (18 19) SHORT-FLOAT 20 CHARACTER)
       (CODE-START)
(LABEL 1)    (ADDI Q 2)
             (MOVEM O1 -1 Q)
             (CALL LISP::%SP-TYPE 1)
             (MOVEM O1 0 Q)
             (MOVE O2 (CONSTANT 0))
             (CAME O2 0 Q)
             (JRST 4)
             (MOVE O1 (CONSTANT 1))
             (MOVEI N 1)
             (JRST 3)
(LABEL 4)    (MOVE O2 (CONSTANT 2))
             (CAME O2 0 Q)
             (JRST 5)
             (MOVE O1 -1 Q)
             (CALL LISP::%SP-GET-VECTOR-LENGTH 1)
             (MOVE O2 O1)
             (MOVE O1 (CONSTANT 3))
             (CALL LIST 2)
             (JRST 3)
(LABEL 5)    (MOVE O2 (CONSTANT 4))
             (CAME O2 0 Q)
             (JRST 6)
             (MOVE O1 -1 Q)
             (CALL LISP::DESCRIBE-I-VECTOR 1)
             (JRST 3)
(LABEL 6)    (MOVE O2 (CONSTANT 5))
             (CAME O2 0 Q)
             (JRST 7)
             (MOVE O1 -1 Q)
             (CALL LISP::%SP-GET-VECTOR-LENGTH 1)
             (MOVE O2 O1)
             (MOVE O1 (CONSTANT 6))
             (CALL LIST 2)
             (JRST 3)
(LABEL 7)    (MOVE O2 (CONSTANT 7))
             (CAME O2 0 Q)
             (JRST 8)
             (MOVE O1 (CONSTANT 8))
             (MOVEI N 1)
             (JRST 3)
(LABEL 8)    (MOVE O2 (CONSTANT 9))
             (CAME O2 0 Q)
             (JRST 9)
             (MOVE O1 (CONSTANT 10))
             (MOVEI N 1)
             (JRST 3)
(LABEL 9)    (MOVE O2 (CONSTANT 11))
             (CAME O2 0 Q)
             (JRST 10)
             (MOVE O1 (CONSTANT 12))
             (MOVEI N 1)
             (JRST 3)
(LABEL 10)   (MOVE O2 (CONSTANT 13))
             (CAME O2 0 Q)
             (JRST 11)
             (MOVE O1 (CONSTANT 14))
             (MOVEI N 1)
             (JRST 3)
(LABEL 11)   (MOVE O2 (CONSTANT 15))
             (CAME O2 0 Q)
             (JRST 12)
             (MOVE O1 -1 Q)
             (CALL LISP::DESCRIBE-G-VECTOR 1)
             (JRST 3)
(LABEL 12)   (MOVE O2 (CONSTANT 16))
             (CAME O2 0 Q)
             (JRST 13)
             (MOVE O1 (CONSTANT 17))
             (MOVEI N 1)
             (JRST 3)
(LABEL 13)   (MOVE O2 (CONSTANT 18))
             (CAME O2 0 Q)
             (JRST 14)
             (MOVE O1 -1 Q)
             (CALL LISP::DESCRIBE-ARRAY 1)
             (JRST 3)
(LABEL 14)   (MOVE O2 (CONSTANT 19))
             (CAME O2 0 Q)
             (JRST 15)
             (MOVE O1 (CONSTANT 20))
             (MOVEI N 1)
             (JRST 3)
(LABEL 15)   (MOVE O2 (CONSTANT 21))
             (CAME O2 0 Q)
             (JRST 16)
             (MOVE O1 (CONSTANT 22))
             (MOVEI N 1)
             (JRST 3)
(LABEL 16)   (MOVE O2 (CONSTANT 23))
             (CAME O2 0 Q)
             (JRST 17)
             (MOVE O1 (CONSTANT 24))
             (MOVEI N 1)
             (JRST 3)
(LABEL 17)   (MOVE O2 (CONSTANT 25))
             (CAME O2 0 Q)
             (JRST 18)
             (MOVE O1 (CONSTANT 26))
             (MOVEI N 1)
             (JRST 3)
(LABEL 18)   (MOVE O4 (CONSTANT 29))
             (MOVE O1 0 Q)
             (MOVE O2 (CONSTANT 27))
             (MOVE O3 (CONSTANT 28))
             (CALL MEMBER 4)
             (JUMPE O1 19)
             (MOVE O1 (CONSTANT 30))
             (MOVEI N 1)
             (JRST 3)
(LABEL 19)   (MOVE O4 (CONSTANT 29))
             (MOVE O1 0 Q)
             (MOVE O2 (CONSTANT 31))
             (MOVE O3 (CONSTANT 28))
             (CALL MEMBER 4)
             (JUMPE O1 20)
             (MOVE O1 (CONSTANT 32))
             (MOVEI N 1)
             (JRST 3)
(LABEL 20)   (MOVE O2 (CONSTANT 33))
             (CAME O2 0 Q)
             (JRST 21)
             (MOVE O1 (CONSTANT 34))
             (MOVEI N 1)
             (JRST 3)
(LABEL 21)   (SKIPA)
             (JRST 22)
             (MOVE O1 (CONSTANT 1))
             (MOVEI N 1)
(LABEL 22)
(LABEL 3)    (SUBI Q 2)
             (POPJ P)
)

(%PUT (QUOTE TYPE-OF) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT))) 
(%PUT (QUOTE TYPE-OF) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE TYPE-OF) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_DESCRIBE-G-VECTOR EXPR
       (ENTRY-POINTS (2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(SIMPLE-VECTOR)
       (CODE-START)
(LABEL 1)    (ADDI Q 1)
             (MOVEM O1 0 Q)
             (CALL STRUCTUREP 1)
             (JUMPE O1 4)
             (MOVE O1 0 Q)
             (MOVE O1 0 O1)
             (MOVEI N 1)
             (JRST 3)
(LABEL 4)    (SKIPA)
             (JRST 5)
             (MOVE O1 0 Q)
             (CALL LISP::%SP-GET-VECTOR-LENGTH 1)
             (MOVE O2 O1)
             (MOVE O1 (CONSTANT 0))
             (CALL LIST 2)
(LABEL 5)
(LABEL 3)    (SUBI Q 1)
             (POPJ P)
)

(%PUT (QUOTE DESCRIBE-G-VECTOR) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT))) 
(%PUT (QUOTE DESCRIBE-G-VECTOR) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE DESCRIBE-G-VECTOR) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_DESCRIBE-I-VECTOR EXPR
       (ENTRY-POINTS (2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(SIMPLE-ARRAY 0 (MOD 2) 1 (MOD 4) 2 (MOD 16) 3 (MOD 256) 4 (MOD 65536) "Invalid I-Vector access code: ~S")
       (CODE-START)
(LABEL 1)    (ADDI Q 3)
             (MOVEM O1 -2 Q)
             (CALL LISP::%SP-GET-VECTOR-ACCESS-TYPE 1)
             (MOVEM O1 0 Q)
             (MOVE O2 (CONSTANT 1))
             (CAME O2 0 Q)
             (JRST 4)
             (MOVE O5 (CONSTANT 2))
             (MOVEM O5 -1 Q)
             (JRST 3)
(LABEL 4)    (MOVE O2 (CONSTANT 3))
             (CAME O2 0 Q)
             (JRST 5)
             (MOVE O5 (CONSTANT 4))
             (MOVEM O5 -1 Q)
             (JRST 3)
(LABEL 5)    (MOVE O2 (CONSTANT 5))
             (CAME O2 0 Q)
             (JRST 6)
             (MOVE O5 (CONSTANT 6))
             (MOVEM O5 -1 Q)
             (JRST 3)
(LABEL 6)    (MOVE O2 (CONSTANT 7))
             (CAME O2 0 Q)
             (JRST 7)
             (MOVE O5 (CONSTANT 8))
             (MOVEM O5 -1 Q)
             (JRST 3)
(LABEL 7)    (MOVE O2 (CONSTANT 9))
             (CAME O2 0 Q)
             (JRST 8)
             (MOVE O5 (CONSTANT 10))
             (MOVEM O5 -1 Q)
             (JRST 3)
(LABEL 8)    (SKIPA)
             (JRST 9)
             (MOVE O1 -2 Q)
             (CALL LISP::%SP-GET-VECTOR-ACCESS-TYPE 1)
             (MOVE O2 O1)
             (MOVE O1 (CONSTANT 11))
             (CALL ERROR 2)
             (MOVEM O1 -1 Q)
(LABEL 9)
(LABEL 3)    (MOVE O1 -2 Q)
             (CALL LISP::%SP-GET-VECTOR-LENGTH 1)
             (MOVE O3 O1)
             (MOVE O1 (CONSTANT 0))
             (MOVE O2 -1 Q)
             (CALL LIST 3)
             (SUBI Q 3)
             (POPJ P)
)

(%PUT (QUOTE DESCRIBE-I-VECTOR) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT))) 
(%PUT (QUOTE DESCRIBE-I-VECTOR) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE DESCRIBE-I-VECTOR) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_DESCRIBE-ARRAY EXPR
       (ENTRY-POINTS (2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(0 4 1 SIMPLE-BIT-VECTOR BIT-VECTOR SIMPLE-STRING STRING SIMPLE-VECTOR VECTOR T #((MOD 2) (MOD 4) (MOD 16) (MOD 256) (MOD 65536)) ARRAY (MOD 2) STRING-CHAR #((MOD 2) (MOD 4) (MOD 16) (MOD 256) (MOD 65536)))
       (CODE-START)
(LABEL 1)    (ADDI Q 7)
             (MOVEM O1 -6 Q)
             (MOVE O2 (CONSTANT 0))
             (CALL LISP::HEADER-REF 2)
             (MOVEM O1 -5 Q)
             (MOVE O1 -6 Q)
             (CALL LISP::HEADER-LENGTH 1)
             (MOVEM O1 -3 Q)
             (MOVE O2 (CONSTANT 1))
             (CALL - 2)
             (MOVEM O1 -4 Q)
             (MOVE O2 (CONSTANT 2))
             (MOVE O1 -6 Q)
             (CALL LISP::HEADER-REF 2)
             (MOVEM O1 -3 Q)
             (MOVE O2 (CONSTANT 2))
             (MOVE O1 -4 Q)
             (CALL = 2)
             (JUMPE O1 3)
             (MOVE O5 -5 Q)
             (MOVEM O5 -2 Q)
             (MOVE O2 (CONSTANT 3))
             (MOVE O1 O5)
             (CALL TYPEP 2)
             (JUMPE O1 6)
             (MOVE O2 -3 Q)
             (MOVE O1 (CONSTANT 4))
             (CALL LIST 2)
             (JRST 5)
(LABEL 6)    (MOVE O2 (CONSTANT 5))
             (MOVE O1 -2 Q)
             (CALL TYPEP 2)
             (JUMPE O1 7)
             (MOVE O2 -3 Q)
             (MOVE O1 (CONSTANT 6))
             (CALL LIST 2)
             (JRST 5)
(LABEL 7)    (MOVE O2 (CONSTANT 7))
             (MOVE O1 -2 Q)
             (CALL TYPEP 2)
             (JUMPE O1 8)
             (MOVE O3 -3 Q)
             (MOVE O1 (CONSTANT 8))
             (MOVE O2 (CONSTANT 9))
             (CALL LIST 3)
             (JRST 5)
(LABEL 8)    (SKIPA)
             (JRST 9)
             (MOVE O1 -5 Q)
             (CALL LISP::%SP-GET-VECTOR-ACCESS-TYPE 1)
             (MOVE O2 O1)
             (MOVE O1 (CONSTANT 10))
             (ADDI O1 0 O2)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
             (MOVE O3 -3 Q)
             (MOVE O1 (CONSTANT 8))
             (MOVE O2 O5)
             (CALL LIST 3)
(LABEL 9)
(LABEL 5)    (JRST 4)
(LABEL 3)    (MOVE O5 -5 Q)
             (MOVEM O5 -1 Q)
             (MOVE O2 (CONSTANT 3))
             (MOVE O1 O5)
             (CALL TYPEP 2)
             (JUMPE O1 12)
             (MOVE O5 (CONSTANT 12))
             (MOVEM O5 -2 Q)
             (JRST 11)
(LABEL 12)   (MOVE O2 (CONSTANT 5))
             (MOVE O1 -1 Q)
             (CALL TYPEP 2)
             (JUMPE O1 13)
             (MOVE O5 (CONSTANT 13))
             (MOVEM O5 -2 Q)
             (JRST 11)
(LABEL 13)   (MOVE O2 (CONSTANT 7))
             (MOVE O1 -1 Q)
             (CALL TYPEP 2)
             (JUMPE O1 14)
             (MOVE O5 (CONSTANT 9))
             (MOVEM O5 -2 Q)
             (JRST 11)
(LABEL 14)   (SKIPA)
             (JRST 15)
             (MOVE O1 -5 Q)
             (CALL LISP::%SP-GET-VECTOR-ACCESS-TYPE 1)
             (MOVE O2 O1)
             (MOVE O1 (CONSTANT 14))
             (ADDI O1 0 O2)
             (MOVE O5 0 O1)
             (MOVEM O5 -2 Q)
(LABEL 15)
(LABEL 11)   (MOVE O1 -6 Q)
             (CALL ARRAY-DIMENSIONS 1)
             (MOVE O3 O1)
             (MOVE O1 (CONSTANT 11))
             (MOVE O2 -2 Q)
             (CALL LIST 3)
(LABEL 4)    (SUBI Q 7)
             (POPJ P)
)

(%PUT (QUOTE DESCRIBE-ARRAY) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT))) 
(%PUT (QUOTE DESCRIBE-ARRAY) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE DESCRIBE-ARRAY) (QUOTE %SOURCE-DOCUMENTATION)))) 
(%PUT (QUOTE TYPEP) (QUOTE %FUN-DOCUMENTATION) (QUOTE "Returns T if OBJECT is of the specified TYPE, otherwise NIL.")) 

#_(LAP #0_TYPEP EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(T TYPE-PRED-ALIST VECTOR SIMPLE-VECTOR STRING SIMPLE-STRING BIT-VECTOR SIMPLE-BIT-VECTOR ARRAY SIMPLE-ARRAY SATISFIES MEMBER NOT OR AND INTEGER RATIONAL FLOAT SHORT-FLOAT SINGLE-FLOAT DOUBLE-FLOAT LONG-FLOAT MOD 0 SIGNED-BYTE * UNSIGNED-BYTE COMPLEX "~S -- Illegal type specifier to TYPEP.")
       (CODE-START)
(LABEL 1)    (ADDI Q 9)
             (MOVEM O1 -8 Q)
             (MOVEM O2 -7 Q)
             (MOVE O1 O2)
             (CALL LISP::TYPE-EXPAND 1)
             (MOVEM O1 -6 Q)
             (MOVEM NIL -5 Q)
             (CALL SYMBOLP 1)
             (JUMPE O1 4)
             (MOVE O2 (CONSTANT 0))
             (CAME O2 -6 Q)
             (JRST 6)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JRST 5)
(LABEL 6)    (SKIPE NIL -6 Q)
             (JRST 7)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 5)
(LABEL 7)    (MOVE O2 (SPECIAL 1))
             (MOVE O1 -6 Q)
             (CALL ASSQ 2)
             (MOVEM O1 -5 Q)
             (JUMPE O1 8)
             (MOVE O5 1 O1)
             (MOVEM O5 -4 Q)
             (MOVE O1 -8 Q)
             (MOVE O6 O5)
             (FCALL 1)
             (JRST 5)
(LABEL 8)    (SKIPA)
             (JRST 9)
             (MOVE O2 -6 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::STRUCTURE-TYPEP 2)
(LABEL 9)
(LABEL 5)    (JRST 3)
(LABEL 4)    (MOVE O1 -6 Q)
             (CALL LISTP 1)
             (JUMPE O1 11)
             (MOVE O1 -6 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 -3 Q)
             (MOVE O2 (CONSTANT 2))
             (CAME O2 -3 Q)
             (JRST 13)
             (MOVE O1 -8 Q)
             (CALL VECTORP 1)
             (JUMPE O1 14)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL LISP::VECTOR-ELTYPE 2)
             (JUMPE O1 14)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LENGTH 2)
             (JRST 15)
(LABEL 14)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 15)   (JRST 12)
(LABEL 13)   (MOVE O2 (CONSTANT 3))
             (CAME O2 -3 Q)
             (JRST 16)
             (MOVE O1 -8 Q)
             (CALL SIMPLE-VECTOR-P 1)
             (JUMPE O1 17)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL LISP::VECTOR-ELTYPE 2)
             (JUMPE O1 17)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LENGTH 2)
             (JRST 18)
(LABEL 17)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 18)   (JRST 12)
(LABEL 16)   (MOVE O2 (CONSTANT 4))
             (CAME O2 -3 Q)
             (JRST 19)
             (MOVE O1 -8 Q)
             (CALL STRINGP 1)
             (JUMPE O1 20)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LENGTH 2)
             (JRST 21)
(LABEL 20)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 21)   (JRST 12)
(LABEL 19)   (MOVE O2 (CONSTANT 5))
             (CAME O2 -3 Q)
             (JRST 22)
             (MOVE O1 -8 Q)
             (CALL SIMPLE-STRING-P 1)
             (JUMPE O1 23)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LENGTH 2)
             (JRST 24)
(LABEL 23)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 24)   (JRST 12)
(LABEL 22)   (MOVE O2 (CONSTANT 6))
             (CAME O2 -3 Q)
             (JRST 25)
             (MOVE O1 -8 Q)
             (CALL BIT-VECTOR-P 1)
             (JUMPE O1 26)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LENGTH 2)
             (JRST 27)
(LABEL 26)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 27)   (JRST 12)
(LABEL 25)   (MOVE O2 (CONSTANT 7))
             (CAME O2 -3 Q)
             (JRST 28)
             (MOVE O1 -8 Q)
             (CALL SIMPLE-BIT-VECTOR-P 1)
             (JUMPE O1 29)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LENGTH 2)
             (JRST 30)
(LABEL 29)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 30)   (JRST 12)
(LABEL 28)   (MOVE O2 (CONSTANT 8))
             (CAME O2 -3 Q)
             (JRST 31)
             (MOVE O2 -6 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::ARRAY-TYPEP 2)
             (JRST 12)
(LABEL 31)   (MOVE O2 (CONSTANT 9))
             (CAME O2 -3 Q)
             (JRST 32)
             (MOVE O1 -8 Q)
             (CALL LISP::SLISP-ARRAY-P 1)
             (JUMPN O1 33)
             (MOVE O2 -6 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::ARRAY-TYPEP 2)
             (JRST 34)
(LABEL 33)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 34)   (JRST 12)
(LABEL 32)   (MOVE O2 (CONSTANT 10))
             (CAME O2 -3 Q)
             (JRST 35)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -2 Q)
             (MOVE O1 -8 Q)
             (MOVE O6 O5)
             (FCALL 1)
             (JRST 12)
(LABEL 35)   (MOVE O2 (CONSTANT 11))
             (CAME O2 -3 Q)
             (JRST 36)
             (MOVE O1 -6 Q)
             (MOVE O2 1 O1)
             (MOVE O1 -8 Q)
             (CALL MEMBER 2)
             (JRST 12)
(LABEL 36)   (MOVE O2 (CONSTANT 12))
             (CAME O2 -3 Q)
             (JRST 37)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL TYPEP 2)
             (TDCN O1 O1)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JRST 12)
(LABEL 37)   (MOVE O2 (CONSTANT 13))
             (CAME O2 -3 Q)
             (JRST 38)
             (MOVE O1 -6 Q)
             (MOVE O5 1 O1)
             (MOVEM O5 -1 Q)
             (MOVE O1 O5)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
(LABEL 43)   (MOVE O1 -1 Q)
             (CALL ATOM 1)
             (JUMPE O1 44)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 39)
(LABEL 44)   (MOVE O2 0 Q)
             (MOVE O1 -8 Q)
             (CALL TYPEP 2)
             (JUMPE O1 46)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JRST 39)
(LABEL 46)   (MOVE O1 -1 Q)
             (MOVE O1 1 O1)
             (MOVEM O1 -1 Q)
             (MOVE O1 0 O1)
             (MOVEM O1 0 Q)
             (JRST 43)
(LABEL 39)   (JRST 12)
(LABEL 38)   (MOVE O2 (CONSTANT 14))
             (CAME O2 -3 Q)
             (JRST 48)
             (MOVE O1 -6 Q)
             (MOVE O5 1 O1)
             (MOVEM O5 -1 Q)
             (MOVE O1 O5)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
(LABEL 53)   (MOVE O1 -1 Q)
             (CALL ATOM 1)
             (JUMPE O1 54)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JRST 49)
(LABEL 54)   (MOVE O2 0 Q)
             (MOVE O1 -8 Q)
             (CALL TYPEP 2)
             (JUMPN O1 56)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 49)
(LABEL 56)   (MOVE O1 -1 Q)
             (MOVE O1 1 O1)
             (MOVEM O1 -1 Q)
             (MOVE O1 0 O1)
             (MOVEM O1 0 Q)
             (JRST 53)
(LABEL 49)   (JRST 12)
(LABEL 48)   (MOVE O2 (CONSTANT 15))
             (CAME O2 -3 Q)
             (JRST 58)
             (MOVE O1 -8 Q)
             (CALL INTEGERP 1)
             (JUMPE O1 59)
             (MOVE O2 -6 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LIMITS 2)
             (JRST 60)
(LABEL 59)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 60)   (JRST 12)
(LABEL 58)   (MOVE O2 (CONSTANT 16))
             (CAME O2 -3 Q)
             (JRST 61)
             (MOVE O1 -8 Q)
             (CALL RATIONALP 1)
             (JUMPE O1 62)
             (MOVE O2 -6 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LIMITS 2)
             (JRST 63)
(LABEL 62)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 63)   (JRST 12)
(LABEL 61)   (MOVE O2 (CONSTANT 17))
             (CAME O2 -3 Q)
             (JRST 64)
             (MOVE O1 -8 Q)
             (CALL FLOATP 1)
             (JUMPE O1 65)
             (MOVE O2 -6 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LIMITS 2)
             (JRST 66)
(LABEL 65)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 66)   (JRST 12)
(LABEL 64)   (MOVE O2 (CONSTANT 18))
             (CAME O2 -3 Q)
             (JRST 67)
             (MOVE O1 -8 Q)
             (CALL SHORT-FLOATP 1)
             (JUMPE O1 68)
             (MOVE O2 -6 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LIMITS 2)
             (JRST 69)
(LABEL 68)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 69)   (JRST 12)
(LABEL 67)   (MOVE O2 (CONSTANT 19))
             (CAME O2 -3 Q)
             (JRST 70)
             (MOVE O1 -8 Q)
             (CALL SINGLE-FLOATP 1)
             (JUMPE O1 71)
             (MOVE O2 -6 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LIMITS 2)
             (JRST 72)
(LABEL 71)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 72)   (JRST 12)
(LABEL 70)   (MOVE O2 (CONSTANT 20))
             (CAME O2 -3 Q)
             (JRST 73)
             (MOVE O1 -8 Q)
             (CALL DOUBLE-FLOATP 1)
             (JUMPE O1 74)
             (MOVE O2 -6 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LIMITS 2)
             (JRST 75)
(LABEL 74)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 75)   (JRST 12)
(LABEL 73)   (MOVE O2 (CONSTANT 21))
             (CAME O2 -3 Q)
             (JRST 76)
             (MOVE O1 -8 Q)
             (CALL LONG-FLOATP 1)
             (JUMPE O1 77)
             (MOVE O2 -6 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::TEST-LIMITS 2)
             (JRST 78)
(LABEL 77)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 78)   (JRST 12)
(LABEL 76)   (MOVE O2 (CONSTANT 22))
             (CAME O2 -3 Q)
             (JRST 79)
             (MOVE O1 -8 Q)
             (CALL INTEGERP 1)
             (JUMPE O1 80)
             (MOVE O2 (CONSTANT 23))
             (MOVE O1 -8 Q)
             (CALL < 2)
             (JUMPN O1 80)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL < 2)
             (JRST 81)
(LABEL 80)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 81)   (JRST 12)
(LABEL 79)   (MOVE O2 (CONSTANT 24))
             (CAME O2 -3 Q)
             (JRST 82)
             (MOVE O1 -8 Q)
             (CALL INTEGERP 1)
             (JUMPE O1 83)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -1 Q)
             (MOVE O1 O5)
             (TDCN O1 O1)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JUMPN O1 85)
             (MOVE O2 (CONSTANT 25))
             (CAME O2 -1 Q)
             (SKIPA O1 NIL)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JUMPN O1 85)
             (MOVE O1 -8 Q)
             (CALL INTEGER-LENGTH 1)
             (MOVE O2 O1)
             (MOVE O1 -1 Q)
             (CALL > 2)
(LABEL 85)   (JRST 84)
(LABEL 83)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 84)   (JRST 12)
(LABEL 82)   (MOVE O2 (CONSTANT 26))
             (CAME O2 -3 Q)
             (JRST 86)
             (MOVE O1 -8 Q)
             (CALL INTEGERP 1)
             (JUMPE O1 87)
             (MOVE O2 (CONSTANT 23))
             (MOVE O1 -8 Q)
             (CALL < 2)
             (JUMPN O1 87)
             (MOVE O1 -6 Q)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -1 Q)
             (MOVE O1 O5)
             (TDCN O1 O1)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JUMPN O1 89)
             (MOVE O2 (CONSTANT 25))
             (CAME O2 -1 Q)
             (SKIPA O1 NIL)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JUMPN O1 89)
             (MOVE O1 -8 Q)
             (CALL INTEGER-LENGTH 1)
             (MOVE O2 O1)
             (MOVE O1 -1 Q)
             (CALL < 2)
             (TDCN O1 O1)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
(LABEL 89)   (JRST 88)
(LABEL 87)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 88)   (JRST 12)
(LABEL 86)   (MOVE O2 (CONSTANT 27))
             (CAME O2 -3 Q)
             (JRST 90)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 12)
(LABEL 90)   (SKIPA)
             (JRST 91)
             (MOVE O1 -6 Q)
             (SKIPE NIL 1 O1)
             (JRST 93)
             (MOVE O1 -6 Q)
             (MOVE O2 0 O1)
             (MOVE O1 -8 Q)
             (CALL TYPEP 2)
             (JRST 92)
(LABEL 93)   (SKIPA)
             (JRST 94)
             (MOVE O2 -6 Q)
             (MOVE O1 (CONSTANT 28))
             (CALL ERROR 2)
(LABEL 94)
(LABEL 92)
(LABEL 91)
(LABEL 12)   (JRST 3)
(LABEL 11)   (SKIPA)
             (JRST 97)
             (MOVE O2 -6 Q)
             (MOVE O1 (CONSTANT 28))
             (CALL ERROR 2)
(LABEL 97)
(LABEL 3)    (SUBI Q 9)
             (POPJ P)
)

(%PUT (QUOTE TYPEP) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT TYPE))) 
(%PUT (QUOTE TYPEP) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE TYPEP) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_TYPE-EXPAND EXPR
       (ENTRY-POINTS (2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(DEFTYPE-EXPANDER)
       (CODE-START)
(LABEL 1)    (ADDI Q 3)
             (MOVEM O1 -2 Q)
             (CALL SYMBOLP 1)
             (JUMPE O1 4)
             (MOVE O2 (CONSTANT 0))
             (MOVE O1 -2 Q)
             (CALL GET 2)
             (MOVEM O1 -1 Q)
             (JRST 3)
(LABEL 4)    (MOVE O1 -2 Q)
             (CALL CONSP 1)
             (JUMPE O1 6)
             (MOVE O1 -2 Q)
             (MOVE O1 0 O1)
             (CALL SYMBOLP 1)
             (SKIPN NIL O1)
(LABEL 6)    (JRST 5)
             (MOVE O1 -2 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
             (MOVE O2 (CONSTANT 0))
             (MOVE O1 O5)
             (CALL GET 2)
             (MOVEM O1 -1 Q)
             (JRST 3)
(LABEL 5)    (SKIPA)
             (JRST 8)
             (MOVEM NIL -1 Q)
(LABEL 8)
(LABEL 3)    (SKIPN NIL -1 Q)
             (JRST 10)
             (MOVE O5 -1 Q)
             (MOVEM O5 0 Q)
             (MOVE O1 -2 Q)
             (CALL CONSP 1)
             (JUMPE O1 12)
             (MOVE O1 -2 Q)
             (JRST 13)
(LABEL 12)   (MOVE O1 -2 Q)
             (CALL LIST 1)
(LABEL 13)   (MOVE O6 0 Q)
             (FCALL 1)
             (CALL LISP::TYPE-EXPAND 1)
             (JRST 11)
(LABEL 10)   (MOVE O1 -2 Q)
             (MOVEI N 1)
(LABEL 11)   (SUBI Q 3)
             (POPJ P)
)

(%PUT (QUOTE TYPE-EXPAND) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (FORM))) 
(%PUT (QUOTE TYPE-EXPAND) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE TYPE-EXPAND) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_STRUCTURE-TYPEP EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(DEFSTRUCT-DESCRIPTION T "~S unknown type specifier.")
       (CODE-START)
(LABEL 1)    (ADDI Q 4)
             (MOVEM O1 -3 Q)
             (MOVEM O2 -2 Q)
             (MOVE O1 O2)
             (CALL LISP::TYPE-EXPAND 1)
             (MOVEM O1 -1 Q)
             (MOVEM NIL 0 Q)
             (CALL SYMBOLP 1)
             (JUMPE O1 5)
             (MOVE O2 (CONSTANT 0))
             (MOVE O1 -1 Q)
             (CALL GET 2)
             (SKIPN NIL O1)
(LABEL 5)    (JRST 4)
             (MOVE O1 -3 Q)
             (CALL STRUCTUREP 1)
             (JUMPE O1 7)
             (MOVE O1 -3 Q)
             (MOVE O1 0 O1)
             (MOVEM O1 0 Q)
             (JUMPE O1 7)
             (MOVE O2 -1 Q)
             (CAME O2 0 Q)
             (SKIPA O1 NIL)
             (MOVE O1 (CONSTANT 1))
             (MOVEI N 1)
             (JUMPN O1 9)
             (MOVE O2 -1 Q)
             (MOVE O1 0 Q)
             (CALL LISP::INCLUDE-CHASE 2)
(LABEL 9)    (JRST 8)
(LABEL 7)    (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 8)    (JRST 3)
(LABEL 4)    (SKIPA)
             (JRST 10)
             (MOVE O2 -1 Q)
             (MOVE O1 (CONSTANT 2))
             (CALL ERROR 2)
(LABEL 10)
(LABEL 3)    (SUBI Q 4)
             (POPJ P)
)

(%PUT (QUOTE STRUCTURE-TYPEP) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT TYPE))) 
(%PUT (QUOTE STRUCTURE-TYPEP) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE STRUCTURE-TYPEP) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_VECTOR-ELTYPE EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(T * STRING-CHAR BIT SIMPLE-VECTOR)
       (CODE-START)
(LABEL 1)    (ADDI Q 5)
             (MOVEM O1 -4 Q)
             (MOVEM O2 -3 Q)
             (MOVE O1 O2)
             (CALL LISP::TYPE-EXPAND 1)
             (MOVEM O1 -2 Q)
             (MOVEM NIL -1 Q)
             (SKIPE NIL -2 Q)
             (JRST 4)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JRST 3)
(LABEL 4)    (MOVE O2 (CONSTANT 1))
             (CAME O2 -2 Q)
             (JRST 5)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JRST 3)
(LABEL 5)    (MOVE O2 (CONSTANT 2))
             (CAME O2 -2 Q)
             (JRST 6)
             (MOVE O1 -4 Q)
             (CALL STRINGP 1)
             (JRST 3)
(LABEL 6)    (MOVE O2 (CONSTANT 3))
             (CAME O2 -2 Q)
             (JRST 7)
             (MOVE O1 -4 Q)
             (CALL BIT-VECTOR-P 1)
             (JRST 3)
(LABEL 7)    (SKIPA)
             (JRST 8)
             (MOVE O1 -4 Q)
             (CALL TYPE-OF 1)
             (MOVEM O1 -1 Q)
             (CALL LISTP 1)
             (JUMPE O1 9)
             (MOVE O1 -1 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
             (MOVE O2 (CONSTANT 4))
             (CAME O2 0 Q)
             (JRST 11)
             (MOVE O2 (CONSTANT 0))
             (JRST 12)
(LABEL 11)   (MOVE O1 -1 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
(LABEL 12)   (MOVE O1 -2 Q)
             (CALL EQUAL 2)
             (JRST 10)
(LABEL 9)    (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 10)
(LABEL 8)
(LABEL 3)    (SUBI Q 5)
             (POPJ P)
)

(%PUT (QUOTE VECTOR-ELTYPE) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT ELTYPE))) 
(%PUT (QUOTE VECTOR-ELTYPE) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE VECTOR-ELTYPE) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_TEST-LENGTH EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(T *)
       (CODE-START)
(LABEL 1)    (ADDI Q 2)
             (MOVEM O1 -1 Q)
             (MOVEM O2 0 Q)
             (MOVE O1 O2)
             (TDCN O1 O1)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JUMPN O1 3)
             (MOVE O2 (CONSTANT 1))
             (CAME O2 0 Q)
             (SKIPA O1 NIL)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JUMPN O1 3)
             (MOVE O1 -1 Q)
             (CALL LENGTH 1)
             (MOVE O2 O1)
             (MOVE O1 0 Q)
             (CALL = 2)
(LABEL 3)    (SUBI Q 2)
             (POPJ P)
)

(%PUT (QUOTE TEST-LENGTH) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT LENGTH))) 
(%PUT (QUOTE TEST-LENGTH) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE TEST-LENGTH) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_ARRAY-TYPEP EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(* STRING-CHAR 0 BIT (MOD 2) SIMPLE-VECTOR T)
       (CODE-START)
(LABEL 1)    (ADDI Q 10)
             (MOVEM O1 -9 Q)
             (MOVEM O2 -8 Q)
             (MOVE O1 O2)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -7 Q)
             (MOVE O1 O2)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -6 Q)
             (MOVEM NIL -5 Q)
             (MOVE O1 -9 Q)
             (CALL ARRAYP 1)
             (JUMPE O1 3)
             (SKIPE NIL -7 Q)
             (JRST 6)
             (JRST1 5)
(LABEL 6)    (MOVE O2 (CONSTANT 0))
             (CAME O2 -7 Q)
             (JRST 7)
             (JRST1 5)
(LABEL 7)    (MOVE O2 (CONSTANT 1))
             (CAME O2 -7 Q)
             (JRST 8)
             (MOVE O1 -9 Q)
             (CALL SIMPLE-STRING-P 1)
             (JUMPN1 O1 9)
             (MOVE O2 (CONSTANT 2))
             (MOVE O1 -9 Q)
             (CALL LISP::HEADER-REF 2)
             (CALL SIMPLE-STRING-P 1)
             (SKIPN NIL O1)
(LABEL 9)    (JRST 5)
             (JRST1 5)
(LABEL 8)    (MOVE O2 (CONSTANT 3))
             (CAME O2 -7 Q)
             (JRST 10)
             (MOVE O1 -9 Q)
             (CALL TYPE-OF 1)
             (MOVEM O1 -5 Q)
             (CALL LISTP 1)
             (JUMPE O1 11)
             (MOVE O1 -5 Q)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -4 Q)
             (MOVE O2 (CONSTANT 4))
             (MOVE O1 O5)
             (CALL EQUAL 2)
             (SKIPN NIL O1)
(LABEL 11)   (JRST 5)
             (JRST1 5)
(LABEL 10)   (SKIPA)
             (JRST 13)
             (MOVE O1 -9 Q)
             (CALL TYPE-OF 1)
             (MOVEM O1 -5 Q)
             (CALL LISTP 1)
             (JUMPE O1 14)
             (MOVE O1 -5 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 -3 Q)
             (MOVE O2 (CONSTANT 5))
             (CAME O2 -3 Q)
             (JRST 16)
             (MOVE O2 (CONSTANT 6))
             (JRST 17)
(LABEL 16)   (MOVE O1 -5 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
(LABEL 17)   (MOVE O1 -7 Q)
             (CALL EQUAL 2)
             (SKIPN NIL O1)
(LABEL 14)   (JRST 5)
             (JRST1 5)
(LABEL 13)
(LABEL 5)    (JRST 3)
             (MOVE O1 -6 Q)
             (TDCN O1 O1)
             (MOVE O1 (CONSTANT 6))
             (MOVEI N 1)
             (JUMPN O1 19)
             (MOVE O2 (CONSTANT 0))
             (CAME O2 -6 Q)
             (SKIPA O1 NIL)
             (MOVE O1 (CONSTANT 6))
             (MOVEI N 1)
             (JUMPN O1 19)
             (MOVE O5 -6 Q)
             (MOVEM O5 -3 Q)
             (MOVE O1 -9 Q)
             (CALL VECTORP 1)
             (JUMPE O1 21)
             (MOVE O1 -9 Q)
             (CALL LENGTH 1)
             (CALL LIST 1)
             (MOVEM O1 -2 Q)
             (JRST 22)
(LABEL 21)   (MOVE O1 -9 Q)
             (CALL TYPE-OF 1)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -2 Q)
(LABEL 22)
(LABEL 26)   (MOVE O1 -3 Q)
             (CALL ATOM 1)
             (JUMPE O1 27)
             (MOVE O1 -2 Q)
             (CALL ATOM 1)
             (JRST 20)
(LABEL 27)   (MOVE O1 -2 Q)
             (CALL ATOM 1)
             (JUMPE O1 30)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 20)
(LABEL 30)   (MOVE O1 -3 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 -1 Q)
             (MOVE O2 (CONSTANT 0))
             (CAMN O2 -1 Q)
             (JRST 29)
             (MOVE O5 0 O1)
             (MOVEM O5 -1 Q)
             (MOVE O1 -2 Q)
             (MOVE O2 0 O1)
             (MOVE O1 O5)
             (CALL EQL 2)
             (JUMPN O1 29)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 20)
(LABEL 29)   (MOVE O1 -3 Q)
             (MOVE O5 1 O1)
             (MOVEM O5 -1 Q)
             (MOVE O1 -2 Q)
             (MOVE O5 1 O1)
             (MOVEM O5 0 Q)
             (MOVE O1 -1 Q)
             (MOVEM O1 -3 Q)
             (MOVE O1 O5)
             (MOVEM O1 -2 Q)
             (JRST 26)
(LABEL 20)
(LABEL 19)   (JRST 4)
(LABEL 3)    (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 4)    (SUBI Q 10)
             (POPJ P)
)

(%PUT (QUOTE ARRAY-TYPEP) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT TYPE))) 
(%PUT (QUOTE ARRAY-TYPEP) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE ARRAY-TYPEP) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_TEST-LIMITS EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(* T)
       (CODE-START)
(LABEL 1)    (ADDI Q 4)
             (MOVEM O1 -3 Q)
             (MOVEM O2 -2 Q)
             (MOVE O1 O2)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -1 Q)
             (MOVE O1 O2)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
             (SKIPE NIL -1 Q)
             (JRST 6)
             (JRST1 5)
(LABEL 6)    (MOVE O2 (CONSTANT 0))
             (CAME O2 -1 Q)
             (JRST 7)
             (JRST1 5)
(LABEL 7)    (MOVE O1 -1 Q)
             (CALL NUMBERP 1)
             (JUMPE O1 8)
             (MOVE O2 -1 Q)
             (MOVE O1 -3 Q)
             (CALL < 2)
             (JUMPN O1 5)
             (JRST1 5)
(LABEL 8)    (MOVE O1 -1 Q)
             (CALL CONSP 1)
             (JUMPE O1 10)
             (MOVE O1 -1 Q)
             (MOVE O1 0 O1)
             (CALL NUMBERP 1)
             (SKIPN NIL O1)
(LABEL 10)   (JRST 9)
             (MOVE O1 -1 Q)
             (MOVE O2 0 O1)
             (MOVE O1 -3 Q)
             (CALL > 2)
             (JUMPE O1 5)
             (JRST1 5)
(LABEL 9)    (SKIPA)
             (JRST 12)
             (JRST 5)
             (JRST1 5)
(LABEL 12)
(LABEL 5)    (JRST 3)
             (SKIPE NIL 0 Q)
             (JRST 15)
             (MOVE O1 (CONSTANT 1))
             (MOVEI N 1)
             (JRST 14)
(LABEL 15)   (MOVE O2 (CONSTANT 0))
             (CAME O2 0 Q)
             (JRST 16)
             (MOVE O1 (CONSTANT 1))
             (MOVEI N 1)
             (JRST 14)
(LABEL 16)   (MOVE O1 0 Q)
             (CALL NUMBERP 1)
             (JUMPE O1 17)
             (MOVE O2 0 Q)
             (MOVE O1 -3 Q)
             (CALL > 2)
             (TDCN O1 O1)
             (MOVE O1 (CONSTANT 1))
             (MOVEI N 1)
             (JRST 14)
(LABEL 17)   (MOVE O1 0 Q)
             (CALL CONSP 1)
             (JUMPE O1 19)
             (MOVE O1 0 Q)
             (MOVE O1 0 O1)
             (CALL NUMBERP 1)
             (SKIPN NIL O1)
(LABEL 19)   (JRST 18)
             (MOVE O1 0 Q)
             (MOVE O2 0 O1)
             (MOVE O1 -3 Q)
             (CALL < 2)
             (JRST 14)
(LABEL 18)   (SKIPA)
             (JRST 21)
             (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 21)
(LABEL 14)   (JRST 4)
(LABEL 3)    (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 4)    (SUBI Q 4)
             (POPJ P)
)

(%PUT (QUOTE TEST-LIMITS) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT TYPE))) 
(%PUT (QUOTE TEST-LIMITS) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE TEST-LIMITS) (QUOTE %SOURCE-DOCUMENTATION)))) 
(%PUT (QUOTE SIMPLE-ARRAY-P) (QUOTE %FUN-DOCUMENTATION) (QUOTE "Returns T if the object is a simple array, else returns NIL.")) 

#_(LAP #0_SIMPLE-ARRAY-P EXPR
       (ENTRY-POINTS (2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(T)
       (CODE-START)
(LABEL 1)    (ADDI Q 1)
             (MOVEM O1 0 Q)
             (CALL ARRAYP 1)
             (JUMPE O1 3)
             (MOVE O1 0 Q)
             (CALL LISP::SLISP-ARRAY-P 1)
             (TDCN O1 O1)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JRST 4)
(LABEL 3)    (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 4)    (SUBI Q 1)
             (POPJ P)
)

(%PUT (QUOTE SIMPLE-ARRAY-P) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT))) 
(%PUT (QUOTE SIMPLE-ARRAY-P) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE SIMPLE-ARRAY-P) (QUOTE %SOURCE-DOCUMENTATION)))) 
(%PUT (QUOTE COMPLEXP) (QUOTE %FUN-DOCUMENTATION) (QUOTE "Returns T if the object is a complex number, else returns NIL.")) 

#_(LAP #0_COMPLEXP EXPR
       (ENTRY-POINTS (2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_NIL
       (CODE-START)
(LABEL 1)    (ADDI Q 1)
             (MOVEM O1 0 Q)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (SUBI Q 1)
             (POPJ P)
)

(%PUT (QUOTE COMPLEXP) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OBJECT))) 
(%PUT (QUOTE COMPLEXP) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE COMPLEXP) (QUOTE %SOURCE-DOCUMENTATION)))) 
(%PUT (QUOTE EQUALP) (QUOTE %FUN-DOCUMENTATION) (QUOTE "Just like EQUAL, but more liberal in several respects.
  Numbers may be of different types, as long as the values are identical
  after coercion.  Characters may differ in alphabetic case.  Vectors and
  arrays must have identical dimensions and EQUALP elements, but may differ
  in their type restriction.")) 

#_(LAP #0_EQUALP EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(T 0 2)
       (CODE-START)
(LABEL 1)    (ADDI Q 8)
             (MOVEM O1 -7 Q)
             (MOVEM O2 -6 Q)
             (CALL EQL 2)
             (JUMPE O1 4)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JRST 3)
(LABEL 4)    (MOVE O1 -7 Q)
             (CALL CHARACTERP 1)
             (JUMPE O1 5)
             (MOVE O2 -6 Q)
             (MOVE O1 -7 Q)
             (CALL CHAR-EQUAL 2)
             (JRST 3)
(LABEL 5)    (MOVE O1 -7 Q)
             (CALL NUMBERP 1)
             (JUMPE O1 6)
             (MOVE O1 -6 Q)
             (CALL NUMBERP 1)
             (JUMPE O1 7)
             (MOVE O2 -6 Q)
             (MOVE O1 -7 Q)
             (CALL = 2)
             (JRST 8)
(LABEL 7)    (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 8)    (JRST 3)
(LABEL 6)    (MOVE O1 -7 Q)
             (CALL CONSP 1)
             (JUMPE O1 9)
             (MOVE O1 -6 Q)
             (CALL CONSP 1)
             (JUMPE O1 10)
             (MOVE O1 -7 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 -5 Q)
             (MOVE O1 -6 Q)
             (MOVE O2 0 O1)
             (MOVE O1 O5)
             (CALL EQUALP 2)
             (JUMPE O1 10)
             (MOVE O1 -7 Q)
             (MOVE O5 1 O1)
             (MOVEM O5 -5 Q)
             (MOVE O1 -6 Q)
             (MOVE O2 1 O1)
             (MOVE O1 O5)
             (CALL EQUALP 2)
             (JRST 11)
(LABEL 10)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 11)   (JRST 3)
(LABEL 9)    (MOVE O1 -7 Q)
             (CALL VECTORP 1)
             (JUMPE O1 12)
             (MOVE O1 -7 Q)
             (CALL LENGTH 1)
             (MOVEM O1 -4 Q)
             (MOVE O1 -6 Q)
             (CALL VECTORP 1)
             (JUMPE O1 13)
             (MOVE O1 -6 Q)
             (CALL LENGTH 1)
             (MOVE O2 O1)
             (MOVE O1 -4 Q)
             (CALL = 2)
             (JUMPE O1 13)
             (MOVE O5 (CONSTANT 1))
             (MOVEM O5 -2 Q)
(LABEL 19)   (MOVE O2 -4 Q)
             (MOVE O1 -2 Q)
             (CALL = 2)
             (JUMPE O1 20)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JRST 15)
(LABEL 20)   (MOVE O2 -2 Q)
             (MOVE O1 -7 Q)
             (CALL AREF 2)
             (MOVEM O1 -1 Q)
             (MOVE O2 -2 Q)
             (MOVE O1 -6 Q)
             (CALL AREF 2)
             (MOVE O2 O1)
             (MOVE O1 -1 Q)
             (CALL EQUALP 2)
             (JUMPN O1 22)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 15)
(LABEL 22)   (MOVE O1 -2 Q)
             (CALL 1+ 1)
             (MOVEM O1 -2 Q)
             (JRST 19)
(LABEL 15)   (JRST 14)
(LABEL 13)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 14)   (JRST 3)
(LABEL 12)   (MOVE O1 -7 Q)
             (CALL ARRAYP 1)
             (JUMPE O1 23)
             (MOVE O1 -7 Q)
             (CALL TYPE-OF 1)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -5 Q)
             (MOVE O1 -6 Q)
             (CALL TYPE-OF 1)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 -5 Q)
             (CALL EQUAL 2)
             (JUMPE O1 24)
             (MOVE O5 (CONSTANT 1))
             (MOVEM O5 -4 Q)
             (MOVE O2 (CONSTANT 2))
             (MOVE O1 -7 Q)
             (CALL LISP::HEADER-REF 2)
             (MOVEM O1 -3 Q)
             (MOVE O2 (CONSTANT 1))
             (MOVE O1 -7 Q)
             (CALL LISP::HEADER-REF 2)
             (MOVEM O1 -2 Q)
             (MOVE O2 (CONSTANT 1))
             (MOVE O1 -6 Q)
             (CALL LISP::HEADER-REF 2)
             (MOVEM O1 -1 Q)
(LABEL 30)   (MOVE O2 -3 Q)
             (MOVE O1 -4 Q)
             (CALL = 2)
             (JUMPE O1 31)
             (MOVE O1 (CONSTANT 0))
             (MOVEI N 1)
             (JRST 26)
(LABEL 31)   (MOVE O2 -4 Q)
             (MOVE O1 -2 Q)
             (CALL AREF 2)
             (MOVEM O1 0 Q)
             (MOVE O2 -4 Q)
             (MOVE O1 -1 Q)
             (CALL AREF 2)
             (MOVE O2 O1)
             (MOVE O1 0 Q)
             (CALL EQUALP 2)
             (JUMPN O1 33)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 26)
(LABEL 33)   (MOVE O1 -4 Q)
             (CALL 1+ 1)
             (MOVEM O1 -4 Q)
             (JRST 30)
(LABEL 26)   (JRST 25)
(LABEL 24)   (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 25)   (JRST 3)
(LABEL 23)   (SKIPA)
             (JRST 34)
             (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 34)
(LABEL 3)    (SUBI Q 8)
             (POPJ P)
)

(%PUT (QUOTE EQUALP) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (X Y))) 
(%PUT (QUOTE EQUALP) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>PRED.CLISP.13") (GET (QUOTE EQUALP) (QUOTE %SOURCE-DOCUMENTATION)))) 