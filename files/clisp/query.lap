
;;; CLC vP.U.V.1(2) compiling CARMEN::SS:<CLISP.UPSALA>QUERY.CLISP.5

(IN-PACKAGE (QUOTE LISP)) 
(EXPORT (QUOTE (BEEP Y-OR-N-P YES-OR-NO-P))) 
(%PUT (QUOTE BEEP) (QUOTE %FUN-DOCUMENTATION) (QUOTE "Beeps on the given stream.")) 

#_(LAP #0_BEEP EXPR
       (ENTRY-POINTS (2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(#\BELL)
       (CODE-START)
(LABEL 1)    (ADDI Q 1)
             (MOVEM O1 0 Q)
             (MOVE O2 O1)
             (MOVE O1 (CONSTANT 0))
             (CALL PRINC 2)
             (SUBI Q 1)
             (POPJ P)
)

(%PUT (QUOTE BEEP) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM))) 
(%PUT (QUOTE BEEP) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>QUERY.CLISP.5") (GET (QUOTE BEEP) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_QUERY-READLINE EXPR
       (ENTRY-POINTS (1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_("        " *QUERY-IO*)
       (CODE-START)
(LABEL 1)    (MOVE O1 (SPECIAL 1))
             (CALL READ-LINE 1)
             (MOVE O2 O1)
             (MOVE O1 (CONSTANT 0))
             (CALL STRING-TRIM 2)
             (POPJ P)
)

(%PUT (QUOTE QUERY-READLINE) (QUOTE %ARGS-DOCUMENTATION) (QUOTE NIL)) 
(%PUT (QUOTE QUERY-READLINE) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>QUERY.CLISP.5") (GET (QUOTE QUERY-READLINE) (QUOTE %SOURCE-DOCUMENTATION)))) 
(%PUT (QUOTE Y-OR-N-P) (QUOTE %FUN-DOCUMENTATION) (QUOTE "Prints the message on the given stream and reads characters until any of
  y, Y, n, or N are seen.")) 

#_(LAP #0_Y-OR-N-P EXPR
       (ENTRY-POINTS (1 3 4 5 6 7 8) REST)
       #0_(*QUERY-IO* FORMAT 0 (#\y #\Y) :TEST EQL T (#\n #\N) "Type \"y\" for yes or \"n\" for no. ")
       (CODE-START)
(LABEL 1)    (MOVE O1 NIL)
(LABEL 3)    (MOVE O2 NIL)
             (JRST 2)
(LABEL 4)    (MOVEI W2 1)
             (ICALL REST2)
             (JRST 2)
(LABEL 5)    (MOVEI W2 2)
             (ICALL REST3)
             (JRST 2)
(LABEL 6)    (MOVEI W2 3)
             (ICALL REST4)
             (JRST 2)
(LABEL 7)    (MOVEI W2 4)
             (ICALL REST5)
             (JRST 2)
(LABEL 8)    (MOVEI W2 1)
             (ICALL RESTX)
(LABEL 2)    (ADDI Q 5)
             (MOVEM O1 -4 Q)
             (MOVEM O2 -3 Q)
             (SKIPN NIL -4 Q)
             (JRST 11)
             (MOVE O1 (SPECIAL 0))
             (CALL FRESH-LINE 1)
             (MOVE O5 (SPECIAL 0))
             (MOVEM O5 -2 Q)
             (MOVE O4 -3 Q)
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 O5)
             (MOVE O3 -4 Q)
             (CALL APPLY 4)
(LABEL 11)   (CALL LISP::QUERY-READLINE 0)
             (MOVEM O1 -2 Q)
(LABEL 17)   (JRST 18)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 13)
(LABEL 18)   (MOVE O1 -2 Q)
             (CALL LENGTH 1)
             (CALL ZEROP 1)
             (JUMPN O1 21)
             (MOVE O2 (CONSTANT 2))
             (MOVE O1 -2 Q)
             (CALL AREF 2)
             (MOVEM O1 -1 Q)
             (JRST 20)
(LABEL 21)   (MOVEM NIL -1 Q)
(LABEL 20)   (MOVE O4 (CONSTANT 5))
             (MOVE O1 -1 Q)
             (MOVE O2 (CONSTANT 3))
             (MOVE O3 (CONSTANT 4))
             (CALL MEMBER 4)
             (JUMPE O1 24)
             (MOVE O1 (CONSTANT 6))
             (MOVEI N 1)
             (JRST 13)
(LABEL 24)   (MOVE O4 (CONSTANT 5))
             (MOVE O1 -1 Q)
             (MOVE O2 (CONSTANT 7))
             (MOVE O3 (CONSTANT 4))
             (CALL MEMBER 4)
             (JUMPE O1 25)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 13)
(LABEL 25)   (SKIPA)
             (JRST 26)
             (MOVE O5 (SPECIAL 0))
             (MOVEM O5 0 Q)
             (MOVE O4 NIL)
             (MOVE O1 (CONSTANT 8))
             (MOVE O2 O5)
             (MOVE O3 (CONSTANT 2))
             (CALL LISP::%SP-WRITE-STRING 4)
             (MOVE O1 (SPECIAL 0))
             (CALL TERPRI 1)
             (SKIPN NIL -4 Q)
             (JRST 28)
             (MOVE O5 (SPECIAL 0))
             (MOVEM O5 0 Q)
             (MOVE O4 -3 Q)
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 O5)
             (MOVE O3 -4 Q)
             (CALL APPLY 4)
(LABEL 28)
(LABEL 26)   (CALL LISP::QUERY-READLINE 0)
             (MOVEM O1 -2 Q)
             (JRST 17)
(LABEL 13)   (SUBI Q 5)
             (POPJ P)
)

(%PUT (QUOTE Y-OR-N-P) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (&OPTIONAL FORMAT-STRING &REST ARGUMENTS))) 
(%PUT (QUOTE Y-OR-N-P) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>QUERY.CLISP.5") (GET (QUOTE Y-OR-N-P) (QUOTE %SOURCE-DOCUMENTATION)))) 
(%PUT (QUOTE YES-OR-NO-P) (QUOTE %FUN-DOCUMENTATION) (QUOTE "Similar to Y-OR-N-P, except that it clears the input buffer,
 beeps, and uses READ-LINE to get YES or NO.")) 

#_(LAP #0_YES-OR-NO-P EXPR
       (ENTRY-POINTS (1 3 4 5 6 7 8) REST)
       #0_(*QUERY-IO* FORMAT "YES" T "NO" "Type \"yes\" for yes or \"no\" for no. " 0)
       (CODE-START)
(LABEL 1)    (MOVE O1 NIL)
(LABEL 3)    (MOVE O2 NIL)
             (JRST 2)
(LABEL 4)    (MOVEI W2 1)
             (ICALL REST2)
             (JRST 2)
(LABEL 5)    (MOVEI W2 2)
             (ICALL REST3)
             (JRST 2)
(LABEL 6)    (MOVEI W2 3)
             (ICALL REST4)
             (JRST 2)
(LABEL 7)    (MOVEI W2 4)
             (ICALL REST5)
             (JRST 2)
(LABEL 8)    (MOVEI W2 1)
             (ICALL RESTX)
(LABEL 2)    (ADDI Q 4)
             (MOVEM O1 -3 Q)
             (MOVEM O2 -2 Q)
             (MOVE O1 (SPECIAL 0))
             (CALL CLEAR-INPUT 1)
             (MOVE O1 (SPECIAL 0))
             (CALL BEEP 1)
             (SKIPN NIL -3 Q)
             (JRST 11)
             (MOVE O1 (SPECIAL 0))
             (CALL FRESH-LINE 1)
             (MOVE O5 (SPECIAL 0))
             (MOVEM O5 -1 Q)
             (MOVE O4 -2 Q)
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 O5)
             (MOVE O3 -3 Q)
             (CALL APPLY 4)
(LABEL 11)   (CALL LISP::QUERY-READLINE 0)
             (MOVEM O1 -1 Q)
(LABEL 17)   (JRST 18)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 13)
(LABEL 18)   (MOVE O2 -1 Q)
             (MOVE O1 (CONSTANT 2))
             (CALL STRING-EQUAL 2)
             (JUMPE O1 21)
             (MOVE O1 (CONSTANT 3))
             (MOVEI N 1)
             (JRST 13)
(LABEL 21)   (MOVE O2 -1 Q)
             (MOVE O1 (CONSTANT 4))
             (CALL STRING-EQUAL 2)
             (JUMPE O1 22)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 13)
(LABEL 22)   (SKIPA)
             (JRST 23)
             (MOVE O5 (SPECIAL 0))
             (MOVEM O5 0 Q)
             (MOVE O4 NIL)
             (MOVE O1 (CONSTANT 5))
             (MOVE O2 O5)
             (MOVE O3 (CONSTANT 6))
             (CALL LISP::%SP-WRITE-STRING 4)
             (MOVE O1 (SPECIAL 0))
             (CALL TERPRI 1)
             (SKIPN NIL -3 Q)
             (JRST 25)
             (MOVE O5 (SPECIAL 0))
             (MOVEM O5 0 Q)
             (MOVE O4 -2 Q)
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 O5)
             (MOVE O3 -3 Q)
             (CALL APPLY 4)
(LABEL 25)
(LABEL 23)   (CALL LISP::QUERY-READLINE 0)
             (MOVEM O1 -1 Q)
             (JRST 17)
(LABEL 13)   (SUBI Q 4)
             (POPJ P)
)

(%PUT (QUOTE YES-OR-NO-P) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (&OPTIONAL FORMAT-STRING &REST ARGUMENTS))) 
(%PUT (QUOTE YES-OR-NO-P) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>QUERY.CLISP.5") (GET (QUOTE YES-OR-NO-P) (QUOTE %SOURCE-DOCUMENTATION)))) 