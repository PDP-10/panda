================================================================
File: BOOT
Function: Read-From-String (%Sp-Read-From-String)
Symptom:
 (read-from-string "))))") =>
	NIL 4
 (read-from-string "))))" :ignore-whitespace t) =>
	Error in function LISP::%SP-READ-FROM-STRING.
	Unexpected EOF on channel #<CHN#26230647>

Cure: Yes please!
================================================================
Symptom:
 (simple-vector-p "frotz") => T
 (aref "frotz" 2) => #\o
 (svref "frotz" 2) => Array index out of bounds: 2
Diagnosis:
 Simple-strings are simple-vectors by definition, but are not handled as
such in this implementation.
================================================================
Symptom:
 Most package-handling functions (rename-package, in-package etc) don't
 parse their package argument very well, which can easily lead to
 disasters.
Cure:
 More type-checking.
================================================================
File: LAP
Symptom:
 Compiling a file with *print-base* non-decimal, and loading it with
 *read-base* decimal (or vice versa) fails.
Diagnosis:
 Labels are numeric, which makes them depend on *print- and *read-base*.
Cure:
 Make them alphabetic, for instance.
================================================================
File: PRED
Symptom:????
 TYPEP: the STRING-CHAR and STANDARD-CHAR specifiers require a little more
 pre-typechecking before being used. Following is a fix for PRED.CLISP:

REDIT 1(104) COMPARE by user D81.ANDERS-ANDERSSON, 19-Apr-86 06:01:20
File 1: SS:<CLISP>PRED.CLISP.5
File 2: PS:<D81.ANDERS-ANDERSSON.LISP>PRED.CLISP.4
***** CHANGE #2; PAGE 1, LINE 60; PAGE 1, LINE 61
    (compiled-function . compiled-function-p)
    (character . characterp)
    (number . numberp)
    (rational . rationalp)
    (float . floatp)
    (string-char . string-char-p)
    (integer . integerp)
    (ratio . ratiop)
    (short-float . short-floatp)
    (standard-char . standard-charp)
    (fixnum . fixnump)
 ---------------------------------
    (compiled-function . compiled-function-p)
    (character . characterp)
    (number . numberp)
    (rational . rationalp)
    (float . floatp)
    (integer . integerp)
    (ratio . ratiop)
    (short-float . short-floatp)
    (fixnum . fixnump)

***** CHANGE #3; PAGE 3, LINE 11; PAGE 3, LINE 11
  (let ((type (type-expand type))
	temp)
    (cond ((symbolp type)
	   (cond ((eq type 't) t)
		 ((eq type 'nil) nil)
		 ((setq temp (assq type type-pred-alist))
 ---------------------------------
  (let ((type (type-expand type))
	temp)
    (cond ((symbolp type)
	   (cond ((eq type 't) t)
		 ((eq type 'nil) nil)
		 ((setq temp (assq type '((string-char . string-char-p)
					  (standard-char . standard-char-p))))
		  (and (characterp object) (funcall (cdr temp) object)))
		 ((setq temp (assq type type-pred-alist))

-------
================================================================
Symptom: 
 Encapsulations can create problems, e.g. when redefining an
 encapsulated function and later decapsulating it, the new definition is
 zapped. 
Cure:
 Make DEFUN et al use FSET of the encapsulated definition.

