
;;; CLC vP.U.V.1(2) compiling CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10

(IN-PACKAGE (QUOTE LISP)) 
(%PUT (QUOTE *READ-SUPPRESS*) (QUOTE GLOBALLY-SPECIAL) T) 
(%PUT (QUOTE STD-LISP-READTABLE) (QUOTE GLOBALLY-SPECIAL) T) 
(%PUT (QUOTE *BQ-VECTOR-FLAG*) (QUOTE GLOBALLY-SPECIAL) T) 

#_(LAP #0_SHARP-BACKSLASH EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(*READTABLE* STD-LISP-READTABLE *READ-SUPPRESS* #\- 0 (("C" . CONTROL) ("M" . META) ("H" . HYPER) ("S" . SUPER)) :TEST EQUAL ("CONTROL" "META" "HYPER" "SUPER") "Redundant bit name in character name: ~A" "Meaningless bit name in character name: ~A" 1 "CONTROL" :CONTROL T "META" :META "HYPER" :HYPER "SUPER" :SUPER "Meaningless character name ~A")
       (CODE-START)
(LABEL 1)    (ADDI Q 9)
             (MOVEM O1 -8 Q)
             (MOVEM O2 -7 Q)
             (MOVEM O3 -6 Q)
             (MOVE O2 O1)
             (MOVE O1 -7 Q)
             (CALL UNREAD-CHAR 2)
             (MOVE O1 (SPECIAL 1))
             (SPEC-BIND (SPECIAL 0))
             (MOVEM O1 (SPECIAL 0))
             (MOVEM NIL -5 Q)
             (MOVE O1 -8 Q)
             (CALL LISP::READ-EXTENDED-TOKEN 1)
             (MOVEM O1 -4 Q)
             (SKIPN NIL (SPECIAL 2))
             (JRST 4)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (UNBIND 1)
             (JRST 2)
(LABEL 4)    (MOVE O2 -4 Q)
             (MOVE O1 (CONSTANT 3))
             (CALL POSITION 2)
             (MOVEM O1 -3 Q)
(LABEL 10)   (SKIPN NIL -3 Q)
             (JRST1 13)
             (MOVE O1 -3 Q)
             (CALL ZEROP 1)
             (SKIPN NIL O1)
(LABEL 13)   (JRST 11)
             (JRST 6)
(LABEL 11)   (MOVE O3 -3 Q)
             (MOVE O1 -4 Q)
             (MOVE O2 (CONSTANT 4))
             (CALL SUBSEQ 3)
             (CALL STRING-UPCASE 1)
             (MOVEM O1 -1 Q)
             (MOVE O1 -3 Q)
             (CALL 1+ 1)
             (MOVE O2 O1)
             (MOVE O1 -4 Q)
             (CALL SUBSEQ 2)
             (MOVEM O1 -4 Q)
             (MOVE O4 (CONSTANT 7))
             (MOVE O1 -1 Q)
             (MOVE O2 (CONSTANT 5))
             (MOVE O3 (CONSTANT 6))
             (CALL ASSOC 4)
             (MOVE O5 1 O1)
             (MOVEM O5 0 Q)
             (SKIPN NIL 0 Q)
             (JRST 14)
             (MOVE O1 0 Q)
             (CALL SYMBOL-NAME 1)
             (MOVEM O1 -1 Q)
(LABEL 14)   (MOVE O4 (CONSTANT 7))
             (MOVE O1 -1 Q)
             (MOVE O2 (CONSTANT 8))
             (MOVE O3 (CONSTANT 6))
             (CALL MEMBER 4)
             (JUMPE O1 17)
             (MOVE O4 (CONSTANT 7))
             (MOVE O1 -1 Q)
             (MOVE O2 -5 Q)
             (MOVE O3 (CONSTANT 6))
             (CALL MEMBER 4)
             (JUMPN O1 18)
             (MOVE O2 -5 Q)
             (MOVE O1 -1 Q)
             (CALL CONS 2)
             (MOVEM O1 -5 Q)
             (JRST 19)
(LABEL 18)   (MOVE O2 -1 Q)
             (MOVE O1 (CONSTANT 9))
             (CALL ERROR 2)
(LABEL 19)   (JRST 16)
(LABEL 17)   (SKIPA)
             (JRST 20)
             (MOVE O2 -1 Q)
             (MOVE O1 (CONSTANT 10))
             (CALL ERROR 2)
(LABEL 20)
(LABEL 16)   (MOVE O2 -4 Q)
             (MOVE O1 (CONSTANT 3))
             (CALL POSITION 2)
             (MOVEM O1 -3 Q)
             (JRST 10)
(LABEL 6)    (MOVE O1 -4 Q)
             (CALL LENGTH 1)
             (MOVEM O1 -2 Q)
             (MOVE O2 (CONSTANT 11))
             (CALL = 2)
             (JUMPE O1 22)
             (MOVE O2 (CONSTANT 4))
             (MOVE O1 -4 Q)
             (CALL AREF 2)
             (MOVEM O1 -3 Q)
             (JRST 23)
(LABEL 22)   (MOVE O1 -4 Q)
             (CALL NAME-CHAR 1)
             (MOVEM O1 -3 Q)
(LABEL 23)   (SKIPN NIL -3 Q)
             (JRST 25)
             (SKIPN NIL -6 Q)
             (JRST 26)
             (MOVE O3 -6 Q)
             (MOVE O1 -3 Q)
             (MOVE O2 (CONSTANT 4))
             (CALL MAKE-CHAR 3)
             (MOVEM O1 -3 Q)
(LABEL 26)   (MOVE O4 (CONSTANT 7))
             (MOVE O1 (CONSTANT 12))
             (MOVE O2 -5 Q)
             (MOVE O3 (CONSTANT 6))
             (CALL MEMBER 4)
             (JUMPE O1 28)
             (MOVE O3 (CONSTANT 14))
             (MOVE O1 -3 Q)
             (MOVE O2 (CONSTANT 13))
             (CALL SET-CHAR-BIT 3)
             (MOVEM O1 -3 Q)
(LABEL 28)   (MOVE O4 (CONSTANT 7))
             (MOVE O1 (CONSTANT 15))
             (MOVE O2 -5 Q)
             (MOVE O3 (CONSTANT 6))
             (CALL MEMBER 4)
             (JUMPE O1 30)
             (MOVE O3 (CONSTANT 14))
             (MOVE O1 -3 Q)
             (MOVE O2 (CONSTANT 16))
             (CALL SET-CHAR-BIT 3)
             (MOVEM O1 -3 Q)
(LABEL 30)   (MOVE O4 (CONSTANT 7))
             (MOVE O1 (CONSTANT 17))
             (MOVE O2 -5 Q)
             (MOVE O3 (CONSTANT 6))
             (CALL MEMBER 4)
             (JUMPE O1 32)
             (MOVE O3 (CONSTANT 14))
             (MOVE O1 -3 Q)
             (MOVE O2 (CONSTANT 18))
             (CALL SET-CHAR-BIT 3)
             (MOVEM O1 -3 Q)
(LABEL 32)   (MOVE O4 (CONSTANT 7))
             (MOVE O1 (CONSTANT 19))
             (MOVE O2 -5 Q)
             (MOVE O3 (CONSTANT 6))
             (CALL MEMBER 4)
             (JUMPE O1 34)
             (MOVE O3 (CONSTANT 14))
             (MOVE O1 -3 Q)
             (MOVE O2 (CONSTANT 20))
             (CALL SET-CHAR-BIT 3)
             (MOVEM O1 -3 Q)
(LABEL 34)   (MOVE O1 -3 Q)
             (MOVEI N 1)
             (JRST 24)
(LABEL 25)   (SKIPA)
             (JRST 36)
             (MOVE O2 -4 Q)
             (MOVE O1 (CONSTANT 21))
             (CALL ERROR 2)
(LABEL 36)
(LABEL 24)   (UNBIND 1)
(LABEL 2)    (SUBI Q 9)
             (POPJ P)
)

(%PUT (QUOTE SHARP-BACKSLASH) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM BACKSLASH FONT))) 
(%PUT (QUOTE SHARP-BACKSLASH) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-BACKSLASH) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-QUOTE EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(FUNCTION T)
       (CODE-START)
(LABEL 1)    (ADDI Q 3)
             (MOVEM O1 -2 Q)
             (MOVEM O2 -1 Q)
             (MOVEM O3 0 Q)
             (MOVE O4 (CONSTANT 1))
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (MOVE O2 O1)
             (MOVE O1 (CONSTANT 0))
             (CALL LIST 2)
             (SUBI Q 3)
             (POPJ P)
)

(%PUT (QUOTE SHARP-QUOTE) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-QUOTE) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-QUOTE) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-LEFT-PAREN EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(*BACKQUOTE-COUNT* *READ-SUPPRESS* "Vector longer than specified length: #~S~S" :START VECTOR *BQ-VECTOR-FLAG*)
       (CODE-START)
(LABEL 1)    (ADDI Q 7)
             (MOVEM O1 -6 Q)
             (MOVEM O2 -5 Q)
             (MOVEM O3 -4 Q)
             (MOVE O2 NIL)
             (CALL LISP::READ-LIST 2)
             (MOVEM O1 -3 Q)
             (CALL LENGTH 1)
             (MOVEM O1 -2 Q)
             (MOVE O1 (SPECIAL 1))
             (MOVEI N 1)
             (JUMPN O1 3)
             (MOVE O1 (SPECIAL 0))
             (CALL ZEROP 1)
             (JUMPE O1 5)
             (SKIPN NIL -4 Q)
             (JRST 6)
             (MOVE O2 -4 Q)
             (MOVE O1 -2 Q)
             (CALL > 2)
             (JUMPE O1 9)
             (MOVE O3 -3 Q)
             (MOVE O1 (CONSTANT 2))
             (MOVE O2 -4 Q)
             (CALL ERROR 3)
             (JRST 8)
(LABEL 9)    (SKIPA)
             (JRST 10)
             (MOVE O1 -4 Q)
             (CALL MAKE-ARRAY 1)
             (MOVEM O1 -1 Q)
             (MOVE O2 -3 Q)
             (CALL REPLACE 2)
             (MOVEM O1 -1 Q)
             (MOVE O1 -3 Q)
             (CALL LAST 1)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
             (MOVE O4 -2 Q)
             (MOVE O1 -1 Q)
             (MOVE O2 O5)
             (MOVE O3 (CONSTANT 3))
             (CALL FILL 4)
(LABEL 10)
(LABEL 8)    (JRST 7)
(LABEL 6)    (MOVE O2 (CONSTANT 4))
             (MOVE O1 -3 Q)
             (CALL COERCE 2)
(LABEL 7)    (JRST 3)
(LABEL 5)    (SKIPA)
             (JRST 12)
             (MOVE O5 (SPECIAL 5))
             (MOVEM O5 -1 Q)
             (MOVE O2 -3 Q)
             (MOVE O1 O5)
             (CALL CONS 2)
(LABEL 12)
(LABEL 3)    (SUBI Q 7)
             (POPJ P)
)

(%PUT (QUOTE SHARP-LEFT-PAREN) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE LENGTH))) 
(%PUT (QUOTE SHARP-LEFT-PAREN) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-LEFT-PAREN) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-STAR EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(*READ-SUPPRESS* "Escape character appeared after #*" "You have to give a little bit for non-zero #* bit-vectors." :ELEMENT-TYPE (MOD 2) :INITIAL-ELEMENT 0 #\0 #\1 1 "Illegal element given for ~
					  bitvector #~A*~A" "Bit vector is longer than specified length #~A*~A")
       (CODE-START)
(LABEL 1)    (ADDI Q 11)
             (MOVEM O1 -10 Q)
             (MOVEM O2 -9 Q)
             (MOVEM O3 -8 Q)
             (CALL LISP::READ-EXTENDED-TOKEN 1)
             (ADJUST-VALUES 2)
             (MOVEM O1 -7 Q)
             (MOVEM O2 -6 Q)
             (MOVE O1 (SPECIAL 0))
             (MOVEI N 1)
             (JUMPN O1 3)
             (SKIPN NIL -6 Q)
             (JRST 5)
             (MOVE O1 (CONSTANT 1))
             (CALL ERROR 1)
             (JRST 3)
(LABEL 5)    (SKIPN NIL -8 Q)
             (JRST 7)
             (MOVE O1 -8 Q)
             (CALL ZEROP 1)
             (JUMPN O1 7)
             (MOVE O1 -7 Q)
             (CALL LENGTH 1)
             (CALL ZEROP 1)
             (SKIPN NIL O1)
(LABEL 7)    (JRST 6)
             (MOVE O1 (CONSTANT 2))
             (CALL ERROR 1)
             (JRST 3)
(LABEL 6)    (SKIPN NIL -8 Q)
             (JRST1 10)
             (MOVE O1 -7 Q)
             (CALL LENGTH 1)
             (MOVE O2 O1)
             (MOVE O1 -8 Q)
             (CALL < 2)
             (SKIPE NIL O1)
(LABEL 10)   (JRST 9)
             (MOVE O1 -7 Q)
             (CALL LENGTH 1)
             (MOVEM O1 -5 Q)
             (CALL 1- 1)
             (MOVEM O1 -4 Q)
             (MOVE O1 -8 Q)
             (SKIPE NIL O1)
             (MOVEM O1 -3 Q)
             (JUMPN O1 11)
             (MOVE O5 -5 Q)
             (MOVEM O5 -3 Q)
(LABEL 11)   (MOVE O5 (CONSTANT 6))
             (MOVE O1 -3 Q)
             (MOVE O2 (CONSTANT 3))
             (MOVE O3 (CONSTANT 4))
             (MOVE O4 (CONSTANT 5))
             (CALL MAKE-ARRAY 5)
             (MOVEM O1 -2 Q)
             (MOVE O5 (CONSTANT 6))
             (MOVEM O5 -1 Q)
             (MOVEM NIL 0 Q)
(LABEL 16)   (MOVE O2 -3 Q)
             (MOVE O1 -1 Q)
             (CALL = 2)
             (JUMPE O1 17)
             (JRST 12)
(LABEL 17)   (MOVE O2 -5 Q)
             (MOVE O1 -1 Q)
             (CALL < 2)
             (JUMPE O1 19)
             (MOVE O2 -1 Q)
             (JRST 20)
(LABEL 19)   (MOVE O2 -4 Q)
(LABEL 20)   (MOVE O1 -7 Q)
             (CALL ELT 2)
             (MOVEM O1 0 Q)
             (MOVE O2 (CONSTANT 7))
             (CAME O2 0 Q)
             (JRST 22)
             (MOVE O3 (CONSTANT 6))
             (JRST 21)
(LABEL 22)   (MOVE O2 (CONSTANT 8))
             (CAME O2 0 Q)
             (JRST 23)
             (MOVE O3 (CONSTANT 9))
             (JRST 21)
(LABEL 23)   (SKIPA)
             (JRST 24)
             (MOVE O3 -7 Q)
             (MOVE O1 (CONSTANT 10))
             (MOVE O2 -8 Q)
             (CALL ERROR 3)
             (MOVE O3 O1)
(LABEL 24)
(LABEL 21)   (MOVE O1 -2 Q)
             (MOVE O2 -1 Q)
             (CALL LISP::%SETELT 3)
             (MOVE O1 -1 Q)
             (CALL 1+ 1)
             (MOVEM O1 -1 Q)
             (JRST 16)
(LABEL 12)   (MOVE O1 -2 Q)
             (MOVEI N 1)
             (JRST 3)
(LABEL 9)    (SKIPA)
             (JRST 26)
             (MOVE O3 -7 Q)
             (MOVE O1 (CONSTANT 11))
             (MOVE O2 -8 Q)
             (CALL ERROR 3)
(LABEL 26)
(LABEL 3)    (SUBI Q 11)
             (POPJ P)
)

(%PUT (QUOTE SHARP-STAR) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE NUMARG))) 
(%PUT (QUOTE SHARP-STAR) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-STAR) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-COLON EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(*READ-SUPPRESS* T #\: "Symbol following #: contains a #: ~S")
       (CODE-START)
(LABEL 1)    (ADDI Q 4)
             (MOVEM O1 -3 Q)
             (MOVEM O2 -2 Q)
             (MOVEM O3 -1 Q)
             (SKIPN NIL (SPECIAL 0))
             (JRST 4)
             (MOVE O4 (CONSTANT 1))
             (MOVE O1 -3 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 2)
(LABEL 4)    (MOVE O1 -3 Q)
             (CALL LISP::READ-EXTENDED-TOKEN 1)
             (MOVEM O1 0 Q)
             (MOVE O1 (SPECIAL 0))
             (MOVEI N 1)
             (JUMPN O1 6)
             (MOVE O2 0 Q)
             (MOVE O1 (CONSTANT 2))
             (CALL FIND 2)
             (JUMPE O1 8)
             (MOVE O2 0 Q)
             (MOVE O1 (CONSTANT 3))
             (CALL ERROR 2)
             (JRST 6)
(LABEL 8)    (SKIPA)
             (JRST 9)
             (MOVE O1 0 Q)
             (CALL MAKE-SYMBOL 1)
(LABEL 9)
(LABEL 6)
(LABEL 2)    (SUBI Q 4)
             (POPJ P)
)

(%PUT (QUOTE SHARP-COLON) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-COLON) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-COLON) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-DOT EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(T *READ-SUPPRESS*)
       (CODE-START)
(LABEL 1)    (ADDI Q 4)
             (MOVEM O1 -3 Q)
             (MOVEM O2 -2 Q)
             (MOVEM O3 -1 Q)
             (MOVE O4 (CONSTANT 0))
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (MOVEM O1 0 Q)
             (SKIPE NIL (SPECIAL 1))
             (JRST 4)
             (MOVE O1 0 Q)
             (CALL EVAL 1)
             (JRST 3)
(LABEL 4)    (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 3)    (SUBI Q 4)
             (POPJ P)
)

(%PUT (QUOTE SHARP-DOT) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-DOT) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-DOT) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-COMMA EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(T *READ-SUPPRESS*)
       (CODE-START)
(LABEL 1)    (ADDI Q 4)
             (MOVEM O1 -3 Q)
             (MOVEM O2 -2 Q)
             (MOVEM O3 -1 Q)
             (MOVE O4 (CONSTANT 0))
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (MOVEM O1 0 Q)
             (SKIPE NIL (SPECIAL 1))
             (JRST 4)
             (MOVE O1 0 Q)
             (CALL EVAL 1)
             (JRST 3)
(LABEL 4)    (MOVE O1 NIL)
             (MOVEI N 1)
(LABEL 3)    (SUBI Q 4)
             (POPJ P)
)

(%PUT (QUOTE SHARP-COMMA) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-COMMA) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-COMMA) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-R EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(*READ-SUPPRESS* 0 1 "Escape character appears in number." #\- -1 #\+ #\/ "Illegal digits ~S for radix ~S")
       (CODE-START)
(LABEL 1)    (ADDI Q 15)
             (MOVEM O1 -14 Q)
             (MOVEM O2 -13 Q)
             (MOVEM O3 -12 Q)
             (CALL LISP::READ-EXTENDED-TOKEN 1)
             (ADJUST-VALUES 2)
             (MOVEM O1 -11 Q)
             (MOVEM O2 -10 Q)
             (SKIPN NIL (SPECIAL 0))
             (JRST 4)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 2)
(LABEL 4)    (MOVE O5 (CONSTANT 1))
             (MOVEM O5 -9 Q)
             (MOVE O5 (CONSTANT 1))
             (MOVEM O5 -8 Q)
             (MOVE O5 (CONSTANT 1))
             (MOVEM O5 -7 Q)
             (MOVE O1 -11 Q)
             (CALL LENGTH 1)
             (MOVEM O1 -6 Q)
             (MOVE O5 (CONSTANT 2))
             (MOVEM O5 -5 Q)
             (SKIPN NIL -10 Q)
             (JRST 6)
             (MOVE O1 (CONSTANT 3))
             (CALL ERROR 1)
(LABEL 6)    (MOVE O2 (CONSTANT 1))
             (MOVE O1 -11 Q)
             (CALL ELT 2)
             (MOVEM O1 -3 Q)
             (MOVE O2 (CONSTANT 4))
             (CAME O2 -3 Q)
             (JRST 9)
             (MOVE O1 (CONSTANT 5))
             (MOVEM O1 -5 Q)
             (MOVE O1 (CONSTANT 2))
             (MOVEM O1 -7 Q)
             (JRST 8)
(LABEL 9)    (MOVE O2 (CONSTANT 6))
             (CAME O2 -3 Q)
             (JRST 10)
             (MOVE O1 (CONSTANT 2))
             (MOVEM O1 -7 Q)
(LABEL 10)
(LABEL 8)    (MOVE O5 -7 Q)
             (MOVEM O5 -3 Q)
             (MOVEM NIL -2 Q)
(LABEL 16)   (MOVE O2 -6 Q)
             (MOVE O1 -3 Q)
             (CALL < 2)
             (JUMPE1 O1 19)
             (MOVE O2 -3 Q)
             (MOVE O1 -11 Q)
             (CALL ELT 2)
             (MOVEM O1 -1 Q)
             (MOVE O2 -12 Q)
             (CALL DIGIT-CHAR-P 2)
             (MOVEM O1 -2 Q)
             (SKIPE NIL O1)
(LABEL 19)   (JRST 17)
             (MOVE O1 -3 Q)
             (MOVEM O1 -7 Q)
             (JRST 12)
(LABEL 17)   (MOVE O2 -12 Q)
             (MOVE O1 -9 Q)
             (CALL * 2)
             (MOVEM O1 -1 Q)
             (MOVE O2 -2 Q)
             (CALL + 2)
             (MOVEM O1 -9 Q)
             (MOVE O1 -3 Q)
             (CALL 1+ 1)
             (MOVEM O1 -3 Q)
             (JRST 16)
(LABEL 12)   (MOVE O2 -6 Q)
             (MOVE O1 -7 Q)
             (CALL < 2)
             (JUMPN O1 21)
             (MOVE O2 -5 Q)
             (MOVE O1 -9 Q)
             (CALL * 2)
             (JRST 20)
(LABEL 21)   (MOVE O2 -7 Q)
             (MOVE O1 -11 Q)
             (CALL ELT 2)
             (MOVEM O1 -4 Q)
             (MOVE O2 (CONSTANT 7))
             (CAME O2 -4 Q)
             (JRST 22)
             (MOVE O1 -7 Q)
             (CALL 1+ 1)
             (MOVEM O1 -3 Q)
             (MOVEM NIL -2 Q)
             (MOVEM NIL -1 Q)
(LABEL 27)   (MOVE O2 -6 Q)
             (MOVE O1 -3 Q)
             (CALL < 2)
             (JUMPN O1 31)
             (MOVE O2 -5 Q)
             (MOVE O1 -9 Q)
             (CALL * 2)
             (MOVEM O1 0 Q)
             (MOVE O2 -8 Q)
             (CALL / 2)
             (MOVEM O1 -1 Q)
             (JUMPE O1 30)
             (JRST1 30)
(LABEL 31)   (MOVE O2 -3 Q)
             (MOVE O1 -11 Q)
             (CALL ELT 2)
             (MOVEM O1 0 Q)
             (MOVE O2 -12 Q)
             (CALL DIGIT-CHAR-P 2)
             (MOVEM O1 -2 Q)
             (JUMPN O1 32)
             (MOVE O3 -12 Q)
             (MOVE O1 (CONSTANT 8))
             (MOVE O2 -11 Q)
             (CALL ERROR 3)
             (MOVE O2 -5 Q)
             (MOVE O1 -9 Q)
             (CALL * 2)
             (MOVEM O1 0 Q)
             (MOVE O2 -8 Q)
             (CALL / 2)
             (MOVEM O1 -1 Q)
             (JUMPE O1 30)
             (JRST1 30)
(LABEL 32)   (SKIPA)
             (JRST 33)
             (JRST 30)
             (JRST1 30)
(LABEL 33)
(LABEL 30)   (JRST 28)
             (MOVE O1 -1 Q)
             (MOVEI N 1)
             (JRST 23)
(LABEL 28)   (MOVE O2 -12 Q)
             (MOVE O1 -8 Q)
             (CALL * 2)
             (MOVEM O1 0 Q)
             (MOVE O2 -2 Q)
             (CALL + 2)
             (MOVEM O1 -8 Q)
             (MOVE O1 -3 Q)
             (CALL 1+ 1)
             (MOVEM O1 -3 Q)
             (JRST 27)
(LABEL 23)   (JRST 20)
(LABEL 22)   (SKIPA)
             (JRST 35)
             (MOVE O3 -12 Q)
             (MOVE O1 (CONSTANT 8))
             (MOVE O2 -11 Q)
             (CALL ERROR 3)
(LABEL 35)
(LABEL 20)
(LABEL 2)    (SUBI Q 15)
             (POPJ P)
)

(%PUT (QUOTE SHARP-R) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE RADIX))) 
(%PUT (QUOTE SHARP-R) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-R) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-B EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(2)
       (CODE-START)
(LABEL 1)    (ADDI Q 3)
             (MOVEM O1 -2 Q)
             (MOVEM O2 -1 Q)
             (MOVEM O3 0 Q)
             (MOVE O3 (CONSTANT 0))
             (MOVE O2 NIL)
             (CALL LISP::SHARP-R 3)
             (SUBI Q 3)
             (POPJ P)
)

(%PUT (QUOTE SHARP-B) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-B) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-B) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-O EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(8)
       (CODE-START)
(LABEL 1)    (ADDI Q 3)
             (MOVEM O1 -2 Q)
             (MOVEM O2 -1 Q)
             (MOVEM O3 0 Q)
             (MOVE O3 (CONSTANT 0))
             (MOVE O2 NIL)
             (CALL LISP::SHARP-R 3)
             (SUBI Q 3)
             (POPJ P)
)

(%PUT (QUOTE SHARP-O) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-O) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-O) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-X EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(16)
       (CODE-START)
(LABEL 1)    (ADDI Q 3)
             (MOVEM O1 -2 Q)
             (MOVEM O2 -1 Q)
             (MOVEM O3 0 Q)
             (MOVE O3 (CONSTANT 0))
             (MOVE O2 NIL)
             (CALL LISP::SHARP-R 3)
             (SUBI Q 3)
             (POPJ P)
)

(%PUT (QUOTE SHARP-X) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-X) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-X) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-A EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(*READ-SUPPRESS* T 0 :INITIAL-CONTENTS #\( "Array values must be a list." "Initial contents for #A is inconsistent with ~
			   dimensions: #~SA~S" "Dimensions argument to #A not a positive integer: ~S" "No dimensions argument to #A.")
       (CODE-START)
(LABEL 1)    (ADDI Q 10)
             (MOVEM O1 -9 Q)
             (MOVEM O2 -8 Q)
             (MOVEM O3 -7 Q)
             (SKIPN NIL (SPECIAL 0))
             (JRST 4)
             (MOVE O4 (CONSTANT 1))
             (MOVE O1 -9 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 2)
(LABEL 4)    (MOVE O2 (CONSTANT 2))
             (CAME O2 -7 Q)
             (JRST 6)
             (MOVE O4 (CONSTANT 1))
             (MOVE O1 -9 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (MOVE O3 O1)
             (MOVE O1 NIL)
             (MOVE O2 (CONSTANT 3))
             (CALL MAKE-ARRAY 3)
             (JRST 2)
(LABEL 6)    (SKIPN NIL -7 Q)
             (JRST 8)
             (MOVE O1 -7 Q)
             (CALL INTEGERP 1)
             (JUMPE O1 12)
             (MOVE O2 (CONSTANT 2))
             (MOVE O1 -7 Q)
             (CALL < 2)
             (SKIPE NIL O1)
(LABEL 12)   (JRST 10)
             (MOVE O1 -7 Q)
             (CALL MAKE-LIST 1)
             (MOVEM O1 -6 Q)
             (MOVE O2 (CONSTANT 1))
             (MOVE O1 -9 Q)
             (CALL READ-CHAR 2)
             (MOVEM O1 -4 Q)
             (MOVE O2 (CONSTANT 4))
             (CAME O2 -4 Q)
             (JRST 14)
             (MOVE O2 NIL)
             (MOVE O1 -9 Q)
             (CALL LISP::READ-LIST 2)
             (MOVEM O1 -5 Q)
             (JRST 15)
(LABEL 14)   (MOVE O1 (CONSTANT 5))
             (CALL ERROR 1)
             (MOVEM O1 -5 Q)
(LABEL 15)   (MOVE O5 -6 Q)
             (MOVEM O5 -3 Q)
             (MOVE O5 -5 Q)
             (MOVEM O5 -2 Q)
(LABEL 20)   (SKIPE NIL -3 Q)
             (JRST 21)
             (JRST 16)
(LABEL 21)   (MOVE O1 -2 Q)
             (CALL LISTP 1)
             (JUMPE O1 23)
             (MOVE O1 -2 Q)
             (CALL LENGTH 1)
             (MOVE O2 O1)
             (MOVE O1 -3 Q)
             (CALL RPLACA 2)
             (JRST 24)
(LABEL 23)   (MOVE O3 -5 Q)
             (MOVE O1 (CONSTANT 6))
             (MOVE O2 -7 Q)
             (CALL ERROR 3)
(LABEL 24)   (MOVE O1 -3 Q)
             (MOVE O5 1 O1)
             (MOVEM O5 -1 Q)
             (MOVE O1 -2 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
             (MOVE O1 -1 Q)
             (MOVEM O1 -3 Q)
             (MOVE O1 O5)
             (MOVEM O1 -2 Q)
             (JRST 20)
(LABEL 16)   (MOVE O3 -5 Q)
             (MOVE O1 -6 Q)
             (MOVE O2 (CONSTANT 3))
             (CALL MAKE-ARRAY 3)
             (JRST 11)
(LABEL 10)   (MOVE O2 -7 Q)
             (MOVE O1 (CONSTANT 7))
             (CALL ERROR 2)
(LABEL 11)   (JRST 9)
(LABEL 8)    (MOVE O1 (CONSTANT 8))
             (CALL ERROR 1)
(LABEL 9)
(LABEL 2)    (SUBI Q 10)
             (POPJ P)
)

(%PUT (QUOTE SHARP-A) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE DIMENSIONS))) 
(%PUT (QUOTE SHARP-A) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-A) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-S EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(*READ-SUPPRESS* T #\( "Non-list following #S" DEFSTRUCT-DESCRIPTION CONSTRUCTOR SLOT-NUMBERS "No constructor macro for structure in #S: ~S" "Non-list following #S: ~S")
       (CODE-START)
(LABEL 1)    (ADDI Q 11)
             (MOVEM O1 -10 Q)
             (MOVEM O2 -9 Q)
             (MOVEM O3 -8 Q)
             (SKIPN NIL (SPECIAL 0))
             (JRST 4)
             (MOVE O4 (CONSTANT 1))
             (MOVE O1 -10 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 2)
(LABEL 4)    (MOVE O2 (CONSTANT 1))
             (MOVE O1 -10 Q)
             (CALL READ-CHAR 2)
             (MOVEM O1 -6 Q)
             (MOVE O2 (CONSTANT 2))
             (CAME O2 -6 Q)
             (JRST 6)
             (MOVE O2 NIL)
             (MOVE O1 -10 Q)
             (CALL LISP::READ-LIST 2)
             (MOVEM O1 -7 Q)
             (JRST 7)
(LABEL 6)    (MOVE O1 (CONSTANT 3))
             (CALL ERROR 1)
             (MOVEM O1 -7 Q)
(LABEL 7)    (MOVE O1 -7 Q)
             (CALL LISTP 1)
             (JUMPE O1 9)
             (MOVE O1 -7 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 -4 Q)
             (MOVE O2 (CONSTANT 4))
             (MOVE O1 O5)
             (CALL GET 2)
             (MOVEM O1 -5 Q)
             (MOVE O1 5 O1)
             (SPEC-BIND (SPECIAL 5))
             (MOVEM O1 (SPECIAL 5))
             (MOVE O1 -5 Q)
             (MOVE O1 10 O1)
             (SPEC-BIND (SPECIAL 6))
             (MOVEM O1 (SPECIAL 6))
             (SKIPN NIL (SPECIAL 5))
             (JRST 11)
             (MOVE O1 (SPECIAL 5))
             (CALL LIST 1)
             (CALL EVAL 1)
             (MOVEM O1 -3 Q)
             (MOVE O1 -7 Q)
             (MOVE O5 1 O1)
             (MOVEM O5 -2 Q)
(LABEL 16)   (MOVE O1 -2 Q)
             (SKIPE NIL 1 O1)
             (JRST 17)
             (JRST 12)
(LABEL 17)   (MOVE O1 -2 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
             (MOVE O2 (SPECIAL 6))
             (MOVE O1 O5)
             (CALL ASSOC 2)
             (MOVE O5 1 O1)
             (MOVEM O5 -1 Q)
             (MOVE O1 -2 Q)
             (MOVE O1 1 O1)
             (MOVE O3 0 O1)
             (MOVE O1 -3 Q)
             (MOVE O2 O5)
             (CALL LISP::%SETELT 3)
             (MOVE O1 -2 Q)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVEM O1 -2 Q)
             (JRST 16)
(LABEL 12)   (MOVE O1 -3 Q)
             (MOVEI N 1)
             (JRST 10)
(LABEL 11)   (SKIPA)
             (JRST 19)
             (MOVE O2 -7 Q)
             (MOVE O1 (CONSTANT 7))
             (CALL ERROR 2)
(LABEL 19)
(LABEL 10)   (UNBIND 2)
             (JRST 8)
(LABEL 9)    (SKIPA)
             (JRST 21)
             (MOVE O2 -7 Q)
             (MOVE O1 (CONSTANT 8))
             (CALL ERROR 2)
(LABEL 21)
(LABEL 8)
(LABEL 2)    (SUBI Q 11)
             (POPJ P)
)

(%PUT (QUOTE SHARP-S) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-S) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-S) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_INT-SUBST-ARRAY MACRO
       (ENTRY-POINTS (2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(6 "Macro ~S cannot be called with ~S args." INT-SUBST-ARRAY IF EQ AREF SETF DOTIMES ARRAY-DIMENSION 1+ PUSH)
       (CODE-START)
(LABEL 1)    (ADDI Q 14)
             (MOVEM O1 -13 Q)
             (CALL LENGTH 1)
             (MOVEM O1 -12 Q)
             (MOVE O2 (CONSTANT 0))
             (CALL = 2)
             (JUMPN O1 4)
             (MOVE O1 -13 Q)
             (CALL LENGTH 1)
             (CALL 1- 1)
             (MOVE O3 O1)
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 2))
             (CALL ERROR 3)
             (JRST 3)
(LABEL 4)    (SKIPA)
             (JRST 5)
             (MOVE O1 -13 Q)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -11 Q)
             (MOVE O1 -13 Q)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -10 Q)
             (MOVE O1 -13 Q)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -9 Q)
             (MOVE O1 -13 Q)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -8 Q)
             (MOVE O1 -13 Q)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -7 Q)
             (MOVE O1 -9 Q)
             (CALL ARRAY-RANK 1)
             (MOVE O2 O1)
             (MOVE O1 -8 Q)
             (CALL > 2)
             (JUMPE O1 6)
             (MOVE O1 -7 Q)
             (CALL NREVERSE 1)
             (MOVEM O1 -6 Q)
             (MOVE O3 O1)
             (MOVE O1 (CONSTANT 5))
             (MOVE O2 -9 Q)
             (CALL LIST* 3)
             (MOVE O3 O1)
             (MOVE O1 (CONSTANT 4))
             (MOVE O2 -10 Q)
             (CALL LIST 3)
             (MOVEM O1 -5 Q)
             (MOVE O3 -6 Q)
             (MOVE O1 (CONSTANT 5))
             (MOVE O2 -9 Q)
             (CALL LIST* 3)
             (MOVEM O1 -3 Q)
             (MOVE O3 -11 Q)
             (MOVE O1 (CONSTANT 6))
             (MOVE O2 -3 Q)
             (CALL LIST 3)
             (MOVE O3 O1)
             (MOVE O1 (CONSTANT 3))
             (MOVE O2 -5 Q)
             (CALL LIST 3)
             (JRST 7)
(LABEL 6)    (CALL GENSYM 0)
             (MOVEM O1 -6 Q)
             (MOVE O3 -8 Q)
             (MOVE O1 (CONSTANT 8))
             (MOVE O2 -9 Q)
             (CALL LIST 3)
             (MOVE O2 O1)
             (MOVE O1 -6 Q)
             (CALL LIST 2)
             (MOVEM O1 -5 Q)
             (MOVE O5 (CONSTANT 2))
             (MOVEM O5 -4 Q)
             (MOVE O5 -11 Q)
             (MOVEM O5 -3 Q)
             (MOVE O5 -10 Q)
             (MOVEM O5 -2 Q)
             (MOVE O5 -9 Q)
             (MOVEM O5 -1 Q)
             (MOVE O2 -8 Q)
             (MOVE O1 (CONSTANT 9))
             (CALL LIST 2)
             (MOVEM O1 0 Q)
             (MOVE O3 -7 Q)
             (MOVE O1 (CONSTANT 10))
             (MOVE O2 -6 Q)
             (CALL LIST 3)
             (PUSH Q O1)
             (MOVE O1 -5 Q)
             (MOVE O2 -4 Q)
             (MOVE O3 -3 Q)
             (MOVE O4 -2 Q)
             (MOVE O5 -1 Q)
             (CALL LIST 6)
             (MOVE O3 O1)
             (MOVE O1 (CONSTANT 7))
             (MOVE O2 -5 Q)
             (CALL LIST 3)
(LABEL 7)
(LABEL 5)
(LABEL 3)    (SUBI Q 14)
             (POPJ P)
)

(%PUT (QUOTE INT-SUBST-ARRAY) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (NEW OLD ARRAY RANK VAR-LIST))) 
(%PUT (QUOTE INT-SUBST-ARRAY) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE INT-SUBST-ARRAY) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SUBST-ARRAY MACRO
       (ENTRY-POINTS (2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(4 "Macro ~S cannot be called with ~S args." SUBST-ARRAY INT-SUBST-ARRAY (0 NIL))
       (CODE-START)
(LABEL 1)    (ADDI Q 5)
             (MOVEM O1 -4 Q)
             (CALL LENGTH 1)
             (MOVEM O1 -3 Q)
             (MOVE O2 (CONSTANT 0))
             (CALL = 2)
             (JUMPN O1 4)
             (MOVE O1 -4 Q)
             (CALL LENGTH 1)
             (CALL 1- 1)
             (MOVE O3 O1)
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 2))
             (CALL ERROR 3)
             (JRST 3)
(LABEL 4)    (SKIPA)
             (JRST 5)
             (MOVE O1 -4 Q)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -2 Q)
             (MOVE O1 -4 Q)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 -1 Q)
             (MOVE O1 -4 Q)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O1 1 O1)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
             (MOVE O5 (CONSTANT 4))
             (MOVE O1 (CONSTANT 3))
             (MOVE O2 -2 Q)
             (MOVE O3 -1 Q)
             (MOVE O4 0 Q)
             (CALL LIST* 5)
(LABEL 5)
(LABEL 3)    (SUBI Q 5)
             (POPJ P)
)

(%PUT (QUOTE SUBST-ARRAY) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (NEW OLD ARRAY))) 
(%PUT (QUOTE SUBST-ARRAY) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SUBST-ARRAY) (QUOTE %SOURCE-DOCUMENTATION)))) 
(DEFVAR SHARP-CONS-TABLE NIL "Holds the cons cells seen already by circle-subst") 

#_(LAP #0_CIRCLE-SUBST EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(SHARP-CONS-TABLE T)
       (CODE-START)
(LABEL 1)    (ADDI Q 5)
             (MOVEM O1 -4 Q)
             (MOVEM O2 -3 Q)
             (MOVE O1 O2)
             (CALL ATOM 1)
             (JUMPE O1 3)
             (MOVE O2 -4 Q)
             (MOVE O1 -3 Q)
             (CALL ASSQ 2)
             (MOVEM O1 -2 Q)
             (SKIPN NIL -2 Q)
             (JRST 5)
             (MOVE O1 -2 Q)
             (MOVE O1 1 O1)
             (MOVEI N 1)
             (JRST 6)
(LABEL 5)    (MOVE O1 -3 Q)
             (MOVEI N 1)
(LABEL 6)    (JRST 4)
(LABEL 3)    (MOVE O2 (SPECIAL 0))
             (MOVE O1 -3 Q)
             (CALL GETHASH 2)
             (JUMPE O1 8)
             (MOVE O1 -3 Q)
             (MOVEI N 1)
             (JRST 7)
(LABEL 8)    (SKIPA)
             (JRST 9)
             (MOVE O5 -3 Q)
             (MOVEM O5 -2 Q)
             (MOVE O5 (SPECIAL 0))
             (MOVEM O5 -1 Q)
             (MOVE O5 (CONSTANT 1))
             (MOVEM O5 0 Q)
             (MOVE O3 O5)
             (MOVE O1 -2 Q)
             (MOVE O2 -1 Q)
             (CALL LISP::%PUTHASH 3)
             (MOVE O1 -3 Q)
             (MOVE O2 0 O1)
             (MOVE O1 -4 Q)
             (CALL LISP::CIRCLE-SUBST 2)
             (MOVEM O1 -2 Q)
             (MOVE O1 -3 Q)
             (MOVE O2 1 O1)
             (MOVE O1 -4 Q)
             (CALL LISP::CIRCLE-SUBST 2)
             (MOVEM O1 -1 Q)
             (MOVE O1 -3 Q)
             (MOVE O2 0 O1)
             (CAME O2 -2 Q)
             (JRST 10)
             (JRST 11)
(LABEL 10)   (MOVE O2 -2 Q)
             (MOVE O1 -3 Q)
             (CALL RPLACA 2)
(LABEL 11)   (MOVE O1 -3 Q)
             (MOVE O2 1 O1)
             (CAME O2 -1 Q)
             (JRST 12)
             (MOVEI N 1)
             (JRST 13)
(LABEL 12)   (MOVE O2 -1 Q)
             (MOVE O1 -3 Q)
             (CALL RPLACD 2)
(LABEL 13)
(LABEL 9)
(LABEL 7)
(LABEL 4)    (SUBI Q 5)
             (POPJ P)
)

(%PUT (QUOTE CIRCLE-SUBST) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (OLD-NEW-ALIST TREE))) 
(%PUT (QUOTE CIRCLE-SUBST) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE CIRCLE-SUBST) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-EQUAL EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(SHARP-EQUAL-ALIST SHARP-SHARP-ALIST *READ-SUPPRESS* "non-integer label #~S=" T :TEST EQ "Illegal object after #= ~S")
       (CODE-START)
(LABEL 1)    (ADDI Q 11)
             (MOVEM O1 -9 Q)
             (MOVEM O2 -8 Q)
             (MOVEM O3 -7 Q)
             (CALL GENSYM 0)
             (MOVEM O1 -10 Q)
             (SKIPN NIL (SPECIAL 2))
             (JRST 4)
             (SETZB O1 N)
             (JRST 2)
(LABEL 4)    (MOVE O1 -7 Q)
             (CALL INTEGERP 1)
             (JUMPN O1 7)
             (MOVE O2 -7 Q)
             (MOVE O1 (CONSTANT 3))
             (CALL ERROR 2)
(LABEL 7)    (MOVE O2 -10 Q)
             (MOVE O1 -7 Q)
             (CALL CONS 2)
             (MOVEM O1 -6 Q)
             (MOVE O2 (SPECIAL 1))
             (CALL CONS 2)
             (MOVEM O1 (SPECIAL 1))
             (MOVE O4 (CONSTANT 4))
             (MOVE O1 -9 Q)
             (MOVE O2 (CONSTANT 4))
             (MOVE O3 NIL)
             (CALL READ 4)
             (MOVEM O1 -5 Q)
             (MOVE O2 O1)
             (MOVE O1 -10 Q)
             (CALL CONS 2)
             (MOVEM O1 -4 Q)
             (MOVE O2 (SPECIAL 0))
             (CALL CONS 2)
             (MOVEM O1 (SPECIAL 0))
             (MOVE O1 -5 Q)
             (CALL LISTP 1)
             (JUMPE O1 10)
             (MOVE O5 (SPECIAL 0))
             (MOVEM O5 -4 Q)
             (MOVE O2 -5 Q)
             (MOVE O1 O5)
             (CALL LISP::CIRCLE-SUBST 2)
             (MOVEM O1 -5 Q)
             (JRST 9)
(LABEL 10)   (MOVE O1 -5 Q)
             (CALL VECTORP 1)
             (JUMPE O1 11)
             (MOVE O5 (SPECIAL 0))
             (MOVEM O5 -3 Q)
             (MOVE O1 O5)
             (MOVE O5 0 O1)
             (MOVEM O5 -2 Q)
(LABEL 16)   (MOVE O1 -3 Q)
             (CALL ATOM 1)
             (JUMPE O1 17)
             (JRST 12)
(LABEL 17)   (MOVE O1 -2 Q)
             (MOVE O5 1 O1)
             (MOVEM O5 -1 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
             (MOVE O5 (CONSTANT 6))
             (MOVE O1 -1 Q)
             (MOVE O2 0 Q)
             (MOVE O3 -5 Q)
             (MOVE O4 (CONSTANT 5))
             (CALL NSUBSTITUTE 5)
             (MOVEM O1 -5 Q)
             (MOVE O1 -3 Q)
             (MOVE O1 1 O1)
             (MOVEM O1 -3 Q)
             (MOVE O1 0 O1)
             (MOVEM O1 -2 Q)
             (JRST 16)
(LABEL 12)   (JRST 9)
(LABEL 11)   (SKIPA)
             (JRST 19)
             (MOVE O2 -5 Q)
             (MOVE O1 (CONSTANT 7))
             (CALL ERROR 2)
(LABEL 19)
(LABEL 9)    (MOVE O1 -5 Q)
             (MOVEI N 1)
(LABEL 2)    (SUBI Q 11)
             (POPJ P)
)

(%PUT (QUOTE SHARP-EQUAL) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE LABEL &AUX (REF (GENSYM))))) 
(%PUT (QUOTE SHARP-EQUAL) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-EQUAL) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-SHARP EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(SHARP-EQUAL-ALIST SHARP-SHARP-ALIST *READ-SUPPRESS* "Object is not labelled #~S#" "Non-integer label #~S#")
       (CODE-START)
(LABEL 1)    (ADDI Q 6)
             (MOVEM O1 -5 Q)
             (MOVEM O2 -4 Q)
             (MOVEM O3 -3 Q)
             (SKIPN NIL (SPECIAL 2))
             (JRST 4)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 2)
(LABEL 4)    (MOVE O1 -3 Q)
             (CALL INTEGERP 1)
             (JUMPE O1 6)
             (MOVE O2 (SPECIAL 1))
             (MOVE O1 -3 Q)
             (CALL ASSOC 2)
             (MOVEM O1 -2 Q)
             (SKIPN NIL -2 Q)
             (JRST 8)
             (MOVE O1 -2 Q)
             (MOVE O5 1 O1)
             (MOVEM O5 0 Q)
             (MOVE O2 (SPECIAL 0))
             (MOVE O1 O5)
             (CALL ASSOC 2)
             (MOVE O5 1 O1)
             (MOVEM O5 -1 Q)
             (SKIPN NIL -1 Q)
             (JRST 10)
             (MOVE O1 -1 Q)
             (MOVEI N 1)
             (JRST 11)
(LABEL 10)   (MOVE O1 -2 Q)
             (MOVE O1 1 O1)
             (MOVEI N 1)
(LABEL 11)   (JRST 9)
(LABEL 8)    (MOVE O2 -3 Q)
             (MOVE O1 (CONSTANT 3))
             (CALL ERROR 2)
(LABEL 9)    (JRST 7)
(LABEL 6)    (MOVE O2 -3 Q)
             (MOVE O1 (CONSTANT 4))
             (CALL ERROR 2)
(LABEL 7)
(LABEL 2)    (SUBI Q 6)
             (POPJ P)
)

(%PUT (QUOTE SHARP-SHARP) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (IGNORE1 IGNORE2 LABEL))) 
(%PUT (QUOTE SHARP-SHARP) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-SHARP) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-PLUS EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(*READ-SUPPRESS* T)
       (CODE-START)
(LABEL 1)    (ADDI Q 4)
             (MOVEM O1 -3 Q)
             (MOVEM O2 -2 Q)
             (MOVEM O3 -1 Q)
             (SKIPN NIL (SPECIAL 0))
             (JRST 4)
             (MOVE O4 (CONSTANT 1))
             (MOVE O1 -3 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (SETZB O1 N)
             (JRST 3)
(LABEL 4)    (MOVE O4 (CONSTANT 1))
             (MOVE O1 -3 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (CALL FEATUREP 1)
             (JUMPE O1 5)
             (MOVE O4 (CONSTANT 1))
             (MOVE O1 -3 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (JRST 3)
(LABEL 5)    (SKIPA)
             (JRST 6)
             (MOVE O5 (CONSTANT 1))
             (MOVEM O5 0 Q)
             (MOVE O1 O5)
             (SPEC-BIND (SPECIAL 0))
             (MOVEM O1 (SPECIAL 0))
             (MOVE O4 (CONSTANT 1))
             (MOVE O1 -3 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (SETZB O1 N)
             (UNBIND 1)
(LABEL 6)
(LABEL 3)    (SUBI Q 4)
             (POPJ P)
)

(%PUT (QUOTE SHARP-PLUS) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-PLUS) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-PLUS) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-MINUS EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(*READ-SUPPRESS* T)
       (CODE-START)
(LABEL 1)    (ADDI Q 4)
             (MOVEM O1 -3 Q)
             (MOVEM O2 -2 Q)
             (MOVEM O3 -1 Q)
             (SKIPN NIL (SPECIAL 0))
             (JRST 4)
             (MOVE O4 (CONSTANT 1))
             (MOVE O1 -3 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (SETZB O1 N)
             (JRST 3)
(LABEL 4)    (MOVE O4 (CONSTANT 1))
             (MOVE O1 -3 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (CALL FEATUREP 1)
             (JUMPN O1 5)
             (MOVE O4 (CONSTANT 1))
             (MOVE O1 -3 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (JRST 3)
(LABEL 5)    (SKIPA)
             (JRST 6)
             (MOVE O5 (CONSTANT 1))
             (MOVEM O5 0 Q)
             (MOVE O1 O5)
             (SPEC-BIND (SPECIAL 0))
             (MOVEM O1 (SPECIAL 0))
             (MOVE O4 (CONSTANT 1))
             (MOVE O1 -3 Q)
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (SETZB O1 N)
             (UNBIND 1)
(LABEL 6)
(LABEL 3)    (SUBI Q 4)
             (POPJ P)
)

(%PUT (QUOTE SHARP-MINUS) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-MINUS) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-MINUS) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-C EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(T *READ-SUPPRESS* 2 "Illegal complex number format")
       (CODE-START)
(LABEL 1)    (ADDI Q 5)
             (MOVEM O1 -4 Q)
             (MOVEM O2 -3 Q)
             (MOVEM O3 -2 Q)
             (MOVE O4 (CONSTANT 0))
             (MOVE O2 NIL)
             (MOVE O3 O2)
             (CALL READ 4)
             (MOVEM O1 -1 Q)
             (SKIPN NIL (SPECIAL 1))
             (JRST 4)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 2)
(LABEL 4)    (MOVE O1 -1 Q)
             (CALL LENGTH 1)
             (MOVEM O1 0 Q)
             (MOVE O2 (CONSTANT 2))
             (CALL = 2)
             (JUMPE O1 6)
             (MOVE O1 -1 Q)
             (MOVE O5 0 O1)
             (MOVEM O5 0 Q)
             (MOVE O1 1 O1)
             (MOVE O2 0 O1)
             (MOVE O1 O5)
             (CALL COMPLEX 2)
             (JRST 7)
(LABEL 6)    (MOVE O2 -1 Q)
             (MOVE O1 (CONSTANT 3))
             (CALL ERROR 2)
(LABEL 7)
(LABEL 2)    (SUBI Q 5)
             (POPJ P)
)

(%PUT (QUOTE SHARP-C) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-C) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-C) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-VERTICAL-BAR EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_(1 T #\| #\#)
       (CODE-START)
(LABEL 1)    (ADDI Q 8)
             (MOVEM O1 -7 Q)
             (MOVEM O2 -6 Q)
             (MOVEM O3 -5 Q)
             (MOVE O5 (CONSTANT 0))
             (MOVEM O5 -4 Q)
             (MOVE O2 (CONSTANT 1))
             (CALL READ-CHAR 2)
             (MOVEM O1 -3 Q)
             (MOVE O2 (CONSTANT 1))
             (MOVE O1 -7 Q)
             (CALL READ-CHAR 2)
             (MOVEM O1 -2 Q)
(LABEL 7)    (JRST 8)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (JRST 3)
(LABEL 8)    (MOVE O2 (CONSTANT 2))
             (CAME O2 -3 Q)
             (JRST 12)
             (MOVE O2 (CONSTANT 3))
             (CAME O2 -2 Q)
(LABEL 12)   (JRST 11)
             (MOVE O1 -4 Q)
             (CALL 1- 1)
             (MOVEM O1 -4 Q)
             (CALL ZEROP 1)
             (JUMPE O1 15)
             (SETZB O1 N)
             (JRST 3)
(LABEL 15)   (MOVE O2 (CONSTANT 1))
             (MOVE O1 -7 Q)
             (CALL READ-CHAR 2)
             (MOVEM O1 -2 Q)
             (JRST 10)
(LABEL 11)   (MOVE O2 (CONSTANT 3))
             (CAME O2 -3 Q)
             (JRST 18)
             (MOVE O2 (CONSTANT 2))
             (CAME O2 -2 Q)
(LABEL 18)   (JRST 17)
             (MOVE O2 (CONSTANT 1))
             (MOVE O1 -7 Q)
             (CALL READ-CHAR 2)
             (MOVEM O1 -2 Q)
             (MOVE O1 -4 Q)
             (CALL 1+ 1)
             (MOVEM O1 -4 Q)
(LABEL 17)
(LABEL 10)   (MOVE O5 -2 Q)
             (MOVEM O5 -1 Q)
             (MOVE O2 (CONSTANT 1))
             (MOVE O1 -7 Q)
             (CALL READ-CHAR 2)
             (MOVEM O1 0 Q)
             (MOVE O1 -1 Q)
             (MOVEM O1 -3 Q)
             (MOVE O1 0 Q)
             (MOVEM O1 -2 Q)
             (JRST 7)
(LABEL 3)    (SUBI Q 8)
             (POPJ P)
)

(%PUT (QUOTE SHARP-VERTICAL-BAR) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (STREAM IGNORE1 IGNORE2))) 
(%PUT (QUOTE SHARP-VERTICAL-BAR) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-VERTICAL-BAR) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-ILLEGAL EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY))
       #0_("Illegal sharp character ~S")
       (CODE-START)
(LABEL 1)    (ADDI Q 3)
             (MOVEM O1 -2 Q)
             (MOVEM O2 -1 Q)
             (MOVEM O3 0 Q)
             (MOVE O1 (CONSTANT 0))
             (CALL ERROR 2)
             (SUBI Q 3)
             (POPJ P)
)

(%PUT (QUOTE SHARP-ILLEGAL) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (IGNORE1 SUB-CHAR IGNORE2))) 
(%PUT (QUOTE SHARP-ILLEGAL) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-ILLEGAL) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-INIT EXPR
       (ENTRY-POINTS (1 2 2-MANY 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(STD-LISP-READTABLE :SIZE 50 SHARP-CONS-TABLE *READTABLE*)
       (CODE-START)
(LABEL 1)    (MOVE O1 NIL)
(LABEL 2)    (ADDI Q 2)
             (MOVEM O1 -1 Q)
             (SKIPE NIL -1 Q)
             (JRST 4)
             (MOVE O2 (CONSTANT 2))
             (MOVE O1 (CONSTANT 1))
             (CALL MAKE-HASH-TABLE 2)
             (MOVEM O1 (SPECIAL 3))
(LABEL 4)    (MOVE O5 (SPECIAL 4))
             (MOVEM O5 0 Q)
             (MOVE O2 -1 Q)
             (MOVE O1 O5)
             (CALL LISP::SHARP-INIT* 2)
             (MOVE O5 (SPECIAL 0))
             (MOVEM O5 0 Q)
             (MOVE O2 -1 Q)
             (MOVE O1 O5)
             (CALL LISP::SHARP-INIT* 2)
             (MOVE O1 NIL)
             (MOVEI N 1)
             (SUBI Q 2)
             (POPJ P)
)

(%PUT (QUOTE SHARP-INIT) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (&OPTIONAL REINIT))) 
(%PUT (QUOTE SHARP-INIT) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-INIT) (QUOTE %SOURCE-DOCUMENTATION)))) 

#_(LAP #0_SHARP-INIT* EXPR
       (ENTRY-POINTS (2-FEW 2-FEW 1 2-MANY 2-MANY 2-MANY 2-MANY))
       #0_(*READTABLE* #\# #\\ SHARP-BACKSLASH #\' SHARP-QUOTE #\( SHARP-LEFT-PAREN #\* SHARP-STAR #\: SHARP-COLON #\. SHARP-DOT #\, SHARP-COMMA #\R SHARP-R #\r #\B SHARP-B #\b #\O SHARP-O #\o #\X SHARP-X #\x #\A SHARP-A #\a #\S SHARP-S #\s #\= SHARP-EQUAL SHARP-SHARP #\+ SHARP-PLUS #\- SHARP-MINUS #\C SHARP-C #\c #\| SHARP-VERTICAL-BAR #\TAB SHARP-ILLEGAL #\SPACE #\) #\< #\PAGE #\RETURN)
       (CODE-START)
(LABEL 1)    (ADDI Q 3)
             (MOVEM O1 -2 Q)
             (MOVEM O2 -1 Q)
             (MOVE O5 O1)
             (MOVEM O5 0 Q)
             (SPEC-BIND (SPECIAL 0))
             (MOVEM O1 (SPECIAL 0))
             (SKIPE NIL -1 Q)
             (JRST 3)
             (MOVE O1 (CONSTANT 1))
             (CALL MAKE-DISPATCH-MACRO-CHARACTER 1)
(LABEL 3)    (MOVE O3 (CONSTANT 3))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 2))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 5))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 4))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 7))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 6))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 9))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 8))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 11))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 10))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 13))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 12))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 15))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 14))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 17))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 16))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 17))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 18))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 20))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 19))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 20))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 21))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 23))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 22))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 23))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 24))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 26))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 25))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 26))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 27))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 29))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 28))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 29))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 30))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 32))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 31))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 32))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 33))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 35))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 34))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 36))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 1))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 38))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 37))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 40))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 39))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 42))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 41))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 42))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 43))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 45))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 44))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 47))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 46))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 47))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 48))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 47))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 49))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 47))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 50))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 47))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 51))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (MOVE O3 (CONSTANT 47))
             (MOVE O1 (CONSTANT 1))
             (MOVE O2 (CONSTANT 52))
             (CALL SET-DISPATCH-MACRO-CHARACTER 3)
             (UNBIND 1)
             (SUBI Q 3)
             (POPJ P)
)

(%PUT (QUOTE SHARP-INIT*) (QUOTE %ARGS-DOCUMENTATION) (QUOTE (RT REINIT))) 
(%PUT (QUOTE SHARP-INIT*) (QUOTE %SOURCE-DOCUMENTATION) (CONS (QUOTE "CARMEN::SS:<CLISP.UPSALA>SHARPM.CLISP.10") (GET (QUOTE SHARP-INIT*) (QUOTE %SOURCE-DOCUMENTATION)))) 