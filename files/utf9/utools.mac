	TITLE UTOOLS Unicode conversion routines
	SUBTTL Written by Mark Crispin - April 2005

; The Unicode Toolkit provided in this Distribution is
; Copyright 2005 Panda Programming
;
; The full text of our legal notices is contained in the file called
; CPYRIT.TXT, included with this Distribution

	SEARCH MACSYM
	.REQUIRE SYS:MACREL
	SALL
	STDAC.			; standard ACs

	SUBTTL UTF-9 Routines

; Return Unicode character as UCS-4 value from UTF-9 string
; Accepts: P1/ 9-bit byte pointer to UTF-9 string
; Returns +1: Failure, P1/ updated byte pointer
;	  +2: Always, T1/ UCS-4 value, P1/ updated byte pointer

UT92U4:	SAVEAC <T2>
	ILDB T1,P1		; get first nonet
	TRZN T1,400		; has continuation?
	 RETSKP			; no, done
	JUMPE T1,R		; may not start with continued NUL
	DO.
	  LSH T1,^D8		; shift UCS-4 value
	  CAML T1,[4,,200000]	; valid Unicode?
	   RET			; no, error
	  ILDB T2,P1		; get next nonet
	  TRZE T2,400		; continued?
	  IFSKP.
	    IOR T1,T2		; yes, insert octet
	    LOOP.		; and go to get next nonet
	  ENDIF.
	ENDDO.
	XOR T1,T2		; insert final octet
	CAIL T1,154000		; must not be between 0xd800
	 CAIL T1,157777		; ...and 0xdfff
	  RETSKP		; good character
	RET			; error, surrogate pair value

; Write UCS-4 value to UTF-9 string
; Accepts: P1/ 9-bit byte pointer to UTF-9 string
;	   T1/ UCS-4 value to write
; Returns +1: Failure
;	  +2: Success, P1/ updated byte pointer
; (T1, T2) must be an accumulator pair

U42UT9:	SAVEAC <T1,T2>
	TLNN T1,760000		; valid UCS-4?
	 CAML T1,[4,,200000]	; yes, valid Unicode?
	  RET			; no to either
	CAIL T1,154000		; must not be between 0xd800
	 CAIL T1,157777		; ...and 0xdfff
	  AOSA (P)		; valid, set skip return
	   RET			; error, surrogate pair value
	SETO T2,		; we'll need some of these 1-bits later
	ASHC T1,-^D8		; low octet becomes nonet with high 0-bit
	DO.
	  IFN. T1		; more octets to do?
	    LSHC T1,-^D8	; yes, shift next octet into T2
	    ROT T2,-1		; turn it into nonet with high 1 bit
	    CALL TOP.		; recurse for remainder
	  ENDIF.
	ENDDO.
	LSHC T1,^D9		; get next nonet back from T2
	IDPB T1,P1		; write nonet
	RET

	SUBTTL UTF-18 Routines

; Return Unicode character as UCS-4 value from UTF-18 value
; Accepts: T1/ UTF-18 value
; Returns +1: Failure
;	  +2: Success, T1/ UCS-4 value

U182U4:	JXN T1,.LHALF,R		; must be 18-bit value
	CAIL T1,154000		; must not be between 0xd800
	 CAIL T1,157777		; ...and 0xdfff
	IFSKP. <RET>		; error, surrogate pair value
	CAIL T1,600000		; planes 0, 1, or 2?
	 ADD T1,[1,,600000]     ; no, plane 14; shift by 0x70000
	RETSKP


; Return Unicode character as UTF-18 value from UCS-4 value
; Accepts: T1/ UCS-4 value
; Returns +1: Failure
;	  +2: Success, T1/ UTF-18 value

U42U18:	CAIL T1,154000		; must not be between 0xd800
	 CAIL T1,157777		; ...and 0xdfff
	IFSKP. <RET>		; error, surrogate pair value
	CAIGE T1,600000		; planes 0, 1, or 2?
	 RETSKP			; yes - transformation is identity,	
	CAIL T1,[3,,400000]     ; no, planes 3 through 13?
	 CAILE T1,[3,,577777]   ; ... or planes 15 or higher?
	  RET			; error, not representable in UTF-18
	SUB T1,[1,,600000]	; no, plane 14; shift by 0x70000
	RETSKP

	SUBTTL UTF-8 Routines

; Return Unicode character as UCS-4 value from UTF-8 string
; Accepts: P1/ 8-bit byte pointer to UTF-8 string
; Returns +1: Failure, P1/ updated byte pointer
;	  +2: Always, T1/ UCS-4 value, P1/ updated byte pointer

UT82U4:	SAVEAC <T2>
	ILDB T1,P1		; get first octet
	CAIGE T1,200		; ASCII value?
	 RETSKP			; yes, done
	JXE T1,100,R		; error, continuation in first octet
	IFXE. T1,40		; U+0080 - U+07FF?
	  ANDI T1,37		; save first 5 bits
	  LSH T1,6		; shift to position
	ELSE.
	  IFXE. T1,20		; U+0800 - U+FFFF?
	    ANDI T1,17		; save first 4 bits
	    LSH T1,^D12		; shift to position
	  ELSE.
	    TXNE T1,10		; U+10000 - U+10FFFF?
	     RET		; error, not a valid prefix for Unicode
	    ANDI T1,7		; save first 3 bits
	    LSH T1,^D18		; shift to position
	    ILDB T2,P2		; get continuation octet
	    TRZE T2,200		; must be 10xxxxxx
	     TRNE T2,100
	      RET		; error, not valid continuation
	    DPB T2,[POINT 6,T1,23]
	  ENDIF.
	  ILDB T2,P2		; get continuation octet
	  TRZE T2,200		; must be 10xxxxxx
	   TRNE T2,100
	    RET			; error, not valid continuation
	  DPB T2,[POINT 6,T1,29]
	ENDIF.
	ILDB T2,P2		; get continuation octet
	TRZE T2,200		; must be 10xxxxxx
	 TRNE T2,100
	  RET			; error, not valid continuation
	DPB T2,[POINT 6,T1,35]	; assemble finished character
	CAML T1,[4,,200000]	; valid Unicode?
	 RET			; error, not valid Unicode
	CAIL T1,154000		; must not be between 0xd800
	 CAIL T1,157777		; ...and 0xdfff
	  RETSKP		; good character
	RET			; error, surrogate pair value

; Write UCS-4 value to UTF-8 string
; Accepts: P1/ 8-bit byte pointer to UTF-8 string
;	   T1/ UCS-4 value to write
; Returns +1: Failure
;	  +2: Success, P1/ updated byte pointer

U42UT8:	SAVEAC <T2>
	TLNN T1,760000		; valid UCS-4?
	 CAML T1,[4,,200000]	; yes, valid Unicode?
	  RET			; no to either
	CAIL T1,154000		; must not be between 0xd800
	 CAIL T1,157777		; ...and 0xdfff
	  SKIPA T2,T1		; good, copy value in case ASCII
	   RET			; error, surrogate pair value
	CAIGE T1,200		; non-ASCII value?
	IFSKP.
	  CAIL T1,3777		; U+0080 - U+07FF?
	  IFSKP.
	    LDB T2,[POINT 5,T1,29]
	    IORI T2,300		; set 1 octet following
	    IDPB T2,P1
	  ELSE.
	    CAIL T1,177777	; U+0800 - U+FFFF?
	    IFSKP.
	      LDB T2,[POINT 4,T1,23]
	      IORI T2,340	; set 2 octets following
	      IDPB T2,P1
	    ELSE.
	      LDB T2,[POINT 3,T1,17]
	      IORI T2,360	; set 3 octets following
	      IDPB T2,P1
	      LDB T2,[POINT 6,T1,23]
	      IORI T2,200	; set continuation bit
	      IDPB T2,P1	; write third-to-last octet
	    ENDIF.
	    LDB T2,[POINT 6,T1,29]
	    IORI T2,200		; set continuation bit
	    IDPB T2,P1		; write next-to-last octet
	  ENDIF.
	  LDB T2,[POINT 6,T1,35]
	  IORI T2,200		; set continuation bit
	ENDIF.
	RETSKP

	SUBTTL UTF-16 Routines

; Return Unicode character as UCS-4 value from UTF-16 string
; Accepts: P1/ 16-bit byte pointer to UTF-16 string
; Returns +1: Failure, P1/ updated byte pointer
;	  +2: Success, T1/ UCS-4 value, P1/ updated byte pointer

U162U4:	SAVEAC <T2>
	ILDB T1,P1		; get first hexadecet
	CAIL T1,154000		; if not between 0xd800
	 CAIL T1,157777		; ...and 0xdfff
	  RETSKP		; then return BMP value
	CAIL T1,156000		; must be within high surrogate range
	 RET			; bad high surrogate
	ILDB T2,P1		; get low surrogate
	CAIL T2,156000		; must be between 0xdc00
	 CAILE T2,157777	; ...and 0xdfff
	  RET			; bad low surrogate
	EXCH T1,T2		; T1/ low, T2/ high
	DPB T2,[POINT 10,T1,25]	; assemble character
	ADDI T2,200000		; planes are 0x1 - 0x10
	RETSKP


; Write UCS-4 value to UTF-16 string
; Accepts: P1/ 9-bit byte pointer to UTF-16 string
;	   T1/ UCS-4 value to write
; Returns +1: Failure
;	  +2: Success, P1/ updated byte pointer

U42U16:	SAVEAC <T1,T2>
	CAIL T1,154000		; must not be between 0xd800
	 CAIL T1,157777		; ...and 0xdfff
	IFSKP. <RET>		; error, surrogate pair value
	CAIGE T1,200000		; need to write surrogates?
	IFSKP.
	  LDB T2,[POINT 10,T1,25]
	  ADDI T2,153700	; make high surrogate (0xd800 and plane - 1)
	  IDPB T2,P1
	  ANDI T1,1777		; make low surrogate
	  ADDI T1,156000	; (0xdc00)
	ENDIF.
	IDPB T1,P1		; write BMP value or low surrogate
	RETSKP

	END
